using System;
using NetRuntimeSystem = System;
using System.ComponentModel;
using NetOffice.Attributes;
using NetOffice.MSProjectApi;

namespace NetOffice.MSProjectApi.Behind
{
	/// <summary>
	/// DispatchInterface _MSProject
	/// SupportByVersion MSProject, 11,12,14
	/// </summary>
	[SupportByVersion("MSProject", 11,12,14)]
	[EntityType(EntityType.IsDispatchInterface), BaseType]
 	public class _MSProject : COMObject, NetOffice.MSProjectApi._MSProject
	{
		#pragma warning disable

		#region Type Information

        /// <summary>
        /// Contract Type
        /// </summary>
        [EditorBrowsable(EditorBrowsableState.Advanced), Browsable(false), Category("NetOffice"), CoreOverridden]
        public override Type ContractType
        {
            get
            {
                if(null == _contractType)
                    _contractType = typeof(NetOffice.MSProjectApi._MSProject);
                return _contractType;
            }
        }
        private static Type _contractType;


		/// <summary>
		/// Instance Type
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Advanced), Browsable(false), Category("NetOffice"), CoreOverridden]
		public override Type InstanceType
		{
			get
			{
				return LateBindingApiWrapperType;
			}
		}

        private static Type _type;

		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
        public static Type LateBindingApiWrapperType
        {
            get
            {
                if (null == _type)
                    _type = typeof(_MSProject);
                return _type;
            }
        }

        #endregion

		#region Ctor

		/// <summary>
		/// Stub Ctor, not indented to use
		/// </summary>
		public _MSProject() : base()
		{

		}

		#endregion

		#region Properties

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Application Application
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Application>(this, "Application", typeof(NetOffice.MSProjectApi.Application));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "Application", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Application Parent
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Application>(this, "Parent", typeof(NetOffice.MSProjectApi.Application));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "Parent", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Projects Projects
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Projects>(this, "Projects", typeof(NetOffice.MSProjectApi.Projects));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "Projects", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Selection ActiveSelection
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Selection>(this, "ActiveSelection", typeof(NetOffice.MSProjectApi.Selection));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "ActiveSelection", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Cell ActiveCell
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Cell>(this, "ActiveCell", typeof(NetOffice.MSProjectApi.Cell));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "ActiveCell", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Project ActiveProject
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Project>(this, "ActiveProject", typeof(NetOffice.MSProjectApi.Project));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "ActiveProject", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Window ActiveWindow
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Window>(this, "ActiveWindow", typeof(NetOffice.MSProjectApi.Window));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "ActiveWindow", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SupportsMultipleDocuments
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "SupportsMultipleDocuments");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "SupportsMultipleDocuments", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SupportsMultipleWindows
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "SupportsMultipleWindows");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "SupportsMultipleWindows", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Visible
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "Visible");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "Visible", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string PathSeparator
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "PathSeparator");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "PathSeparator", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string Caption
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "Caption");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "Caption", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string Name
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "Name");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "Name", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string Path
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "Path");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "Path", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string Version
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "Version");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "Version", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjWindowState WindowState
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteEnumPropertyGet<NetOffice.MSProjectApi.Enums.PjWindowState>(this, "WindowState");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteEnumPropertySet(this, "WindowState", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 Left
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteInt32PropertyGet(this, "Left");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "Left", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 Top
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteInt32PropertyGet(this, "Top");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "Top", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 Width
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteInt32PropertyGet(this, "Width");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "Width", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 Height
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteInt32PropertyGet(this, "Height");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "Height", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjDateOrder DateOrder
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteEnumPropertyGet<NetOffice.MSProjectApi.Enums.PjDateOrder>(this, "DateOrder");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteEnumPropertySet(this, "DateOrder", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string DateSeparator
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "DateSeparator");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DateSeparator", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string ThousandSeparator
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "ThousandSeparator");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "ThousandSeparator", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string DecimalSeparator
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "DecimalSeparator");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DecimalSeparator", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string ListSeparator
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "ListSeparator");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "ListSeparator", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string TimeSeparator
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "TimeSeparator");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "TimeSeparator", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TwelveHourTimeFormat
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "TwelveHourTimeFormat");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "TwelveHourTimeFormat", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string AMText
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "AMText");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "AMText", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string PMText
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "PMText");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "PMText", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string DefaultView
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "DefaultView");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DefaultView", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayStatusBar
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayStatusBar");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayStatusBar", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayAlerts
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayAlerts");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayAlerts", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayEntryBar
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayEntryBar");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayEntryBar", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayScrollBars
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayScrollBars");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayScrollBars", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayWindowsInTaskbar
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayWindowsInTaskbar");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayWindowsInTaskbar", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjCalculation Calculation
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteEnumPropertyGet<NetOffice.MSProjectApi.Enums.PjCalculation>(this, "Calculation");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteEnumPropertySet(this, "Calculation", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AutoLevel
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "AutoLevel");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "AutoLevel", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AutoClearLeveling
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "AutoClearLeveling");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "AutoClearLeveling", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelWithinSlack
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "LevelWithinSlack");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "LevelWithinSlack", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjLevelOrder LevelOrder
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteEnumPropertyGet<NetOffice.MSProjectApi.Enums.PjLevelOrder>(this, "LevelOrder");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteEnumPropertySet(this, "LevelOrder", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjLevelPeriodBasis LevelPeriodBasis
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteEnumPropertyGet<NetOffice.MSProjectApi.Enums.PjLevelPeriodBasis>(this, "LevelPeriodBasis");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteEnumPropertySet(this, "LevelPeriodBasis", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelIndividualAssignments
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "LevelIndividualAssignments");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "LevelIndividualAssignments", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelProposedBookings
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "LevelProposedBookings");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "LevelProposedBookings", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingCanSplit
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "LevelingCanSplit");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "LevelingCanSplit", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MoveAfterReturn
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "MoveAfterReturn");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "MoveAfterReturn", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayScheduleMessages
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayScheduleMessages");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayScheduleMessages", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjWeekday StartWeekOn
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteEnumPropertyGet<NetOffice.MSProjectApi.Enums.PjWeekday>(this, "StartWeekOn");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteEnumPropertySet(this, "StartWeekOn", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjMonth StartYearIn
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteEnumPropertyGet<NetOffice.MSProjectApi.Enums.PjMonth>(this, "StartYearIn");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteEnumPropertySet(this, "StartYearIn", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CellDragAndDrop
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "CellDragAndDrop");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "CellDragAndDrop", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string UserName
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "UserName");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "UserName", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public virtual bool DisplayNotesIndicator
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayNotesIndicator");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayNotesIndicator", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AskToUpdateLinks
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "AskToUpdateLinks");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "AskToUpdateLinks", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayPlanningWizard
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayPlanningWizard");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayPlanningWizard", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayWizardUsage
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayWizardUsage");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayWizardUsage", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayWizardErrors
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayWizardErrors");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayWizardErrors", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayWizardScheduling
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayWizardScheduling");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayWizardScheduling", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public virtual bool ShowTipOfDay
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "ShowTipOfDay");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "ShowTipOfDay", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public virtual bool ShowToolTips
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "ShowToolTips");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "ShowToolTips", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ShowWelcome
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "ShowWelcome");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "ShowWelcome", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LoadLastFile
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "LoadLastFile");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "LoadLastFile", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PromptForSummaryInfo
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "PromptForSummaryInfo");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "PromptForSummaryInfo", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayOLEIndicator
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayOLEIndicator");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayOLEIndicator", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjDateFormat DefaultDateFormat
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteEnumPropertyGet<NetOffice.MSProjectApi.Enums.PjDateFormat>(this, "DefaultDateFormat");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteEnumPropertySet(this, "DefaultDateFormat", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DayLeadingZero
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DayLeadingZero");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DayLeadingZero", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MonthLeadingZero
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "MonthLeadingZero");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "MonthLeadingZero", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimeLeadingZero
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "TimeLeadingZero");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "TimeLeadingZero", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public virtual bool CopyResourceUsageHeader
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "CopyResourceUsageHeader");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "CopyResourceUsageHeader", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 RecentFilesMaximum
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteInt32PropertyGet(this, "RecentFilesMaximum");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "RecentFilesMaximum", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayRecentFiles
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayRecentFiles");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayRecentFiles", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public virtual bool MacroVirusProtection
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "MacroVirusProtection");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "MacroVirusProtection", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjAssignmentUnits ShowAssignmentUnitsAs
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteEnumPropertyGet<NetOffice.MSProjectApi.Enums.PjAssignmentUnits>(this, "ShowAssignmentUnitsAs");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteEnumPropertySet(this, "ShowAssignmentUnitsAs", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AutomaticallyFillPhoneticFields
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "AutomaticallyFillPhoneticFields");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "AutomaticallyFillPhoneticFields", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DefaultAutoFilter
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DefaultAutoFilter");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DefaultAutoFilter", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ShowEstimatedDuration
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "ShowEstimatedDuration");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "ShowEstimatedDuration", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool NewTasksEstimated
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "NewTasksEstimated");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "NewTasksEstimated", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.OfficeApi.Assistant Assistant
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.OfficeApi.Assistant>(this, "Assistant", typeof(NetOffice.OfficeApi.Assistant));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "Assistant", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayViewBar
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayViewBar");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayViewBar", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.VBIDEApi.VBE VBE
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.VBIDEApi.VBE>(this, "VBE", typeof(NetOffice.VBIDEApi.VBE));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "VBE", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjEnableCancelKey EnableCancelKey
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteEnumPropertyGet<NetOffice.MSProjectApi.Enums.PjEnableCancelKey>(this, "EnableCancelKey");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteEnumPropertySet(this, "EnableCancelKey", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UserControl
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "UserControl");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "UserControl", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Double UsableWidth
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteDoublePropertyGet(this, "UsableWidth");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "UsableWidth", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Double UsableHeight
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteDoublePropertyGet(this, "UsableHeight");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "UsableHeight", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object StatusBar
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteVariantPropertyGet(this, "StatusBar");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteVariantPropertySet(this, "StatusBar", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.OfficeApi.FileSearch FileSearch
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.OfficeApi.FileSearch>(this, "FileSearch", typeof(NetOffice.OfficeApi.FileSearch));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "FileSearch", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ScreenUpdating
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "ScreenUpdating");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "ScreenUpdating", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplayProjectGuide
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "DisplayProjectGuide");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "DisplayProjectGuide", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.OfficeApi.Enums.MsoAutomationSecurity AutomationSecurity
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteEnumPropertyGet<NetOffice.OfficeApi.Enums.MsoAutomationSecurity>(this, "AutomationSecurity");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteEnumPropertySet(this, "AutomationSecurity", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseAllowLocalBaseCalendars
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "EnterpriseAllowLocalBaseCalendars");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "EnterpriseAllowLocalBaseCalendars", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjEditionType Edition
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteEnumPropertyGet<NetOffice.MSProjectApi.Enums.PjEditionType>(this, "Edition");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteEnumPropertySet(this, "Edition", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Profiles Profiles
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Profiles>(this, "Profiles", typeof(NetOffice.MSProjectApi.Profiles));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "Profiles", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Calendars GlobalBaseCalendars
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Calendars>(this, "GlobalBaseCalendars", typeof(NetOffice.MSProjectApi.Calendars));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "GlobalBaseCalendars", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		[BaseResult]
		public virtual NetOffice.MSProjectApi.Views GlobalViews
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBaseReferencePropertyGet<NetOffice.MSProjectApi.Views>(this, "GlobalViews");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "GlobalViews", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.ViewsSingle GlobalViewsSingle
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.ViewsSingle>(this, "GlobalViewsSingle", typeof(NetOffice.MSProjectApi.ViewsSingle));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "GlobalViewsSingle", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.ViewsCombination GlobalViewsCombination
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.ViewsCombination>(this, "GlobalViewsCombination", typeof(NetOffice.MSProjectApi.ViewsCombination));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "GlobalViewsCombination", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Tables GlobalTaskTables
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Tables>(this, "GlobalTaskTables", typeof(NetOffice.MSProjectApi.Tables));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "GlobalTaskTables", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Tables GlobalResourceTables
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Tables>(this, "GlobalResourceTables", typeof(NetOffice.MSProjectApi.Tables));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "GlobalResourceTables", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Filters GlobalTaskFilters
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Filters>(this, "GlobalTaskFilters", typeof(NetOffice.MSProjectApi.Filters));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "GlobalTaskFilters", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Filters GlobalResourceFilters
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Filters>(this, "GlobalResourceFilters", typeof(NetOffice.MSProjectApi.Filters));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "GlobalResourceFilters", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.OutlineCodes GlobalOutlineCodes
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.OutlineCodes>(this, "GlobalOutlineCodes", typeof(NetOffice.MSProjectApi.OutlineCodes));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "GlobalOutlineCodes", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string EnterpriseListSeparator
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "EnterpriseListSeparator");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "EnterpriseListSeparator", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseProtectActuals
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "EnterpriseProtectActuals");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "EnterpriseProtectActuals", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Windows Windows
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Windows>(this, "Windows", typeof(NetOffice.MSProjectApi.Windows));
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.OfficeApi.CommandBars CommandBars
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.OfficeApi.CommandBars>(this, "CommandBars", typeof(NetOffice.OfficeApi.CommandBars));
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.OfficeApi.AnswerWizard AnswerWizard
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.OfficeApi.AnswerWizard>(this, "AnswerWizard", typeof(NetOffice.OfficeApi.AnswerWizard));
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string OperatingSystem
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "OperatingSystem");
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		[SupportByVersion("MSProject", 11,12,14)]
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public virtual string get_FileFormatID(string name, object userID, object databasePassWord)
		{
			return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "FileFormatID", name, userID, databasePassWord);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Alias for get_FileFormatID
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		[SupportByVersion("MSProject", 11,12,14), Redirect("get_FileFormatID")]
		public virtual string FileFormatID(string name, object userID, object databasePassWord)
		{
			return get_FileFormatID(name, userID, databasePassWord);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get
		/// </summary>
		/// <param name="name">string name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public virtual string get_FileFormatID(string name)
		{
			return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "FileFormatID", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Alias for get_FileFormatID
		/// </summary>
		/// <param name="name">string name</param>
		[SupportByVersion("MSProject", 11,12,14), Redirect("get_FileFormatID")]
		public virtual string FileFormatID(string name)
		{
			return get_FileFormatID(name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="userID">optional object userID</param>
		[SupportByVersion("MSProject", 11,12,14)]
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public virtual string get_FileFormatID(string name, object userID)
		{
			return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "FileFormatID", name, userID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Alias for get_FileFormatID
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="userID">optional object userID</param>
		[SupportByVersion("MSProject", 11,12,14), Redirect("get_FileFormatID")]
		public virtual string FileFormatID(string name, object userID)
		{
			return get_FileFormatID(name, userID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		[SupportByVersion("MSProject", 11,12,14)]
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public virtual string get_FileBuildID(string name, object userID, object databasePassWord)
		{
			return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "FileBuildID", name, userID, databasePassWord);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Alias for get_FileBuildID
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		[SupportByVersion("MSProject", 11,12,14), Redirect("get_FileBuildID")]
		public virtual string FileBuildID(string name, object userID, object databasePassWord)
		{
			return get_FileBuildID(name, userID, databasePassWord);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get
		/// </summary>
		/// <param name="name">string name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public virtual string get_FileBuildID(string name)
		{
			return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "FileBuildID", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Alias for get_FileBuildID
		/// </summary>
		/// <param name="name">string name</param>
		[SupportByVersion("MSProject", 11,12,14), Redirect("get_FileBuildID")]
		public virtual string FileBuildID(string name)
		{
			return get_FileBuildID(name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="userID">optional object userID</param>
		[SupportByVersion("MSProject", 11,12,14)]
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public virtual string get_FileBuildID(string name, object userID)
		{
			return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "FileBuildID", name, userID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Alias for get_FileBuildID
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="userID">optional object userID</param>
		[SupportByVersion("MSProject", 11,12,14), Redirect("get_FileBuildID")]
		public virtual string FileBuildID(string name, object userID)
		{
			return get_FileBuildID(name, userID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.OfficeApi.COMAddIns COMAddIns
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.OfficeApi.COMAddIns>(this, "COMAddIns", typeof(NetOffice.OfficeApi.COMAddIns));
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Windows2 Windows2
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Windows2>(this, "Windows2", typeof(NetOffice.MSProjectApi.Windows2));
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.ReportTemplates VisualReportTemplateList
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.ReportTemplates>(this, "VisualReportTemplateList", typeof(NetOffice.MSProjectApi.ReportTemplates));
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteReferencePropertySet(this, "VisualReportTemplateList", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Use3DLook
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "Use3DLook");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "Use3DLook", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UseOMIDs
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "UseOMIDs");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "UseOMIDs", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 UndoLevels
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteInt32PropertyGet(this, "UndoLevels");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "UndoLevels", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnableChangeHighlighting
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "EnableChangeHighlighting");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "EnableChangeHighlighting", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string VisualReportsAdditionalTemplatePath
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "VisualReportsAdditionalTemplatePath");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "VisualReportsAdditionalTemplatePath", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TrustProjectServerAndWSSPages
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "TrustProjectServerAndWSSPages");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "TrustProjectServerAndWSSPages", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// Get
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.OfficeApi.IAssistance Assistance
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.OfficeApi.IAssistance>(this, "Assistance", typeof(NetOffice.OfficeApi.IAssistance));
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual object TimescaleStart
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteVariantPropertyGet(this, "TimescaleStart");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteVariantPropertySet(this, "TimescaleStart", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual object TimescaleFinish
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteVariantPropertyGet(this, "TimescaleFinish");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteVariantPropertySet(this, "TimescaleFinish", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual object PanZoomStart
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteVariantPropertyGet(this, "PanZoomStart");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteVariantPropertySet(this, "PanZoomStart", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual object PanZoomFinish
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteVariantPropertyGet(this, "PanZoomFinish");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteVariantPropertySet(this, "PanZoomFinish", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual string Build
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "Build");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "Build", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual string CompareProjectsCurrentVersionName
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "CompareProjectsCurrentVersionName");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "CompareProjectsCurrentVersionName", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual string CompareProjectsPreviousVersionName
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteStringPropertyGet(this, "CompareProjectsPreviousVersionName");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "CompareProjectsPreviousVersionName", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// Get/Set
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelFreeformTasks
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "LevelFreeformTasks");
			}
			set
			{
				InvokerService.InvokeInternal.ExecuteValuePropertySet(this, "LevelFreeformTasks", value);
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// Get
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual NetOffice.MSProjectApi.Reports GlobalReports
		{
			get
			{
				return InvokerService.InvokeInternal.ExecuteKnownReferencePropertyGet<NetOffice.MSProjectApi.Reports>(this, "GlobalReports", typeof(NetOffice.MSProjectApi.Reports));
			}
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// Get
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="projectJobType">NetOffice.MSProjectApi.Enums.PjJobType projectJobType</param>
		[SupportByVersion("MSProject", 11)]
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public virtual NetOffice.MSProjectApi.Enums.PjCacheJobState get_GetCacheStatusForProject(string projectName, NetOffice.MSProjectApi.Enums.PjJobType projectJobType)
		{
			return InvokerService.InvokeInternal.ExecuteEnumPropertyGet<NetOffice.MSProjectApi.Enums.PjCacheJobState>(this, "GetCacheStatusForProject", projectName, projectJobType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// Alias for get_GetCacheStatusForProject
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="projectJobType">NetOffice.MSProjectApi.Enums.PjJobType projectJobType</param>
		[SupportByVersion("MSProject", 11), Redirect("get_GetCacheStatusForProject")]
		public virtual NetOffice.MSProjectApi.Enums.PjCacheJobState GetCacheStatusForProject(string projectName, NetOffice.MSProjectApi.Enums.PjJobType projectJobType)
		{
			return get_GetCacheStatusForProject(projectName, projectJobType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// Get
		/// </summary>
		/// <param name="projectName">string projectName</param>
		[SupportByVersion("MSProject", 11)]
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		public virtual bool get_IsCheckedOut(string projectName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolPropertyGet(this, "IsCheckedOut", projectName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// Alias for get_IsCheckedOut
		/// </summary>
		/// <param name="projectName">string projectName</param>
		[SupportByVersion("MSProject", 11), Redirect("get_IsCheckedOut")]
		public virtual bool IsCheckedOut(string projectName)
		{
			return get_IsCheckedOut(projectName);
		}

		#endregion

		#region Methods

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="saveChanges">optional NetOffice.MSProjectApi.Enums.PjSaveType SaveChanges = 2</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Quit(object saveChanges)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Quit", saveChanges);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Quit()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Quit");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startDate">object startDate</param>
		/// <param name="duration">object duration</param>
		/// <param name="calendar">optional object calendar</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object DateAdd(object startDate, object duration, object calendar)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "DateAdd", startDate, duration, calendar);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startDate">object startDate</param>
		/// <param name="duration">object duration</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object DateAdd(object startDate, object duration)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "DateAdd", startDate, duration);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="finishDate">object finishDate</param>
		/// <param name="duration">object duration</param>
		/// <param name="calendar">optional object calendar</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object DateSubtract(object finishDate, object duration, object calendar)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "DateSubtract", finishDate, duration, calendar);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="finishDate">object finishDate</param>
		/// <param name="duration">object duration</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object DateSubtract(object finishDate, object duration)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "DateSubtract", finishDate, duration);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startDate">object startDate</param>
		/// <param name="finishDate">object finishDate</param>
		/// <param name="calendar">optional object calendar</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object DateDifference(object startDate, object finishDate, object calendar)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "DateDifference", startDate, finishDate, calendar);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startDate">object startDate</param>
		/// <param name="finishDate">object finishDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object DateDifference(object startDate, object finishDate)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "DateDifference", startDate, finishDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="duration">object duration</param>
		/// <param name="units">optional object units</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string DurationFormat(object duration, object units)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "DurationFormat", duration, units);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="duration">object duration</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string DurationFormat(object duration)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "DurationFormat", duration);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="duration">string duration</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object DurationValue(string duration)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "DurationValue", duration);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="date">object date</param>
		/// <param name="format">optional object format</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object DateFormat(object date, object format)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "DateFormat", date, format);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="date">object date</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object DateFormat(object date)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "DateFormat", date);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="password">optional object password</param>
		/// <param name="downloadNewMail">optional object downloadNewMail</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void MailLogon(object name, object password, object downloadNewMail)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "MailLogon", name, password, downloadNewMail);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void MailLogon()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "MailLogon");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void MailLogon(object name)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "MailLogon", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="password">optional object password</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void MailLogon(object name, object password)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "MailLogon", name, password);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void MailLogoff()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "MailLogoff");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string MailSession()
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "MailSession");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjMailSystem MailSystem()
		{
			return InvokerService.InvokeInternal.ExecuteEnumMethodGet<NetOffice.MSProjectApi.Enums.PjMailSystem>(this, "MailSystem");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">Int32 taskID</param>
		/// <param name="resourceID">Int32 resourceID</param>
		/// <param name="startDate">object startDate</param>
		/// <param name="endDate">object endDate</param>
		/// <param name="type">optional NetOffice.MSProjectApi.Enums.PjTimescaledData Type = 0</param>
		/// <param name="timeScaleUnit">optional NetOffice.MSProjectApi.Enums.PjTimescaleUnit TimeScaleUnit = 3</param>
		/// <param name="count">optional object count</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object TimescaledData(Int32 taskID, Int32 resourceID, object startDate, object endDate, object type, object timeScaleUnit, object count)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "TimescaledData", new object[]{ taskID, resourceID, startDate, endDate, type, timeScaleUnit, count });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">Int32 taskID</param>
		/// <param name="resourceID">Int32 resourceID</param>
		/// <param name="startDate">object startDate</param>
		/// <param name="endDate">object endDate</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object TimescaledData(Int32 taskID, Int32 resourceID, object startDate, object endDate)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "TimescaledData", taskID, resourceID, startDate, endDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">Int32 taskID</param>
		/// <param name="resourceID">Int32 resourceID</param>
		/// <param name="startDate">object startDate</param>
		/// <param name="endDate">object endDate</param>
		/// <param name="type">optional NetOffice.MSProjectApi.Enums.PjTimescaledData Type = 0</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object TimescaledData(Int32 taskID, Int32 resourceID, object startDate, object endDate, object type)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "TimescaledData", new object[]{ taskID, resourceID, startDate, endDate, type });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">Int32 taskID</param>
		/// <param name="resourceID">Int32 resourceID</param>
		/// <param name="startDate">object startDate</param>
		/// <param name="endDate">object endDate</param>
		/// <param name="type">optional NetOffice.MSProjectApi.Enums.PjTimescaledData Type = 0</param>
		/// <param name="timeScaleUnit">optional NetOffice.MSProjectApi.Enums.PjTimescaleUnit TimeScaleUnit = 3</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object TimescaledData(Int32 taskID, Int32 resourceID, object startDate, object endDate, object type, object timeScaleUnit)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "TimescaledData", new object[]{ taskID, resourceID, startDate, endDate, type, timeScaleUnit });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string CustomFieldGetName(NetOffice.MSProjectApi.Enums.PjCustomField fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "CustomFieldGetName", fieldID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		/// <param name="arg18">optional object arg18</param>
		/// <param name="arg19">optional object arg19</param>
		/// <param name="arg20">optional object arg20</param>
		/// <param name="arg21">optional object arg21</param>
		/// <param name="arg22">optional object arg22</param>
		/// <param name="arg23">optional object arg23</param>
		/// <param name="arg24">optional object arg24</param>
		/// <param name="arg25">optional object arg25</param>
		/// <param name="arg26">optional object arg26</param>
		/// <param name="arg27">optional object arg27</param>
		/// <param name="arg28">optional object arg28</param>
		/// <param name="arg29">optional object arg29</param>
		/// <param name="arg30">optional object arg30</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28, object arg29, object arg30)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29, arg30 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", name, arg1);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", name, arg1, arg2);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", name, arg1, arg2, arg3);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		/// <param name="arg18">optional object arg18</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		/// <param name="arg18">optional object arg18</param>
		/// <param name="arg19">optional object arg19</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		/// <param name="arg18">optional object arg18</param>
		/// <param name="arg19">optional object arg19</param>
		/// <param name="arg20">optional object arg20</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		/// <param name="arg18">optional object arg18</param>
		/// <param name="arg19">optional object arg19</param>
		/// <param name="arg20">optional object arg20</param>
		/// <param name="arg21">optional object arg21</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		/// <param name="arg18">optional object arg18</param>
		/// <param name="arg19">optional object arg19</param>
		/// <param name="arg20">optional object arg20</param>
		/// <param name="arg21">optional object arg21</param>
		/// <param name="arg22">optional object arg22</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		/// <param name="arg18">optional object arg18</param>
		/// <param name="arg19">optional object arg19</param>
		/// <param name="arg20">optional object arg20</param>
		/// <param name="arg21">optional object arg21</param>
		/// <param name="arg22">optional object arg22</param>
		/// <param name="arg23">optional object arg23</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		/// <param name="arg18">optional object arg18</param>
		/// <param name="arg19">optional object arg19</param>
		/// <param name="arg20">optional object arg20</param>
		/// <param name="arg21">optional object arg21</param>
		/// <param name="arg22">optional object arg22</param>
		/// <param name="arg23">optional object arg23</param>
		/// <param name="arg24">optional object arg24</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		/// <param name="arg18">optional object arg18</param>
		/// <param name="arg19">optional object arg19</param>
		/// <param name="arg20">optional object arg20</param>
		/// <param name="arg21">optional object arg21</param>
		/// <param name="arg22">optional object arg22</param>
		/// <param name="arg23">optional object arg23</param>
		/// <param name="arg24">optional object arg24</param>
		/// <param name="arg25">optional object arg25</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		/// <param name="arg18">optional object arg18</param>
		/// <param name="arg19">optional object arg19</param>
		/// <param name="arg20">optional object arg20</param>
		/// <param name="arg21">optional object arg21</param>
		/// <param name="arg22">optional object arg22</param>
		/// <param name="arg23">optional object arg23</param>
		/// <param name="arg24">optional object arg24</param>
		/// <param name="arg25">optional object arg25</param>
		/// <param name="arg26">optional object arg26</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		/// <param name="arg18">optional object arg18</param>
		/// <param name="arg19">optional object arg19</param>
		/// <param name="arg20">optional object arg20</param>
		/// <param name="arg21">optional object arg21</param>
		/// <param name="arg22">optional object arg22</param>
		/// <param name="arg23">optional object arg23</param>
		/// <param name="arg24">optional object arg24</param>
		/// <param name="arg25">optional object arg25</param>
		/// <param name="arg26">optional object arg26</param>
		/// <param name="arg27">optional object arg27</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		/// <param name="arg18">optional object arg18</param>
		/// <param name="arg19">optional object arg19</param>
		/// <param name="arg20">optional object arg20</param>
		/// <param name="arg21">optional object arg21</param>
		/// <param name="arg22">optional object arg22</param>
		/// <param name="arg23">optional object arg23</param>
		/// <param name="arg24">optional object arg24</param>
		/// <param name="arg25">optional object arg25</param>
		/// <param name="arg26">optional object arg26</param>
		/// <param name="arg27">optional object arg27</param>
		/// <param name="arg28">optional object arg28</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="arg1">optional object arg1</param>
		/// <param name="arg2">optional object arg2</param>
		/// <param name="arg3">optional object arg3</param>
		/// <param name="arg4">optional object arg4</param>
		/// <param name="arg5">optional object arg5</param>
		/// <param name="arg6">optional object arg6</param>
		/// <param name="arg7">optional object arg7</param>
		/// <param name="arg8">optional object arg8</param>
		/// <param name="arg9">optional object arg9</param>
		/// <param name="arg10">optional object arg10</param>
		/// <param name="arg11">optional object arg11</param>
		/// <param name="arg12">optional object arg12</param>
		/// <param name="arg13">optional object arg13</param>
		/// <param name="arg14">optional object arg14</param>
		/// <param name="arg15">optional object arg15</param>
		/// <param name="arg16">optional object arg16</param>
		/// <param name="arg17">optional object arg17</param>
		/// <param name="arg18">optional object arg18</param>
		/// <param name="arg19">optional object arg19</param>
		/// <param name="arg20">optional object arg20</param>
		/// <param name="arg21">optional object arg21</param>
		/// <param name="arg22">optional object arg22</param>
		/// <param name="arg23">optional object arg23</param>
		/// <param name="arg24">optional object arg24</param>
		/// <param name="arg25">optional object arg25</param>
		/// <param name="arg26">optional object arg26</param>
		/// <param name="arg27">optional object arg27</param>
		/// <param name="arg28">optional object arg28</param>
		/// <param name="arg29">optional object arg29</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void Run(string name, object arg1, object arg2, object arg3, object arg4, object arg5, object arg6, object arg7, object arg8, object arg9, object arg10, object arg11, object arg12, object arg13, object arg14, object arg15, object arg16, object arg17, object arg18, object arg19, object arg20, object arg21, object arg22, object arg23, object arg24, object arg25, object arg26, object arg27, object arg28, object arg29)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "Run", new object[]{ name, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19, arg20, arg21, arg22, arg23, arg24, arg25, arg26, arg27, arg28, arg29 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="index">NetOffice.MSProjectApi.Enums.PjMSApplication index</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void ActivateMicrosoftApp(NetOffice.MSProjectApi.Enums.PjMSApplication index)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "ActivateMicrosoftApp", index);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">Int32 taskID</param>
		/// <param name="projectName">optional object projectName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 BoxGetXPosition(Int32 taskID, object projectName)
		{
			return InvokerService.InvokeInternal.ExecuteInt32MethodGet(this, "BoxGetXPosition", taskID, projectName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">Int32 taskID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 BoxGetXPosition(Int32 taskID)
		{
			return InvokerService.InvokeInternal.ExecuteInt32MethodGet(this, "BoxGetXPosition", taskID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">Int32 taskID</param>
		/// <param name="projectName">optional object projectName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 BoxGetYPosition(Int32 taskID, object projectName)
		{
			return InvokerService.InvokeInternal.ExecuteInt32MethodGet(this, "BoxGetYPosition", taskID, projectName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">Int32 taskID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 BoxGetYPosition(Int32 taskID)
		{
			return InvokerService.InvokeInternal.ExecuteInt32MethodGet(this, "BoxGetYPosition", taskID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string CustomFieldGetFormula(NetOffice.MSProjectApi.Enums.PjCustomField fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "CustomFieldGetFormula", fieldID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjValueListItem item</param>
		/// <param name="index">Int32 index</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string CustomFieldValueListGetItem(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, NetOffice.MSProjectApi.Enums.PjValueListItem item, Int32 index)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "CustomFieldValueListGetItem", fieldID, item, index);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="goalArea">Int32 goalArea</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void GoalAreaHighlight(Int32 goalArea)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "GoalAreaHighlight", goalArea);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="displayState">bool displayState</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void SetSidepaneStateButton(bool displayState)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "SetSidepaneStateButton", displayState);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">Int32 taskID</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void GoalAreaTaskHighlight(Int32 taskID)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "GoalAreaTaskHighlight", taskID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldName">string fieldName</param>
		/// <param name="fieldType">optional NetOffice.MSProjectApi.Enums.PjFieldType FieldType = 0</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjField FieldNameToFieldConstant(string fieldName, object fieldType)
		{
			return InvokerService.InvokeInternal.ExecuteEnumMethodGet<NetOffice.MSProjectApi.Enums.PjField>(this, "FieldNameToFieldConstant", fieldName, fieldType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldName">string fieldName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjField FieldNameToFieldConstant(string fieldName)
		{
			return InvokerService.InvokeInternal.ExecuteEnumMethodGet<NetOffice.MSProjectApi.Enums.PjField>(this, "FieldNameToFieldConstant", fieldName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">NetOffice.MSProjectApi.Enums.PjField field</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string FieldConstantToFieldName(NetOffice.MSProjectApi.Enums.PjField field)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "FieldConstantToFieldName", field);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="requestXML">string requestXML</param>
		/// <param name="project">optional object project</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string GetProjectServerSettings(string requestXML, object project)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "GetProjectServerSettings", requestXML, project);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="requestXML">string requestXML</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string GetProjectServerSettings(string requestXML)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "GetProjectServerSettings", requestXML);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="window">optional object window</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void UnloadWebBrowserControl(object window)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "UnloadWebBrowserControl", window);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void UnloadWebBrowserControl()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "UnloadWebBrowserControl");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="xML">string xML</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 OpenXML(string xML)
		{
			return InvokerService.InvokeInternal.ExecuteInt32MethodGet(this, "OpenXML", xML);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="serverURL">string serverURL</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Enums.PjServerVersionInfo GetProjectServerVersion(string serverURL)
		{
			return InvokerService.InvokeInternal.ExecuteEnumMethodGet<NetOffice.MSProjectApi.Enums.PjServerVersionInfo>(this, "GetProjectServerVersion", serverURL);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="dataFile">string dataFile</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object UpdateFromProjectServer(string dataFile)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "UpdateFromProjectServer", dataFile);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 LocaleID()
		{
			return InvokerService.InvokeInternal.ExecuteInt32MethodGet(this, "LocaleID");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void EnterpriseMakeServerURLTrusted()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "EnterpriseMakeServerURLTrusted");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="uRL">string uRL</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool IsURLTrusted(string uRL)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "IsURLTrusted", uRL);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="itemsScope">optional NetOffice.MSProjectApi.Enums.PjPublishScope ItemsScope = 1</param>
		/// <param name="notifyResources">optional bool NotifyResources = true</param>
		/// <param name="notificationText">optional object notificationText</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void PublishNewAndChangedAssignments(object showDialog, object itemsScope, object notifyResources, object notificationText)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "PublishNewAndChangedAssignments", showDialog, itemsScope, notifyResources, notificationText);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void PublishNewAndChangedAssignments()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "PublishNewAndChangedAssignments");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void PublishNewAndChangedAssignments(object showDialog)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "PublishNewAndChangedAssignments", showDialog);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="itemsScope">optional NetOffice.MSProjectApi.Enums.PjPublishScope ItemsScope = 1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void PublishNewAndChangedAssignments(object showDialog, object itemsScope)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "PublishNewAndChangedAssignments", showDialog, itemsScope);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="itemsScope">optional NetOffice.MSProjectApi.Enums.PjPublishScope ItemsScope = 1</param>
		/// <param name="notifyResources">optional bool NotifyResources = true</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void PublishNewAndChangedAssignments(object showDialog, object itemsScope, object notifyResources)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "PublishNewAndChangedAssignments", showDialog, itemsScope, notifyResources);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="publishFullPlan">optional bool PublishFullPlan = true</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void PublishProjectPlan(object showDialog, object publishFullPlan)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "PublishProjectPlan", showDialog, publishFullPlan);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void PublishProjectPlan()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "PublishProjectPlan");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void PublishProjectPlan(object showDialog)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "PublishProjectPlan", showDialog);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void PublishAllInformation()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "PublishAllInformation");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="itemsScope">optional NetOffice.MSProjectApi.Enums.PjPublishScope ItemsScope = 1</param>
		/// <param name="notifyTaskLead">optional bool NotifyTaskLead = false</param>
		/// <param name="notificationText">optional object notificationText</param>
		/// <param name="reportingPeriodFrom">optional object reportingPeriodFrom</param>
		/// <param name="reportingPeriodTo">optional object reportingPeriodTo</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RequestProgressInformation(object showDialog, object itemsScope, object notifyTaskLead, object notificationText, object reportingPeriodFrom, object reportingPeriodTo)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RequestProgressInformation", new object[]{ showDialog, itemsScope, notifyTaskLead, notificationText, reportingPeriodFrom, reportingPeriodTo });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RequestProgressInformation()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RequestProgressInformation");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RequestProgressInformation(object showDialog)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RequestProgressInformation", showDialog);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="itemsScope">optional NetOffice.MSProjectApi.Enums.PjPublishScope ItemsScope = 1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RequestProgressInformation(object showDialog, object itemsScope)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RequestProgressInformation", showDialog, itemsScope);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="itemsScope">optional NetOffice.MSProjectApi.Enums.PjPublishScope ItemsScope = 1</param>
		/// <param name="notifyTaskLead">optional bool NotifyTaskLead = false</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RequestProgressInformation(object showDialog, object itemsScope, object notifyTaskLead)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RequestProgressInformation", showDialog, itemsScope, notifyTaskLead);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="itemsScope">optional NetOffice.MSProjectApi.Enums.PjPublishScope ItemsScope = 1</param>
		/// <param name="notifyTaskLead">optional bool NotifyTaskLead = false</param>
		/// <param name="notificationText">optional object notificationText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RequestProgressInformation(object showDialog, object itemsScope, object notifyTaskLead, object notificationText)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RequestProgressInformation", showDialog, itemsScope, notifyTaskLead, notificationText);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="itemsScope">optional NetOffice.MSProjectApi.Enums.PjPublishScope ItemsScope = 1</param>
		/// <param name="notifyTaskLead">optional bool NotifyTaskLead = false</param>
		/// <param name="notificationText">optional object notificationText</param>
		/// <param name="reportingPeriodFrom">optional object reportingPeriodFrom</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RequestProgressInformation(object showDialog, object itemsScope, object notifyTaskLead, object notificationText, object reportingPeriodFrom)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RequestProgressInformation", new object[]{ showDialog, itemsScope, notifyTaskLead, notificationText, reportingPeriodFrom });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="itemsScope">optional NetOffice.MSProjectApi.Enums.PjPublishScope ItemsScope = 1</param>
		/// <param name="notifyResources">optional bool NotifyResources = true</param>
		/// <param name="overwriteActuals">optional bool OverwriteActuals = false</param>
		/// <param name="becomeManager">optional bool BecomeManager = false</param>
		/// <param name="notificationText">optional object notificationText</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RepublishAssignments(object showDialog, object itemsScope, object notifyResources, object overwriteActuals, object becomeManager, object notificationText)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RepublishAssignments", new object[]{ showDialog, itemsScope, notifyResources, overwriteActuals, becomeManager, notificationText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RepublishAssignments()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RepublishAssignments");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RepublishAssignments(object showDialog)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RepublishAssignments", showDialog);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="itemsScope">optional NetOffice.MSProjectApi.Enums.PjPublishScope ItemsScope = 1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RepublishAssignments(object showDialog, object itemsScope)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RepublishAssignments", showDialog, itemsScope);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="itemsScope">optional NetOffice.MSProjectApi.Enums.PjPublishScope ItemsScope = 1</param>
		/// <param name="notifyResources">optional bool NotifyResources = true</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RepublishAssignments(object showDialog, object itemsScope, object notifyResources)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RepublishAssignments", showDialog, itemsScope, notifyResources);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="itemsScope">optional NetOffice.MSProjectApi.Enums.PjPublishScope ItemsScope = 1</param>
		/// <param name="notifyResources">optional bool NotifyResources = true</param>
		/// <param name="overwriteActuals">optional bool OverwriteActuals = false</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RepublishAssignments(object showDialog, object itemsScope, object notifyResources, object overwriteActuals)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RepublishAssignments", showDialog, itemsScope, notifyResources, overwriteActuals);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showDialog">optional bool ShowDialog = false</param>
		/// <param name="itemsScope">optional NetOffice.MSProjectApi.Enums.PjPublishScope ItemsScope = 1</param>
		/// <param name="notifyResources">optional bool NotifyResources = true</param>
		/// <param name="overwriteActuals">optional bool OverwriteActuals = false</param>
		/// <param name="becomeManager">optional bool BecomeManager = false</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void RepublishAssignments(object showDialog, object itemsScope, object notifyResources, object overwriteActuals, object becomeManager)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "RepublishAssignments", new object[]{ showDialog, itemsScope, notifyResources, overwriteActuals, becomeManager });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="waitForCompletion">bool waitForCompletion</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 RegisterProject(bool waitForCompletion)
		{
			return InvokerService.InvokeInternal.ExecuteInt32MethodGet(this, "RegisterProject", waitForCompletion);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="alertText">string alertText</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SaveProjectIfDirty(string alertText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SaveProjectIfDirty", alertText);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool IsOfficeTaskPaneVisible()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "IsOfficeTaskPaneVisible");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void OfficeTaskPaneHide()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "OfficeTaskPaneHide");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 GetCurrentTheme()
		{
			return InvokerService.InvokeInternal.ExecuteInt32MethodGet(this, "GetCurrentTheme");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="message">string message</param>
		/// <param name="type">optional NetOffice.MSProjectApi.Enums.PjMessageType Type = 0</param>
		/// <param name="yesText">optional object yesText</param>
		/// <param name="noText">optional object noText</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Message(string message, object type, object yesText, object noText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Message", message, type, yesText, noText);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="message">string message</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Message(string message)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Message", message);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="message">string message</param>
		/// <param name="type">optional NetOffice.MSProjectApi.Enums.PjMessageType Type = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Message(string message, object type)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Message", message, type);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="message">string message</param>
		/// <param name="type">optional NetOffice.MSProjectApi.Enums.PjMessageType Type = 0</param>
		/// <param name="yesText">optional object yesText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Message(string message, object type, object yesText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Message", message, type, yesText);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Alerts(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Alerts", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Alerts()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Alerts");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="template">optional object template</param>
		/// <param name="fileNewDialog">optional object fileNewDialog</param>
		/// <param name="fileNewWorkpane">optional object fileNewWorkpane</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileNew(object summaryInfo, object template, object fileNewDialog, object fileNewWorkpane)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileNew", summaryInfo, template, fileNewDialog, fileNewWorkpane);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileNew()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileNew");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileNew(object summaryInfo)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileNew", summaryInfo);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="template">optional object template</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileNew(object summaryInfo, object template)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileNew", summaryInfo, template);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="template">optional object template</param>
		/// <param name="fileNewDialog">optional object fileNewDialog</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileNew(object summaryInfo, object template, object fileNewDialog)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileNew", summaryInfo, template, fileNewDialog);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileProperties()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileProperties");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="readOnly">object readOnly</param>
		/// <param name="merge">object merge</param>
		/// <param name="taskInformation">object taskInformation</param>
		/// <param name="table">object table</param>
		/// <param name="sheet">object sheet</param>
		/// <param name="noAuto">object noAuto</param>
		/// <param name="userID">object userID</param>
		/// <param name="databasePassWord">object databasePassWord</param>
		/// <param name="formatID">object formatID</param>
		/// <param name="map">object map</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		/// <param name="ignoreReadOnlyRecommended">optional object ignoreReadOnlyRecommended</param>
		/// <param name="xMLName">optional object xMLName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileOpen(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, object openPool, object password, object writeResPassword, object ignoreReadOnlyRecommended, object xMLName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpen", new object[]{ name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool, password, writeResPassword, ignoreReadOnlyRecommended, xMLName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="readOnly">object readOnly</param>
		/// <param name="merge">object merge</param>
		/// <param name="taskInformation">object taskInformation</param>
		/// <param name="table">object table</param>
		/// <param name="sheet">object sheet</param>
		/// <param name="noAuto">object noAuto</param>
		/// <param name="userID">object userID</param>
		/// <param name="databasePassWord">object databasePassWord</param>
		/// <param name="formatID">object formatID</param>
		/// <param name="map">object map</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileOpen(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpen", new object[]{ name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="readOnly">object readOnly</param>
		/// <param name="merge">object merge</param>
		/// <param name="taskInformation">object taskInformation</param>
		/// <param name="table">object table</param>
		/// <param name="sheet">object sheet</param>
		/// <param name="noAuto">object noAuto</param>
		/// <param name="userID">object userID</param>
		/// <param name="databasePassWord">object databasePassWord</param>
		/// <param name="formatID">object formatID</param>
		/// <param name="map">object map</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileOpen(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, object openPool)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpen", new object[]{ name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="readOnly">object readOnly</param>
		/// <param name="merge">object merge</param>
		/// <param name="taskInformation">object taskInformation</param>
		/// <param name="table">object table</param>
		/// <param name="sheet">object sheet</param>
		/// <param name="noAuto">object noAuto</param>
		/// <param name="userID">object userID</param>
		/// <param name="databasePassWord">object databasePassWord</param>
		/// <param name="formatID">object formatID</param>
		/// <param name="map">object map</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		/// <param name="password">optional object password</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileOpen(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, object openPool, object password)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpen", new object[]{ name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool, password });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="readOnly">object readOnly</param>
		/// <param name="merge">object merge</param>
		/// <param name="taskInformation">object taskInformation</param>
		/// <param name="table">object table</param>
		/// <param name="sheet">object sheet</param>
		/// <param name="noAuto">object noAuto</param>
		/// <param name="userID">object userID</param>
		/// <param name="databasePassWord">object databasePassWord</param>
		/// <param name="formatID">object formatID</param>
		/// <param name="map">object map</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileOpen(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, object openPool, object password, object writeResPassword)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpen", new object[]{ name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool, password, writeResPassword });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="readOnly">object readOnly</param>
		/// <param name="merge">object merge</param>
		/// <param name="taskInformation">object taskInformation</param>
		/// <param name="table">object table</param>
		/// <param name="sheet">object sheet</param>
		/// <param name="noAuto">object noAuto</param>
		/// <param name="userID">object userID</param>
		/// <param name="databasePassWord">object databasePassWord</param>
		/// <param name="formatID">object formatID</param>
		/// <param name="map">object map</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		/// <param name="ignoreReadOnlyRecommended">optional object ignoreReadOnlyRecommended</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileOpen(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, object openPool, object password, object writeResPassword, object ignoreReadOnlyRecommended)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpen", new object[]{ name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool, password, writeResPassword, ignoreReadOnlyRecommended });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Zoom()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Zoom");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="duration">optional object duration</param>
		/// <param name="entire">optional object entire</param>
		/// <param name="selection">optional object selection</param>
		/// <param name="reset">optional object reset</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ZoomTimescale(object duration, object entire, object selection, object reset)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomTimescale", duration, entire, selection, reset);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ZoomTimescale()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomTimescale");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="duration">optional object duration</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ZoomTimescale(object duration)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomTimescale", duration);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="duration">optional object duration</param>
		/// <param name="entire">optional object entire</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ZoomTimescale(object duration, object entire)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomTimescale", duration, entire);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="duration">optional object duration</param>
		/// <param name="entire">optional object entire</param>
		/// <param name="selection">optional object selection</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ZoomTimescale(object duration, object entire, object selection)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomTimescale", duration, entire, selection);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="percent">optional object percent</param>
		/// <param name="entire">optional object entire</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxZoom(object percent, object entire)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxZoom", percent, entire);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxZoom()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxZoom");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="percent">optional object percent</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxZoom(object percent)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxZoom", percent);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="save">optional NetOffice.MSProjectApi.Enums.PjSaveType Save = 2</param>
		/// <param name="noAuto">optional object noAuto</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileClose(object save, object noAuto)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileClose", save, noAuto);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileClose()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileClose");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="save">optional NetOffice.MSProjectApi.Enums.PjSaveType Save = 2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileClose(object save)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileClose", save);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="save">optional NetOffice.MSProjectApi.Enums.PjSaveType Save = 2</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileCloseAll(object save)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileCloseAll", save);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileCloseAll()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileCloseAll");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="share">optional object share</param>
		/// <param name="name">optional object name</param>
		/// <param name="pool">optional object pool</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceSharing(object share, object name, object pool)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceSharing", share, name, pool);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceSharing()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceSharing");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="share">optional object share</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceSharing(object share)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceSharing", share);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="share">optional object share</param>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceSharing(object share, object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceSharing", share, name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSave()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSave");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		/// <param name="table">optional object table</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		/// <param name="formatID">optional object formatID</param>
		/// <param name="map">optional object map</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		/// <param name="clearBaseline">optional object clearBaseline</param>
		/// <param name="clearActuals">optional object clearActuals</param>
		/// <param name="clearResourceRates">optional object clearResourceRates</param>
		/// <param name="clearFixedCosts">optional object clearFixedCosts</param>
		/// <param name="xMLName">optional object xMLName</param>
		/// <param name="clearConfirmed">optional object clearConfirmed</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered, object table, object userID, object databasePassWord, object formatID, object map, object password, object writeResPassword, object clearBaseline, object clearActuals, object clearResourceRates, object clearFixedCosts, object xMLName, object clearConfirmed)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered, table, userID, databasePassWord, formatID, map, password, writeResPassword, clearBaseline, clearActuals, clearResourceRates, clearFixedCosts, xMLName, clearConfirmed });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", name, format);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", name, format, backup);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", name, format, backup, readOnly);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		/// <param name="table">optional object table</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered, object table)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered, table });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		/// <param name="table">optional object table</param>
		/// <param name="userID">optional object userID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered, object table, object userID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered, table, userID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		/// <param name="table">optional object table</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered, object table, object userID, object databasePassWord)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered, table, userID, databasePassWord });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		/// <param name="table">optional object table</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		/// <param name="formatID">optional object formatID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered, object table, object userID, object databasePassWord, object formatID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered, table, userID, databasePassWord, formatID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		/// <param name="table">optional object table</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		/// <param name="formatID">optional object formatID</param>
		/// <param name="map">optional object map</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered, object table, object userID, object databasePassWord, object formatID, object map)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered, table, userID, databasePassWord, formatID, map });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		/// <param name="table">optional object table</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		/// <param name="formatID">optional object formatID</param>
		/// <param name="map">optional object map</param>
		/// <param name="password">optional object password</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered, object table, object userID, object databasePassWord, object formatID, object map, object password)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered, table, userID, databasePassWord, formatID, map, password });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		/// <param name="table">optional object table</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		/// <param name="formatID">optional object formatID</param>
		/// <param name="map">optional object map</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered, object table, object userID, object databasePassWord, object formatID, object map, object password, object writeResPassword)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered, table, userID, databasePassWord, formatID, map, password, writeResPassword });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		/// <param name="table">optional object table</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		/// <param name="formatID">optional object formatID</param>
		/// <param name="map">optional object map</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		/// <param name="clearBaseline">optional object clearBaseline</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered, object table, object userID, object databasePassWord, object formatID, object map, object password, object writeResPassword, object clearBaseline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered, table, userID, databasePassWord, formatID, map, password, writeResPassword, clearBaseline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		/// <param name="table">optional object table</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		/// <param name="formatID">optional object formatID</param>
		/// <param name="map">optional object map</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		/// <param name="clearBaseline">optional object clearBaseline</param>
		/// <param name="clearActuals">optional object clearActuals</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered, object table, object userID, object databasePassWord, object formatID, object map, object password, object writeResPassword, object clearBaseline, object clearActuals)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered, table, userID, databasePassWord, formatID, map, password, writeResPassword, clearBaseline, clearActuals });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		/// <param name="table">optional object table</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		/// <param name="formatID">optional object formatID</param>
		/// <param name="map">optional object map</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		/// <param name="clearBaseline">optional object clearBaseline</param>
		/// <param name="clearActuals">optional object clearActuals</param>
		/// <param name="clearResourceRates">optional object clearResourceRates</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered, object table, object userID, object databasePassWord, object formatID, object map, object password, object writeResPassword, object clearBaseline, object clearActuals, object clearResourceRates)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered, table, userID, databasePassWord, formatID, map, password, writeResPassword, clearBaseline, clearActuals, clearResourceRates });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		/// <param name="table">optional object table</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		/// <param name="formatID">optional object formatID</param>
		/// <param name="map">optional object map</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		/// <param name="clearBaseline">optional object clearBaseline</param>
		/// <param name="clearActuals">optional object clearActuals</param>
		/// <param name="clearResourceRates">optional object clearResourceRates</param>
		/// <param name="clearFixedCosts">optional object clearFixedCosts</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered, object table, object userID, object databasePassWord, object formatID, object map, object password, object writeResPassword, object clearBaseline, object clearActuals, object clearResourceRates, object clearFixedCosts)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered, table, userID, databasePassWord, formatID, map, password, writeResPassword, clearBaseline, clearActuals, clearResourceRates, clearFixedCosts });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjFileFormat Format = 0</param>
		/// <param name="backup">optional object backup</param>
		/// <param name="readOnly">optional object readOnly</param>
		/// <param name="taskInformation">optional object taskInformation</param>
		/// <param name="filtered">optional object filtered</param>
		/// <param name="table">optional object table</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		/// <param name="formatID">optional object formatID</param>
		/// <param name="map">optional object map</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		/// <param name="clearBaseline">optional object clearBaseline</param>
		/// <param name="clearActuals">optional object clearActuals</param>
		/// <param name="clearResourceRates">optional object clearResourceRates</param>
		/// <param name="clearFixedCosts">optional object clearFixedCosts</param>
		/// <param name="xMLName">optional object xMLName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveAs(object name, object format, object backup, object readOnly, object taskInformation, object filtered, object table, object userID, object databasePassWord, object formatID, object map, object password, object writeResPassword, object clearBaseline, object clearActuals, object clearResourceRates, object clearFixedCosts, object xMLName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveAs", new object[]{ name, format, backup, readOnly, taskInformation, filtered, table, userID, databasePassWord, formatID, map, password, writeResPassword, clearBaseline, clearActuals, clearResourceRates, clearFixedCosts, xMLName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveWorkspace(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveWorkspace", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveWorkspace()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveWorkspace");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		/// <param name="copies">optional object copies</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="onePageWide">optional object onePageWide</param>
		/// <param name="preview">optional object preview</param>
		/// <param name="color">optional object color</param>
		/// <param name="showIEPrintDialog">optional object showIEPrintDialog</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrint(object fromPage, object toPage, object pageBreaks, object draft, object copies, object fromDate, object toDate, object onePageWide, object preview, object color, object showIEPrintDialog)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrint", new object[]{ fromPage, toPage, pageBreaks, draft, copies, fromDate, toDate, onePageWide, preview, color, showIEPrintDialog });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrint()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrint");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fromPage">optional object fromPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrint(object fromPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrint", fromPage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrint(object fromPage, object toPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrint", fromPage, toPage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrint(object fromPage, object toPage, object pageBreaks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrint", fromPage, toPage, pageBreaks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrint(object fromPage, object toPage, object pageBreaks, object draft)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrint", fromPage, toPage, pageBreaks, draft);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		/// <param name="copies">optional object copies</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrint(object fromPage, object toPage, object pageBreaks, object draft, object copies)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrint", new object[]{ fromPage, toPage, pageBreaks, draft, copies });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		/// <param name="copies">optional object copies</param>
		/// <param name="fromDate">optional object fromDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrint(object fromPage, object toPage, object pageBreaks, object draft, object copies, object fromDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrint", new object[]{ fromPage, toPage, pageBreaks, draft, copies, fromDate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		/// <param name="copies">optional object copies</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrint(object fromPage, object toPage, object pageBreaks, object draft, object copies, object fromDate, object toDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrint", new object[]{ fromPage, toPage, pageBreaks, draft, copies, fromDate, toDate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		/// <param name="copies">optional object copies</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="onePageWide">optional object onePageWide</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrint(object fromPage, object toPage, object pageBreaks, object draft, object copies, object fromDate, object toDate, object onePageWide)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrint", new object[]{ fromPage, toPage, pageBreaks, draft, copies, fromDate, toDate, onePageWide });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		/// <param name="copies">optional object copies</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="onePageWide">optional object onePageWide</param>
		/// <param name="preview">optional object preview</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrint(object fromPage, object toPage, object pageBreaks, object draft, object copies, object fromDate, object toDate, object onePageWide, object preview)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrint", new object[]{ fromPage, toPage, pageBreaks, draft, copies, fromDate, toDate, onePageWide, preview });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		/// <param name="copies">optional object copies</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="onePageWide">optional object onePageWide</param>
		/// <param name="preview">optional object preview</param>
		/// <param name="color">optional object color</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrint(object fromPage, object toPage, object pageBreaks, object draft, object copies, object fromDate, object toDate, object onePageWide, object preview, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrint", new object[]{ fromPage, toPage, pageBreaks, draft, copies, fromDate, toDate, onePageWide, preview, color });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		/// <param name="copies">optional object copies</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="preview">optional object preview</param>
		/// <param name="color">optional object color</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReportPrint(object name, object fromPage, object toPage, object pageBreaks, object draft, object copies, object fromDate, object toDate, object preview, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportPrint", new object[]{ name, fromPage, toPage, pageBreaks, draft, copies, fromDate, toDate, preview, color });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReportPrint()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportPrint");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReportPrint(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportPrint", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="fromPage">optional object fromPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReportPrint(object name, object fromPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportPrint", name, fromPage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReportPrint(object name, object fromPage, object toPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportPrint", name, fromPage, toPage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReportPrint(object name, object fromPage, object toPage, object pageBreaks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportPrint", name, fromPage, toPage, pageBreaks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReportPrint(object name, object fromPage, object toPage, object pageBreaks, object draft)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportPrint", new object[]{ name, fromPage, toPage, pageBreaks, draft });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		/// <param name="copies">optional object copies</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReportPrint(object name, object fromPage, object toPage, object pageBreaks, object draft, object copies)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportPrint", new object[]{ name, fromPage, toPage, pageBreaks, draft, copies });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		/// <param name="copies">optional object copies</param>
		/// <param name="fromDate">optional object fromDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReportPrint(object name, object fromPage, object toPage, object pageBreaks, object draft, object copies, object fromDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportPrint", new object[]{ name, fromPage, toPage, pageBreaks, draft, copies, fromDate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		/// <param name="copies">optional object copies</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReportPrint(object name, object fromPage, object toPage, object pageBreaks, object draft, object copies, object fromDate, object toDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportPrint", new object[]{ name, fromPage, toPage, pageBreaks, draft, copies, fromDate, toDate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="fromPage">optional object fromPage</param>
		/// <param name="toPage">optional object toPage</param>
		/// <param name="pageBreaks">optional object pageBreaks</param>
		/// <param name="draft">optional object draft</param>
		/// <param name="copies">optional object copies</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="preview">optional object preview</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReportPrint(object name, object fromPage, object toPage, object pageBreaks, object draft, object copies, object fromDate, object toDate, object preview)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportPrint", new object[]{ name, fromPage, toPage, pageBreaks, draft, copies, fromDate, toDate, preview });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrintPreview()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrintPreview");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReportPrintPreview(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportPrintPreview", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReportPrintPreview()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportPrintPreview");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="printer">optional object printer</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrintSetup(object printer)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrintSetup", printer);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePrintSetup()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePrintSetup");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetup(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetup", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetup()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetup");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="portrait">object portrait</param>
		/// <param name="percentScale">object percentScale</param>
		/// <param name="pagesTall">object pagesTall</param>
		/// <param name="pagesWide">object pagesWide</param>
		/// <param name="paperSize">optional NetOffice.MSProjectApi.Enums.PjPaperSize PaperSize = 0</param>
		/// <param name="firstPageNumber">optional object firstPageNumber</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupPage(object name, object portrait, object percentScale, object pagesTall, object pagesWide, object paperSize, object firstPageNumber)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupPage", new object[]{ name, portrait, percentScale, pagesTall, pagesWide, paperSize, firstPageNumber });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="portrait">object portrait</param>
		/// <param name="percentScale">object percentScale</param>
		/// <param name="pagesTall">object pagesTall</param>
		/// <param name="pagesWide">object pagesWide</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupPage(object name, object portrait, object percentScale, object pagesTall, object pagesWide)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupPage", new object[]{ name, portrait, percentScale, pagesTall, pagesWide });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="portrait">object portrait</param>
		/// <param name="percentScale">object percentScale</param>
		/// <param name="pagesTall">object pagesTall</param>
		/// <param name="pagesWide">object pagesWide</param>
		/// <param name="paperSize">optional NetOffice.MSProjectApi.Enums.PjPaperSize PaperSize = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupPage(object name, object portrait, object percentScale, object pagesTall, object pagesWide, object paperSize)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupPage", new object[]{ name, portrait, percentScale, pagesTall, pagesWide, paperSize });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="top">optional object top</param>
		/// <param name="bottom">optional object bottom</param>
		/// <param name="left">optional object left</param>
		/// <param name="right">optional object right</param>
		/// <param name="borders">optional object borders</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupMargins(object name, object top, object bottom, object left, object right, object borders)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupMargins", new object[]{ name, top, bottom, left, right, borders });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupMargins()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupMargins");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupMargins(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupMargins", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="top">optional object top</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupMargins(object name, object top)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupMargins", name, top);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="top">optional object top</param>
		/// <param name="bottom">optional object bottom</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupMargins(object name, object top, object bottom)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupMargins", name, top, bottom);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="top">optional object top</param>
		/// <param name="bottom">optional object bottom</param>
		/// <param name="left">optional object left</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupMargins(object name, object top, object bottom, object left)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupMargins", name, top, bottom, left);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="top">optional object top</param>
		/// <param name="bottom">optional object bottom</param>
		/// <param name="left">optional object left</param>
		/// <param name="right">optional object right</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupMargins(object name, object top, object bottom, object left, object right)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupMargins", new object[]{ name, top, bottom, left, right });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		/// <param name="text">optional object text</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupHeader(object name, object alignment, object text)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupHeader", name, alignment, text);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupHeader(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupHeader", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupHeader(object name, object alignment)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupHeader", name, alignment);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		/// <param name="text">optional object text</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupFooter(object name, object alignment, object text)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupFooter", name, alignment, text);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupFooter(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupFooter", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupFooter(object name, object alignment)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupFooter", name, alignment);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="textWidth">object textWidth</param>
		/// <param name="legendOn">object legendOn</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		/// <param name="text">object text</param>
		/// <param name="labelFontName">object labelFontName</param>
		/// <param name="labelFontSize">object labelFontSize</param>
		/// <param name="labelFontBold">object labelFontBold</param>
		/// <param name="labelFontItalic">object labelFontItalic</param>
		/// <param name="labelFontUnderline">object labelFontUnderline</param>
		/// <param name="labelFontColor">optional NetOffice.MSProjectApi.Enums.PjColor LabelFontColor = -1</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupLegend(object name, object textWidth, object legendOn, object alignment, object text, object labelFontName, object labelFontSize, object labelFontBold, object labelFontItalic, object labelFontUnderline, object labelFontColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupLegend", new object[]{ name, textWidth, legendOn, alignment, text, labelFontName, labelFontSize, labelFontBold, labelFontItalic, labelFontUnderline, labelFontColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="textWidth">object textWidth</param>
		/// <param name="legendOn">object legendOn</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		/// <param name="text">object text</param>
		/// <param name="labelFontName">object labelFontName</param>
		/// <param name="labelFontSize">object labelFontSize</param>
		/// <param name="labelFontBold">object labelFontBold</param>
		/// <param name="labelFontItalic">object labelFontItalic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupLegend(object name, object textWidth, object legendOn, object alignment, object text, object labelFontName, object labelFontSize, object labelFontBold, object labelFontItalic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupLegend", new object[]{ name, textWidth, legendOn, alignment, text, labelFontName, labelFontSize, labelFontBold, labelFontItalic });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="textWidth">object textWidth</param>
		/// <param name="legendOn">object legendOn</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		/// <param name="text">object text</param>
		/// <param name="labelFontName">object labelFontName</param>
		/// <param name="labelFontSize">object labelFontSize</param>
		/// <param name="labelFontBold">object labelFontBold</param>
		/// <param name="labelFontItalic">object labelFontItalic</param>
		/// <param name="labelFontUnderline">object labelFontUnderline</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupLegend(object name, object textWidth, object legendOn, object alignment, object text, object labelFontName, object labelFontSize, object labelFontBold, object labelFontItalic, object labelFontUnderline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupLegend", new object[]{ name, textWidth, legendOn, alignment, text, labelFontName, labelFontSize, labelFontBold, labelFontItalic, labelFontUnderline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="allSheetColumns">optional object allSheetColumns</param>
		/// <param name="repeatColumns">optional object repeatColumns</param>
		/// <param name="printNotes">optional object printNotes</param>
		/// <param name="printBlankPages">optional object printBlankPages</param>
		/// <param name="bestPageFitTimescale">optional object bestPageFitTimescale</param>
		/// <param name="printColumnTotals">optional object printColumnTotals</param>
		/// <param name="printRowTotals">optional object printRowTotals</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupView(object name, object allSheetColumns, object repeatColumns, object printNotes, object printBlankPages, object bestPageFitTimescale, object printColumnTotals, object printRowTotals)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupView", new object[]{ name, allSheetColumns, repeatColumns, printNotes, printBlankPages, bestPageFitTimescale, printColumnTotals, printRowTotals });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupView()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupView");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupView(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupView", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="allSheetColumns">optional object allSheetColumns</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupView(object name, object allSheetColumns)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupView", name, allSheetColumns);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="allSheetColumns">optional object allSheetColumns</param>
		/// <param name="repeatColumns">optional object repeatColumns</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupView(object name, object allSheetColumns, object repeatColumns)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupView", name, allSheetColumns, repeatColumns);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="allSheetColumns">optional object allSheetColumns</param>
		/// <param name="repeatColumns">optional object repeatColumns</param>
		/// <param name="printNotes">optional object printNotes</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupView(object name, object allSheetColumns, object repeatColumns, object printNotes)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupView", name, allSheetColumns, repeatColumns, printNotes);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="allSheetColumns">optional object allSheetColumns</param>
		/// <param name="repeatColumns">optional object repeatColumns</param>
		/// <param name="printNotes">optional object printNotes</param>
		/// <param name="printBlankPages">optional object printBlankPages</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupView(object name, object allSheetColumns, object repeatColumns, object printNotes, object printBlankPages)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupView", new object[]{ name, allSheetColumns, repeatColumns, printNotes, printBlankPages });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="allSheetColumns">optional object allSheetColumns</param>
		/// <param name="repeatColumns">optional object repeatColumns</param>
		/// <param name="printNotes">optional object printNotes</param>
		/// <param name="printBlankPages">optional object printBlankPages</param>
		/// <param name="bestPageFitTimescale">optional object bestPageFitTimescale</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupView(object name, object allSheetColumns, object repeatColumns, object printNotes, object printBlankPages, object bestPageFitTimescale)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupView", new object[]{ name, allSheetColumns, repeatColumns, printNotes, printBlankPages, bestPageFitTimescale });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="allSheetColumns">optional object allSheetColumns</param>
		/// <param name="repeatColumns">optional object repeatColumns</param>
		/// <param name="printNotes">optional object printNotes</param>
		/// <param name="printBlankPages">optional object printBlankPages</param>
		/// <param name="bestPageFitTimescale">optional object bestPageFitTimescale</param>
		/// <param name="printColumnTotals">optional object printColumnTotals</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupView(object name, object allSheetColumns, object repeatColumns, object printNotes, object printBlankPages, object bestPageFitTimescale, object printColumnTotals)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupView", new object[]{ name, allSheetColumns, repeatColumns, printNotes, printBlankPages, bestPageFitTimescale, printColumnTotals });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="monthsPerPage">optional object monthsPerPage</param>
		/// <param name="weeksPerPage">optional object weeksPerPage</param>
		/// <param name="screenWeekHeight">optional object screenWeekHeight</param>
		/// <param name="onlyDaysInMonth">optional object onlyDaysInMonth</param>
		/// <param name="onlyWeeksInMonth">optional object onlyWeeksInMonth</param>
		/// <param name="monthPreviews">optional object monthPreviews</param>
		/// <param name="monthTitle">optional object monthTitle</param>
		/// <param name="additionalTasks">optional object additionalTasks</param>
		/// <param name="groupAdditionalTasks">optional object groupAdditionalTasks</param>
		/// <param name="printNotes">optional object printNotes</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendar(object name, object monthsPerPage, object weeksPerPage, object screenWeekHeight, object onlyDaysInMonth, object onlyWeeksInMonth, object monthPreviews, object monthTitle, object additionalTasks, object groupAdditionalTasks, object printNotes)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendar", new object[]{ name, monthsPerPage, weeksPerPage, screenWeekHeight, onlyDaysInMonth, onlyWeeksInMonth, monthPreviews, monthTitle, additionalTasks, groupAdditionalTasks, printNotes });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendar()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendar");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendar(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendar", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="monthsPerPage">optional object monthsPerPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendar(object name, object monthsPerPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendar", name, monthsPerPage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="monthsPerPage">optional object monthsPerPage</param>
		/// <param name="weeksPerPage">optional object weeksPerPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendar(object name, object monthsPerPage, object weeksPerPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendar", name, monthsPerPage, weeksPerPage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="monthsPerPage">optional object monthsPerPage</param>
		/// <param name="weeksPerPage">optional object weeksPerPage</param>
		/// <param name="screenWeekHeight">optional object screenWeekHeight</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendar(object name, object monthsPerPage, object weeksPerPage, object screenWeekHeight)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendar", name, monthsPerPage, weeksPerPage, screenWeekHeight);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="monthsPerPage">optional object monthsPerPage</param>
		/// <param name="weeksPerPage">optional object weeksPerPage</param>
		/// <param name="screenWeekHeight">optional object screenWeekHeight</param>
		/// <param name="onlyDaysInMonth">optional object onlyDaysInMonth</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendar(object name, object monthsPerPage, object weeksPerPage, object screenWeekHeight, object onlyDaysInMonth)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendar", new object[]{ name, monthsPerPage, weeksPerPage, screenWeekHeight, onlyDaysInMonth });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="monthsPerPage">optional object monthsPerPage</param>
		/// <param name="weeksPerPage">optional object weeksPerPage</param>
		/// <param name="screenWeekHeight">optional object screenWeekHeight</param>
		/// <param name="onlyDaysInMonth">optional object onlyDaysInMonth</param>
		/// <param name="onlyWeeksInMonth">optional object onlyWeeksInMonth</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendar(object name, object monthsPerPage, object weeksPerPage, object screenWeekHeight, object onlyDaysInMonth, object onlyWeeksInMonth)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendar", new object[]{ name, monthsPerPage, weeksPerPage, screenWeekHeight, onlyDaysInMonth, onlyWeeksInMonth });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="monthsPerPage">optional object monthsPerPage</param>
		/// <param name="weeksPerPage">optional object weeksPerPage</param>
		/// <param name="screenWeekHeight">optional object screenWeekHeight</param>
		/// <param name="onlyDaysInMonth">optional object onlyDaysInMonth</param>
		/// <param name="onlyWeeksInMonth">optional object onlyWeeksInMonth</param>
		/// <param name="monthPreviews">optional object monthPreviews</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendar(object name, object monthsPerPage, object weeksPerPage, object screenWeekHeight, object onlyDaysInMonth, object onlyWeeksInMonth, object monthPreviews)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendar", new object[]{ name, monthsPerPage, weeksPerPage, screenWeekHeight, onlyDaysInMonth, onlyWeeksInMonth, monthPreviews });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="monthsPerPage">optional object monthsPerPage</param>
		/// <param name="weeksPerPage">optional object weeksPerPage</param>
		/// <param name="screenWeekHeight">optional object screenWeekHeight</param>
		/// <param name="onlyDaysInMonth">optional object onlyDaysInMonth</param>
		/// <param name="onlyWeeksInMonth">optional object onlyWeeksInMonth</param>
		/// <param name="monthPreviews">optional object monthPreviews</param>
		/// <param name="monthTitle">optional object monthTitle</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendar(object name, object monthsPerPage, object weeksPerPage, object screenWeekHeight, object onlyDaysInMonth, object onlyWeeksInMonth, object monthPreviews, object monthTitle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendar", new object[]{ name, monthsPerPage, weeksPerPage, screenWeekHeight, onlyDaysInMonth, onlyWeeksInMonth, monthPreviews, monthTitle });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="monthsPerPage">optional object monthsPerPage</param>
		/// <param name="weeksPerPage">optional object weeksPerPage</param>
		/// <param name="screenWeekHeight">optional object screenWeekHeight</param>
		/// <param name="onlyDaysInMonth">optional object onlyDaysInMonth</param>
		/// <param name="onlyWeeksInMonth">optional object onlyWeeksInMonth</param>
		/// <param name="monthPreviews">optional object monthPreviews</param>
		/// <param name="monthTitle">optional object monthTitle</param>
		/// <param name="additionalTasks">optional object additionalTasks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendar(object name, object monthsPerPage, object weeksPerPage, object screenWeekHeight, object onlyDaysInMonth, object onlyWeeksInMonth, object monthPreviews, object monthTitle, object additionalTasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendar", new object[]{ name, monthsPerPage, weeksPerPage, screenWeekHeight, onlyDaysInMonth, onlyWeeksInMonth, monthPreviews, monthTitle, additionalTasks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="monthsPerPage">optional object monthsPerPage</param>
		/// <param name="weeksPerPage">optional object weeksPerPage</param>
		/// <param name="screenWeekHeight">optional object screenWeekHeight</param>
		/// <param name="onlyDaysInMonth">optional object onlyDaysInMonth</param>
		/// <param name="onlyWeeksInMonth">optional object onlyWeeksInMonth</param>
		/// <param name="monthPreviews">optional object monthPreviews</param>
		/// <param name="monthTitle">optional object monthTitle</param>
		/// <param name="additionalTasks">optional object additionalTasks</param>
		/// <param name="groupAdditionalTasks">optional object groupAdditionalTasks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendar(object name, object monthsPerPage, object weeksPerPage, object screenWeekHeight, object onlyDaysInMonth, object onlyWeeksInMonth, object monthPreviews, object monthTitle, object additionalTasks, object groupAdditionalTasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendar", new object[]{ name, monthsPerPage, weeksPerPage, screenWeekHeight, onlyDaysInMonth, onlyWeeksInMonth, monthPreviews, monthTitle, additionalTasks, groupAdditionalTasks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendarText(object name, object item, object font, object size, object bold, object italic, object underline, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarText", new object[]{ name, item, font, size, bold, italic, underline, color });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendarText()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarText");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendarText(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarText", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendarText(object name, object item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarText", name, item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendarText(object name, object item, object font)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarText", name, item, font);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendarText(object name, object item, object font, object size)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarText", name, item, font, size);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendarText(object name, object item, object font, object size, object bold)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarText", new object[]{ name, item, font, size, bold });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendarText(object name, object item, object font, object size, object bold, object italic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarText", new object[]{ name, item, font, size, bold, italic });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilePageSetupCalendarText(object name, object item, object font, object size, object bold, object italic, object underline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarText", new object[]{ name, item, font, size, bold, italic, underline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="any">optional object any</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailOpen(object any)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailOpen", any);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailOpen()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailOpen");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="cc">optional object cc</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="enclosures">optional object enclosures</param>
		/// <param name="includeDocument">optional object includeDocument</param>
		/// <param name="returnReceipt">optional object returnReceipt</param>
		/// <param name="bcc">optional object bcc</param>
		/// <param name="urgent">optional object urgent</param>
		/// <param name="saveCopy">optional object saveCopy</param>
		/// <param name="addRecipient">optional object addRecipient</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSend(object to, object cc, object subject, object body, object enclosures, object includeDocument, object returnReceipt, object bcc, object urgent, object saveCopy, object addRecipient)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSend", new object[]{ to, cc, subject, body, enclosures, includeDocument, returnReceipt, bcc, urgent, saveCopy, addRecipient });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSend()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSend");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSend(object to)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSend", to);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="cc">optional object cc</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSend(object to, object cc)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSend", to, cc);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="cc">optional object cc</param>
		/// <param name="subject">optional object subject</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSend(object to, object cc, object subject)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSend", to, cc, subject);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="cc">optional object cc</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSend(object to, object cc, object subject, object body)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSend", to, cc, subject, body);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="cc">optional object cc</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="enclosures">optional object enclosures</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSend(object to, object cc, object subject, object body, object enclosures)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSend", new object[]{ to, cc, subject, body, enclosures });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="cc">optional object cc</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="enclosures">optional object enclosures</param>
		/// <param name="includeDocument">optional object includeDocument</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSend(object to, object cc, object subject, object body, object enclosures, object includeDocument)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSend", new object[]{ to, cc, subject, body, enclosures, includeDocument });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="cc">optional object cc</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="enclosures">optional object enclosures</param>
		/// <param name="includeDocument">optional object includeDocument</param>
		/// <param name="returnReceipt">optional object returnReceipt</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSend(object to, object cc, object subject, object body, object enclosures, object includeDocument, object returnReceipt)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSend", new object[]{ to, cc, subject, body, enclosures, includeDocument, returnReceipt });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="cc">optional object cc</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="enclosures">optional object enclosures</param>
		/// <param name="includeDocument">optional object includeDocument</param>
		/// <param name="returnReceipt">optional object returnReceipt</param>
		/// <param name="bcc">optional object bcc</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSend(object to, object cc, object subject, object body, object enclosures, object includeDocument, object returnReceipt, object bcc)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSend", new object[]{ to, cc, subject, body, enclosures, includeDocument, returnReceipt, bcc });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="cc">optional object cc</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="enclosures">optional object enclosures</param>
		/// <param name="includeDocument">optional object includeDocument</param>
		/// <param name="returnReceipt">optional object returnReceipt</param>
		/// <param name="bcc">optional object bcc</param>
		/// <param name="urgent">optional object urgent</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSend(object to, object cc, object subject, object body, object enclosures, object includeDocument, object returnReceipt, object bcc, object urgent)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSend", new object[]{ to, cc, subject, body, enclosures, includeDocument, returnReceipt, bcc, urgent });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="cc">optional object cc</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="enclosures">optional object enclosures</param>
		/// <param name="includeDocument">optional object includeDocument</param>
		/// <param name="returnReceipt">optional object returnReceipt</param>
		/// <param name="bcc">optional object bcc</param>
		/// <param name="urgent">optional object urgent</param>
		/// <param name="saveCopy">optional object saveCopy</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSend(object to, object cc, object subject, object body, object enclosures, object includeDocument, object returnReceipt, object bcc, object urgent, object saveCopy)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSend", new object[]{ to, cc, subject, body, enclosures, includeDocument, returnReceipt, bcc, urgent, saveCopy });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="manager">optional object manager</param>
		/// <param name="resources">optional object resources</param>
		/// <param name="taskContacts">optional object taskContacts</param>
		/// <param name="selection">optional object selection</param>
		/// <param name="includeDocument">optional object includeDocument</param>
		/// <param name="includePicture">optional object includePicture</param>
		/// <param name="body">optional object body</param>
		/// <param name="subject">optional object subject</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendScheduleNote(object manager, object resources, object taskContacts, object selection, object includeDocument, object includePicture, object body, object subject)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendScheduleNote", new object[]{ manager, resources, taskContacts, selection, includeDocument, includePicture, body, subject });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendScheduleNote()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendScheduleNote");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="manager">optional object manager</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendScheduleNote(object manager)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendScheduleNote", manager);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="manager">optional object manager</param>
		/// <param name="resources">optional object resources</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendScheduleNote(object manager, object resources)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendScheduleNote", manager, resources);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="manager">optional object manager</param>
		/// <param name="resources">optional object resources</param>
		/// <param name="taskContacts">optional object taskContacts</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendScheduleNote(object manager, object resources, object taskContacts)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendScheduleNote", manager, resources, taskContacts);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="manager">optional object manager</param>
		/// <param name="resources">optional object resources</param>
		/// <param name="taskContacts">optional object taskContacts</param>
		/// <param name="selection">optional object selection</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendScheduleNote(object manager, object resources, object taskContacts, object selection)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendScheduleNote", manager, resources, taskContacts, selection);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="manager">optional object manager</param>
		/// <param name="resources">optional object resources</param>
		/// <param name="taskContacts">optional object taskContacts</param>
		/// <param name="selection">optional object selection</param>
		/// <param name="includeDocument">optional object includeDocument</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendScheduleNote(object manager, object resources, object taskContacts, object selection, object includeDocument)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendScheduleNote", new object[]{ manager, resources, taskContacts, selection, includeDocument });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="manager">optional object manager</param>
		/// <param name="resources">optional object resources</param>
		/// <param name="taskContacts">optional object taskContacts</param>
		/// <param name="selection">optional object selection</param>
		/// <param name="includeDocument">optional object includeDocument</param>
		/// <param name="includePicture">optional object includePicture</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendScheduleNote(object manager, object resources, object taskContacts, object selection, object includeDocument, object includePicture)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendScheduleNote", new object[]{ manager, resources, taskContacts, selection, includeDocument, includePicture });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="manager">optional object manager</param>
		/// <param name="resources">optional object resources</param>
		/// <param name="taskContacts">optional object taskContacts</param>
		/// <param name="selection">optional object selection</param>
		/// <param name="includeDocument">optional object includeDocument</param>
		/// <param name="includePicture">optional object includePicture</param>
		/// <param name="body">optional object body</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendScheduleNote(object manager, object resources, object taskContacts, object selection, object includeDocument, object includePicture, object body)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendScheduleNote", new object[]{ manager, resources, taskContacts, selection, includeDocument, includePicture, body });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailPostDocument()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailPostDocument");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ODBCManageDataSources()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ODBCManageDataSources");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ODBCCreateDataSource()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ODBCCreateDataSource");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="allAtOnce">optional object allAtOnce</param>
		/// <param name="returnWhenDone">optional object returnWhenDone</param>
		/// <param name="trackStatus">optional object trackStatus</param>
		/// <param name="clear">optional object clear</param>
		/// <param name="sendNow">optional object sendNow</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailRoutingSlip(object to, object subject, object body, object allAtOnce, object returnWhenDone, object trackStatus, object clear, object sendNow)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailRoutingSlip", new object[]{ to, subject, body, allAtOnce, returnWhenDone, trackStatus, clear, sendNow });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailRoutingSlip()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailRoutingSlip");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailRoutingSlip(object to)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailRoutingSlip", to);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="subject">optional object subject</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailRoutingSlip(object to, object subject)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailRoutingSlip", to, subject);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailRoutingSlip(object to, object subject, object body)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailRoutingSlip", to, subject, body);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="allAtOnce">optional object allAtOnce</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailRoutingSlip(object to, object subject, object body, object allAtOnce)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailRoutingSlip", to, subject, body, allAtOnce);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="allAtOnce">optional object allAtOnce</param>
		/// <param name="returnWhenDone">optional object returnWhenDone</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailRoutingSlip(object to, object subject, object body, object allAtOnce, object returnWhenDone)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailRoutingSlip", new object[]{ to, subject, body, allAtOnce, returnWhenDone });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="allAtOnce">optional object allAtOnce</param>
		/// <param name="returnWhenDone">optional object returnWhenDone</param>
		/// <param name="trackStatus">optional object trackStatus</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailRoutingSlip(object to, object subject, object body, object allAtOnce, object returnWhenDone, object trackStatus)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailRoutingSlip", new object[]{ to, subject, body, allAtOnce, returnWhenDone, trackStatus });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="to">optional object to</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="allAtOnce">optional object allAtOnce</param>
		/// <param name="returnWhenDone">optional object returnWhenDone</param>
		/// <param name="trackStatus">optional object trackStatus</param>
		/// <param name="clear">optional object clear</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailRoutingSlip(object to, object subject, object body, object allAtOnce, object returnWhenDone, object trackStatus, object clear)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailRoutingSlip", new object[]{ to, subject, body, allAtOnce, returnWhenDone, trackStatus, clear });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="number">optional object number</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileLoadLast(object number)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileLoadLast", number);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileLoadLast()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileLoadLast");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="save">optional NetOffice.MSProjectApi.Enums.PjSaveType Save = 2</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileExit(object save)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileExit", save);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileExit()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileExit");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MenuBars()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MenuBars");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="copy">optional object copy</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="newName">optional object newName</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MenuBarEdit(object copy, object create, object name, object newName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MenuBarEdit", copy, create, name, newName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MenuBarEdit()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MenuBarEdit");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="copy">optional object copy</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MenuBarEdit(object copy)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MenuBarEdit", copy);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="copy">optional object copy</param>
		/// <param name="create">optional object create</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MenuBarEdit(object copy, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MenuBarEdit", copy, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="copy">optional object copy</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MenuBarEdit(object copy, object create, object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MenuBarEdit", copy, create, name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="_default">optional object default</param>
		/// <param name="noFiles">optional object noFiles</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MenuBarApply(string name, object _default, object noFiles)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MenuBarApply", name, _default, noFiles);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MenuBarApply(string name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MenuBarApply", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="_default">optional object default</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MenuBarApply(string name, object _default)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MenuBarApply", name, _default);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditUndo()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditUndo");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditCut()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditCut");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditCopy()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditCopy");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="_object">object object</param>
		/// <param name="forPrinter">object forPrinter</param>
		/// <param name="selectedRows">object selectedRows</param>
		/// <param name="fromDate">object fromDate</param>
		/// <param name="toDate">object toDate</param>
		/// <param name="fileName">object fileName</param>
		/// <param name="scaleOption">optional NetOffice.MSProjectApi.Enums.PjCopyPictureScaleOption ScaleOption = 1</param>
		/// <param name="maxImageHeight">optional object maxImageHeight</param>
		/// <param name="maxImageWidth">optional object maxImageWidth</param>
		/// <param name="measurementUnits">optional object measurementUnits</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditCopyPicture(object _object, object forPrinter, object selectedRows, object fromDate, object toDate, object fileName, object scaleOption, object maxImageHeight, object maxImageWidth, object measurementUnits)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditCopyPicture", new object[]{ _object, forPrinter, selectedRows, fromDate, toDate, fileName, scaleOption, maxImageHeight, maxImageWidth, measurementUnits });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="_object">object object</param>
		/// <param name="forPrinter">object forPrinter</param>
		/// <param name="selectedRows">object selectedRows</param>
		/// <param name="fromDate">object fromDate</param>
		/// <param name="toDate">object toDate</param>
		/// <param name="fileName">object fileName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditCopyPicture(object _object, object forPrinter, object selectedRows, object fromDate, object toDate, object fileName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditCopyPicture", new object[]{ _object, forPrinter, selectedRows, fromDate, toDate, fileName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="_object">object object</param>
		/// <param name="forPrinter">object forPrinter</param>
		/// <param name="selectedRows">object selectedRows</param>
		/// <param name="fromDate">object fromDate</param>
		/// <param name="toDate">object toDate</param>
		/// <param name="fileName">object fileName</param>
		/// <param name="scaleOption">optional NetOffice.MSProjectApi.Enums.PjCopyPictureScaleOption ScaleOption = 1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditCopyPicture(object _object, object forPrinter, object selectedRows, object fromDate, object toDate, object fileName, object scaleOption)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditCopyPicture", new object[]{ _object, forPrinter, selectedRows, fromDate, toDate, fileName, scaleOption });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="_object">object object</param>
		/// <param name="forPrinter">object forPrinter</param>
		/// <param name="selectedRows">object selectedRows</param>
		/// <param name="fromDate">object fromDate</param>
		/// <param name="toDate">object toDate</param>
		/// <param name="fileName">object fileName</param>
		/// <param name="scaleOption">optional NetOffice.MSProjectApi.Enums.PjCopyPictureScaleOption ScaleOption = 1</param>
		/// <param name="maxImageHeight">optional object maxImageHeight</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditCopyPicture(object _object, object forPrinter, object selectedRows, object fromDate, object toDate, object fileName, object scaleOption, object maxImageHeight)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditCopyPicture", new object[]{ _object, forPrinter, selectedRows, fromDate, toDate, fileName, scaleOption, maxImageHeight });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="_object">object object</param>
		/// <param name="forPrinter">object forPrinter</param>
		/// <param name="selectedRows">object selectedRows</param>
		/// <param name="fromDate">object fromDate</param>
		/// <param name="toDate">object toDate</param>
		/// <param name="fileName">object fileName</param>
		/// <param name="scaleOption">optional NetOffice.MSProjectApi.Enums.PjCopyPictureScaleOption ScaleOption = 1</param>
		/// <param name="maxImageHeight">optional object maxImageHeight</param>
		/// <param name="maxImageWidth">optional object maxImageWidth</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditCopyPicture(object _object, object forPrinter, object selectedRows, object fromDate, object toDate, object fileName, object scaleOption, object maxImageHeight, object maxImageWidth)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditCopyPicture", new object[]{ _object, forPrinter, selectedRows, fromDate, toDate, fileName, scaleOption, maxImageHeight, maxImageWidth });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditPaste()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditPaste");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="link">optional object link</param>
		/// <param name="type">optional object type</param>
		/// <param name="displayAsIcon">optional object displayAsIcon</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditPasteSpecial(object link, object type, object displayAsIcon)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditPasteSpecial", link, type, displayAsIcon);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditPasteSpecial()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditPasteSpecial");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="link">optional object link</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditPasteSpecial(object link)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditPasteSpecial", link);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="link">optional object link</param>
		/// <param name="type">optional object type</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditPasteSpecial(object link, object type)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditPasteSpecial", link, type);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditClearFormats()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditClearFormats");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="contents">optional object contents</param>
		/// <param name="formats">optional object formats</param>
		/// <param name="notes">optional object notes</param>
		/// <param name="hyperlinks">optional object hyperlinks</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditClear(object contents, object formats, object notes, object hyperlinks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditClear", contents, formats, notes, hyperlinks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditClear()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditClear");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="contents">optional object contents</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditClear(object contents)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditClear", contents);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="contents">optional object contents</param>
		/// <param name="formats">optional object formats</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditClear(object contents, object formats)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditClear", contents, formats);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="contents">optional object contents</param>
		/// <param name="formats">optional object formats</param>
		/// <param name="notes">optional object notes</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditClear(object contents, object formats, object notes)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditClear", contents, formats, notes);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool RowClear()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "RowClear");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DDEPasteLink()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DDEPasteLink");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditDelete()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditDelete");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ColumnDelete()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ColumnDelete");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool RowDelete()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "RowDelete");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="verb">optional object verb</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ObjectVerb(object verb)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ObjectVerb", verb);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ObjectVerb()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ObjectVerb");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ObjectLinks()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ObjectLinks");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ObjectChangeIcon()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ObjectChangeIcon");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ObjectConvert()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ObjectConvert");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditInsert()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditInsert");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ColumnInsert()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ColumnInsert");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool RowInsert()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "RowInsert");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LinkTasks()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LinkTasks");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="from">Int32 from</param>
		/// <param name="to">Int32 to</param>
		/// <param name="delete">optional object delete</param>
		/// <param name="type">optional object type</param>
		/// <param name="lag">optional object lag</param>
		/// <param name="predecessorProjectName">optional object predecessorProjectName</param>
		/// <param name="successorProjectName">optional object successorProjectName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LinkTasksEdit(Int32 from, Int32 to, object delete, object type, object lag, object predecessorProjectName, object successorProjectName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LinkTasksEdit", new object[]{ from, to, delete, type, lag, predecessorProjectName, successorProjectName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="from">Int32 from</param>
		/// <param name="to">Int32 to</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LinkTasksEdit(Int32 from, Int32 to)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LinkTasksEdit", from, to);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="from">Int32 from</param>
		/// <param name="to">Int32 to</param>
		/// <param name="delete">optional object delete</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LinkTasksEdit(Int32 from, Int32 to, object delete)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LinkTasksEdit", from, to, delete);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="from">Int32 from</param>
		/// <param name="to">Int32 to</param>
		/// <param name="delete">optional object delete</param>
		/// <param name="type">optional object type</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LinkTasksEdit(Int32 from, Int32 to, object delete, object type)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LinkTasksEdit", from, to, delete, type);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="from">Int32 from</param>
		/// <param name="to">Int32 to</param>
		/// <param name="delete">optional object delete</param>
		/// <param name="type">optional object type</param>
		/// <param name="lag">optional object lag</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LinkTasksEdit(Int32 from, Int32 to, object delete, object type, object lag)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LinkTasksEdit", new object[]{ from, to, delete, type, lag });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="from">Int32 from</param>
		/// <param name="to">Int32 to</param>
		/// <param name="delete">optional object delete</param>
		/// <param name="type">optional object type</param>
		/// <param name="lag">optional object lag</param>
		/// <param name="predecessorProjectName">optional object predecessorProjectName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LinkTasksEdit(Int32 from, Int32 to, object delete, object type, object lag, object predecessorProjectName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LinkTasksEdit", new object[]{ from, to, delete, type, lag, predecessorProjectName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UnlinkTasks()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UnlinkTasks");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="resources">object resources</param>
		/// <param name="operation">optional NetOffice.MSProjectApi.Enums.PjResAssignOperation Operation = 0</param>
		/// <param name="with">optional object with</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceAssignment(object resources, object operation, object with)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceAssignment", resources, operation, with);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="resources">object resources</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceAssignment(object resources)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceAssignment", resources);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="resources">object resources</param>
		/// <param name="operation">optional NetOffice.MSProjectApi.Enums.PjResAssignOperation Operation = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceAssignment(object resources, object operation)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceAssignment", resources, operation);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="iD">optional object iD</param>
		/// <param name="date">optional object date</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditGoTo(object iD, object date)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditGoTo", iD, date);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditGoTo()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditGoTo");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="iD">optional object iD</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditGoTo(object iD)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditGoTo", iD);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GotoNextOverAllocation()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GotoNextOverAllocation");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool InsertNotes()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertNotes");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		/// <param name="fieldID">optional object fieldID</param>
		/// <param name="testID">optional object testID</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Find(object field, object test, object value, object next, object matchCase, object fieldID, object testID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Find", new object[]{ field, test, value, next, matchCase, fieldID, testID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Find()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Find");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Find(object field)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Find", field);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Find(object field, object test)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Find", field, test);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Find(object field, object test, object value)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Find", field, test, value);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="next">optional object next</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Find(object field, object test, object value, object next)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Find", field, test, value, next);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Find(object field, object test, object value, object next, object matchCase)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Find", new object[]{ field, test, value, next, matchCase });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		/// <param name="fieldID">optional object fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Find(object field, object test, object value, object next, object matchCase, object fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Find", new object[]{ field, test, value, next, matchCase, fieldID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="replacement">optional object replacement</param>
		/// <param name="replaceAll">optional object replaceAll</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		/// <param name="fieldID">optional object fieldID</param>
		/// <param name="testID">optional object testID</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Replace(object field, object test, object value, object replacement, object replaceAll, object next, object matchCase, object fieldID, object testID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Replace", new object[]{ field, test, value, replacement, replaceAll, next, matchCase, fieldID, testID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Replace()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Replace");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Replace(object field)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Replace", field);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Replace(object field, object test)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Replace", field, test);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Replace(object field, object test, object value)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Replace", field, test, value);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="replacement">optional object replacement</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Replace(object field, object test, object value, object replacement)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Replace", field, test, value, replacement);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="replacement">optional object replacement</param>
		/// <param name="replaceAll">optional object replaceAll</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Replace(object field, object test, object value, object replacement, object replaceAll)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Replace", new object[]{ field, test, value, replacement, replaceAll });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="replacement">optional object replacement</param>
		/// <param name="replaceAll">optional object replaceAll</param>
		/// <param name="next">optional object next</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Replace(object field, object test, object value, object replacement, object replaceAll, object next)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Replace", new object[]{ field, test, value, replacement, replaceAll, next });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="replacement">optional object replacement</param>
		/// <param name="replaceAll">optional object replaceAll</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Replace(object field, object test, object value, object replacement, object replaceAll, object next, object matchCase)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Replace", new object[]{ field, test, value, replacement, replaceAll, next, matchCase });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="replacement">optional object replacement</param>
		/// <param name="replaceAll">optional object replaceAll</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		/// <param name="fieldID">optional object fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Replace(object field, object test, object value, object replacement, object replaceAll, object next, object matchCase, object fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Replace", new object[]{ field, test, value, replacement, replaceAll, next, matchCase, fieldID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectAll()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectAll");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ObjectInsert()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ObjectInsert");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="edition">object edition</param>
		/// <param name="format">optional NetOffice.MSProjectApi.Enums.PjSubscribeFormat Format = 1</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SubscribeTo(object edition, object format)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SubscribeTo", edition, format);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="edition">object edition</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SubscribeTo(object edition)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SubscribeTo", edition);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="isTask">optional object isTask</param>
		/// <param name="uniqueID">optional object uniqueID</param>
		/// <param name="field">optional object field</param>
		/// <param name="automatically">optional object automatically</param>
		/// <param name="action">optional object action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SubscriberOptions(object name, object isTask, object uniqueID, object field, object automatically, object action)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SubscriberOptions", new object[]{ name, isTask, uniqueID, field, automatically, action });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SubscriberOptions()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SubscriberOptions");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SubscriberOptions(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SubscriberOptions", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="isTask">optional object isTask</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SubscriberOptions(object name, object isTask)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SubscriberOptions", name, isTask);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="isTask">optional object isTask</param>
		/// <param name="uniqueID">optional object uniqueID</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SubscriberOptions(object name, object isTask, object uniqueID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SubscriberOptions", name, isTask, uniqueID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="isTask">optional object isTask</param>
		/// <param name="uniqueID">optional object uniqueID</param>
		/// <param name="field">optional object field</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SubscriberOptions(object name, object isTask, object uniqueID, object field)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SubscriberOptions", name, isTask, uniqueID, field);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="isTask">optional object isTask</param>
		/// <param name="uniqueID">optional object uniqueID</param>
		/// <param name="field">optional object field</param>
		/// <param name="automatically">optional object automatically</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SubscriberOptions(object name, object isTask, object uniqueID, object field, object automatically)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SubscriberOptions", new object[]{ name, isTask, uniqueID, field, automatically });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="edition">optional object edition</param>
		/// <param name="contains">optional object contains</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CreatePublisher(object edition, object contains)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreatePublisher", edition, contains);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CreatePublisher()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreatePublisher");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="edition">optional object edition</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CreatePublisher(object edition)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreatePublisher", edition);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="view">optional object view</param>
		/// <param name="isTask">optional object isTask</param>
		/// <param name="uniqueID">optional object uniqueID</param>
		/// <param name="field">optional object field</param>
		/// <param name="onSave">optional object onSave</param>
		/// <param name="action">optional object action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PublisherOptions(object name, object view, object isTask, object uniqueID, object field, object onSave, object action)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PublisherOptions", new object[]{ name, view, isTask, uniqueID, field, onSave, action });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PublisherOptions()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PublisherOptions");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PublisherOptions(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PublisherOptions", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="view">optional object view</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PublisherOptions(object name, object view)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PublisherOptions", name, view);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="view">optional object view</param>
		/// <param name="isTask">optional object isTask</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PublisherOptions(object name, object view, object isTask)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PublisherOptions", name, view, isTask);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="view">optional object view</param>
		/// <param name="isTask">optional object isTask</param>
		/// <param name="uniqueID">optional object uniqueID</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PublisherOptions(object name, object view, object isTask, object uniqueID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PublisherOptions", name, view, isTask, uniqueID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="view">optional object view</param>
		/// <param name="isTask">optional object isTask</param>
		/// <param name="uniqueID">optional object uniqueID</param>
		/// <param name="field">optional object field</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PublisherOptions(object name, object view, object isTask, object uniqueID, object field)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PublisherOptions", new object[]{ name, view, isTask, uniqueID, field });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="view">optional object view</param>
		/// <param name="isTask">optional object isTask</param>
		/// <param name="uniqueID">optional object uniqueID</param>
		/// <param name="field">optional object field</param>
		/// <param name="onSave">optional object onSave</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PublisherOptions(object name, object view, object isTask, object uniqueID, object field, object onSave)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PublisherOptions", new object[]{ name, view, isTask, uniqueID, field, onSave });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="stop">optional object stop</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditionStopAll(object stop)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditionStopAll", stop);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditionStopAll()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditionStopAll");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ClipboardShow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ClipboardShow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="singlePane">optional object singlePane</param>
		/// <param name="toggle">optional object toggle</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewApply(object name, object singlePane, object toggle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewApply", name, singlePane, toggle);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewApply()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewApply");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewApply(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewApply", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="singlePane">optional object singlePane</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewApply(object name, object singlePane)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewApply", name, singlePane);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="screen">optional object screen</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="highlightFilter">optional object highlightFilter</param>
		/// <param name="table">optional object table</param>
		/// <param name="filter">optional object filter</param>
		/// <param name="group">optional object group</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditSingle(object name, object create, object newName, object screen, object showInMenu, object highlightFilter, object table, object filter, object group)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditSingle", new object[]{ name, create, newName, screen, showInMenu, highlightFilter, table, filter, group });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditSingle()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditSingle");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditSingle(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditSingle", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditSingle(object name, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditSingle", name, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="newName">optional object newName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditSingle(object name, object create, object newName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditSingle", name, create, newName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="screen">optional object screen</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditSingle(object name, object create, object newName, object screen)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditSingle", name, create, newName, screen);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="screen">optional object screen</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditSingle(object name, object create, object newName, object screen, object showInMenu)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditSingle", new object[]{ name, create, newName, screen, showInMenu });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="screen">optional object screen</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="highlightFilter">optional object highlightFilter</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditSingle(object name, object create, object newName, object screen, object showInMenu, object highlightFilter)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditSingle", new object[]{ name, create, newName, screen, showInMenu, highlightFilter });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="screen">optional object screen</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="highlightFilter">optional object highlightFilter</param>
		/// <param name="table">optional object table</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditSingle(object name, object create, object newName, object screen, object showInMenu, object highlightFilter, object table)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditSingle", new object[]{ name, create, newName, screen, showInMenu, highlightFilter, table });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="screen">optional object screen</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="highlightFilter">optional object highlightFilter</param>
		/// <param name="table">optional object table</param>
		/// <param name="filter">optional object filter</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditSingle(object name, object create, object newName, object screen, object showInMenu, object highlightFilter, object table, object filter)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditSingle", new object[]{ name, create, newName, screen, showInMenu, highlightFilter, table, filter });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="topView">optional object topView</param>
		/// <param name="bottomView">optional object bottomView</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditCombination(object name, object create, object newName, object topView, object bottomView, object showInMenu)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditCombination", new object[]{ name, create, newName, topView, bottomView, showInMenu });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditCombination()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditCombination");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditCombination(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditCombination", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditCombination(object name, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditCombination", name, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="newName">optional object newName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditCombination(object name, object create, object newName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditCombination", name, create, newName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="topView">optional object topView</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditCombination(object name, object create, object newName, object topView)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditCombination", name, create, newName, topView);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="topView">optional object topView</param>
		/// <param name="bottomView">optional object bottomView</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewEditCombination(object name, object create, object newName, object topView, object bottomView)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewEditCombination", new object[]{ name, create, newName, topView, bottomView });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableApply(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableApply", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableApply()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableApply");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="rowHeight">optional object rowHeight</param>
		/// <param name="columnPosition">optional object columnPosition</param>
		/// <param name="alignTitle">optional object alignTitle</param>
		/// <param name="headerAutoRowHeightAdjustment">optional object headerAutoRowHeightAdjustment</param>
		/// <param name="headerTextWrap">optional object headerTextWrap</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight, object columnPosition, object alignTitle, object headerAutoRowHeightAdjustment, object headerTextWrap)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight, columnPosition, alignTitle, headerAutoRowHeightAdjustment, headerTextWrap });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", name, taskTable);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", name, taskTable, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", name, taskTable, create, overwriteExisting);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="rowHeight">optional object rowHeight</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="rowHeight">optional object rowHeight</param>
		/// <param name="columnPosition">optional object columnPosition</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight, object columnPosition)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight, columnPosition });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="rowHeight">optional object rowHeight</param>
		/// <param name="columnPosition">optional object columnPosition</param>
		/// <param name="alignTitle">optional object alignTitle</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight, object columnPosition, object alignTitle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight, columnPosition, alignTitle });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="rowHeight">optional object rowHeight</param>
		/// <param name="columnPosition">optional object columnPosition</param>
		/// <param name="alignTitle">optional object alignTitle</param>
		/// <param name="headerAutoRowHeightAdjustment">optional object headerAutoRowHeightAdjustment</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TableEdit(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight, object columnPosition, object alignTitle, object headerAutoRowHeightAdjustment)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEdit", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight, columnPosition, alignTitle, headerAutoRowHeightAdjustment });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="highlight">optional object highlight</param>
		/// <param name="value1">optional object value1</param>
		/// <param name="value2">optional object value2</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterApply(object name, object highlight, object value1, object value2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterApply", name, highlight, value1, value2);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterApply()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterApply");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterApply(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterApply", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="highlight">optional object highlight</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterApply(object name, object highlight)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterApply", name, highlight);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="highlight">optional object highlight</param>
		/// <param name="value1">optional object value1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterApply(object name, object highlight, object value1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterApply", name, highlight, value1);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskFilter">bool taskFilter</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="parenthesis">optional object parenthesis</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="operation">optional object operation</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="showSummaryTasks">optional object showSummaryTasks</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterEdit(string name, bool taskFilter, object create, object overwriteExisting, object parenthesis, object newName, object fieldName, object newFieldName, object test, object value, object operation, object showInMenu, object showSummaryTasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterEdit", new object[]{ name, taskFilter, create, overwriteExisting, parenthesis, newName, fieldName, newFieldName, test, value, operation, showInMenu, showSummaryTasks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskFilter">bool taskFilter</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterEdit(string name, bool taskFilter)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterEdit", name, taskFilter);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskFilter">bool taskFilter</param>
		/// <param name="create">optional object create</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterEdit(string name, bool taskFilter, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterEdit", name, taskFilter, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskFilter">bool taskFilter</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterEdit(string name, bool taskFilter, object create, object overwriteExisting)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterEdit", name, taskFilter, create, overwriteExisting);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskFilter">bool taskFilter</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="parenthesis">optional object parenthesis</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterEdit(string name, bool taskFilter, object create, object overwriteExisting, object parenthesis)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterEdit", new object[]{ name, taskFilter, create, overwriteExisting, parenthesis });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskFilter">bool taskFilter</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="parenthesis">optional object parenthesis</param>
		/// <param name="newName">optional object newName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterEdit(string name, bool taskFilter, object create, object overwriteExisting, object parenthesis, object newName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterEdit", new object[]{ name, taskFilter, create, overwriteExisting, parenthesis, newName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskFilter">bool taskFilter</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="parenthesis">optional object parenthesis</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterEdit(string name, bool taskFilter, object create, object overwriteExisting, object parenthesis, object newName, object fieldName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterEdit", new object[]{ name, taskFilter, create, overwriteExisting, parenthesis, newName, fieldName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskFilter">bool taskFilter</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="parenthesis">optional object parenthesis</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterEdit(string name, bool taskFilter, object create, object overwriteExisting, object parenthesis, object newName, object fieldName, object newFieldName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterEdit", new object[]{ name, taskFilter, create, overwriteExisting, parenthesis, newName, fieldName, newFieldName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskFilter">bool taskFilter</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="parenthesis">optional object parenthesis</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="test">optional object test</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterEdit(string name, bool taskFilter, object create, object overwriteExisting, object parenthesis, object newName, object fieldName, object newFieldName, object test)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterEdit", new object[]{ name, taskFilter, create, overwriteExisting, parenthesis, newName, fieldName, newFieldName, test });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskFilter">bool taskFilter</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="parenthesis">optional object parenthesis</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterEdit(string name, bool taskFilter, object create, object overwriteExisting, object parenthesis, object newName, object fieldName, object newFieldName, object test, object value)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterEdit", new object[]{ name, taskFilter, create, overwriteExisting, parenthesis, newName, fieldName, newFieldName, test, value });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskFilter">bool taskFilter</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="parenthesis">optional object parenthesis</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="operation">optional object operation</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterEdit(string name, bool taskFilter, object create, object overwriteExisting, object parenthesis, object newName, object fieldName, object newFieldName, object test, object value, object operation)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterEdit", new object[]{ name, taskFilter, create, overwriteExisting, parenthesis, newName, fieldName, newFieldName, test, value, operation });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskFilter">bool taskFilter</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="parenthesis">optional object parenthesis</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="operation">optional object operation</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FilterEdit(string name, bool taskFilter, object create, object overwriteExisting, object parenthesis, object newName, object fieldName, object newFieldName, object test, object value, object operation, object showInMenu)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterEdit", new object[]{ name, taskFilter, create, overwriteExisting, parenthesis, newName, fieldName, newFieldName, test, value, operation, showInMenu });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="author">optional object author</param>
		/// <param name="company">optional object company</param>
		/// <param name="manager">optional object manager</param>
		/// <param name="keywords">optional object keywords</param>
		/// <param name="comments">optional object comments</param>
		/// <param name="start">optional object start</param>
		/// <param name="finish">optional object finish</param>
		/// <param name="scheduleFrom">optional object scheduleFrom</param>
		/// <param name="currentDate">optional object currentDate</param>
		/// <param name="calendar">optional object calendar</param>
		/// <param name="statusDate">optional object statusDate</param>
		/// <param name="priority">optional object priority</param>
		/// <param name="partiallyDisabled">optional object partiallyDisabled</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject, object author, object company, object manager, object keywords, object comments, object start, object finish, object scheduleFrom, object currentDate, object calendar, object statusDate, object priority, object partiallyDisabled)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", new object[]{ project, title, subject, author, company, manager, keywords, comments, start, finish, scheduleFrom, currentDate, calendar, statusDate, priority, partiallyDisabled });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", project);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", project, title);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", project, title, subject);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="author">optional object author</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject, object author)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", project, title, subject, author);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="author">optional object author</param>
		/// <param name="company">optional object company</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject, object author, object company)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", new object[]{ project, title, subject, author, company });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="author">optional object author</param>
		/// <param name="company">optional object company</param>
		/// <param name="manager">optional object manager</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject, object author, object company, object manager)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", new object[]{ project, title, subject, author, company, manager });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="author">optional object author</param>
		/// <param name="company">optional object company</param>
		/// <param name="manager">optional object manager</param>
		/// <param name="keywords">optional object keywords</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject, object author, object company, object manager, object keywords)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", new object[]{ project, title, subject, author, company, manager, keywords });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="author">optional object author</param>
		/// <param name="company">optional object company</param>
		/// <param name="manager">optional object manager</param>
		/// <param name="keywords">optional object keywords</param>
		/// <param name="comments">optional object comments</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject, object author, object company, object manager, object keywords, object comments)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", new object[]{ project, title, subject, author, company, manager, keywords, comments });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="author">optional object author</param>
		/// <param name="company">optional object company</param>
		/// <param name="manager">optional object manager</param>
		/// <param name="keywords">optional object keywords</param>
		/// <param name="comments">optional object comments</param>
		/// <param name="start">optional object start</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject, object author, object company, object manager, object keywords, object comments, object start)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", new object[]{ project, title, subject, author, company, manager, keywords, comments, start });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="author">optional object author</param>
		/// <param name="company">optional object company</param>
		/// <param name="manager">optional object manager</param>
		/// <param name="keywords">optional object keywords</param>
		/// <param name="comments">optional object comments</param>
		/// <param name="start">optional object start</param>
		/// <param name="finish">optional object finish</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject, object author, object company, object manager, object keywords, object comments, object start, object finish)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", new object[]{ project, title, subject, author, company, manager, keywords, comments, start, finish });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="author">optional object author</param>
		/// <param name="company">optional object company</param>
		/// <param name="manager">optional object manager</param>
		/// <param name="keywords">optional object keywords</param>
		/// <param name="comments">optional object comments</param>
		/// <param name="start">optional object start</param>
		/// <param name="finish">optional object finish</param>
		/// <param name="scheduleFrom">optional object scheduleFrom</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject, object author, object company, object manager, object keywords, object comments, object start, object finish, object scheduleFrom)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", new object[]{ project, title, subject, author, company, manager, keywords, comments, start, finish, scheduleFrom });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="author">optional object author</param>
		/// <param name="company">optional object company</param>
		/// <param name="manager">optional object manager</param>
		/// <param name="keywords">optional object keywords</param>
		/// <param name="comments">optional object comments</param>
		/// <param name="start">optional object start</param>
		/// <param name="finish">optional object finish</param>
		/// <param name="scheduleFrom">optional object scheduleFrom</param>
		/// <param name="currentDate">optional object currentDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject, object author, object company, object manager, object keywords, object comments, object start, object finish, object scheduleFrom, object currentDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", new object[]{ project, title, subject, author, company, manager, keywords, comments, start, finish, scheduleFrom, currentDate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="author">optional object author</param>
		/// <param name="company">optional object company</param>
		/// <param name="manager">optional object manager</param>
		/// <param name="keywords">optional object keywords</param>
		/// <param name="comments">optional object comments</param>
		/// <param name="start">optional object start</param>
		/// <param name="finish">optional object finish</param>
		/// <param name="scheduleFrom">optional object scheduleFrom</param>
		/// <param name="currentDate">optional object currentDate</param>
		/// <param name="calendar">optional object calendar</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject, object author, object company, object manager, object keywords, object comments, object start, object finish, object scheduleFrom, object currentDate, object calendar)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", new object[]{ project, title, subject, author, company, manager, keywords, comments, start, finish, scheduleFrom, currentDate, calendar });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="author">optional object author</param>
		/// <param name="company">optional object company</param>
		/// <param name="manager">optional object manager</param>
		/// <param name="keywords">optional object keywords</param>
		/// <param name="comments">optional object comments</param>
		/// <param name="start">optional object start</param>
		/// <param name="finish">optional object finish</param>
		/// <param name="scheduleFrom">optional object scheduleFrom</param>
		/// <param name="currentDate">optional object currentDate</param>
		/// <param name="calendar">optional object calendar</param>
		/// <param name="statusDate">optional object statusDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject, object author, object company, object manager, object keywords, object comments, object start, object finish, object scheduleFrom, object currentDate, object calendar, object statusDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", new object[]{ project, title, subject, author, company, manager, keywords, comments, start, finish, scheduleFrom, currentDate, calendar, statusDate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		/// <param name="title">optional object title</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="author">optional object author</param>
		/// <param name="company">optional object company</param>
		/// <param name="manager">optional object manager</param>
		/// <param name="keywords">optional object keywords</param>
		/// <param name="comments">optional object comments</param>
		/// <param name="start">optional object start</param>
		/// <param name="finish">optional object finish</param>
		/// <param name="scheduleFrom">optional object scheduleFrom</param>
		/// <param name="currentDate">optional object currentDate</param>
		/// <param name="calendar">optional object calendar</param>
		/// <param name="statusDate">optional object statusDate</param>
		/// <param name="priority">optional object priority</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectSummaryInfo(object project, object title, object subject, object author, object company, object manager, object keywords, object comments, object start, object finish, object scheduleFrom, object currentDate, object calendar, object statusDate, object priority)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectSummaryInfo", new object[]{ project, title, subject, author, company, manager, keywords, comments, start, finish, scheduleFrom, currentDate, calendar, statusDate, priority });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="project">optional object project</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectStatistics(object project)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectStatistics", project);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProjectStatistics()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectStatistics");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startWeekOnMonday">optional object startWeekOnMonday</param>
		/// <param name="startYearIn">optional object startYearIn</param>
		/// <param name="startTime">optional object startTime</param>
		/// <param name="finishTime">optional object finishTime</param>
		/// <param name="hoursPerDay">optional object hoursPerDay</param>
		/// <param name="hoursPerWeek">optional object hoursPerWeek</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="startWeekOn">optional object startWeekOn</param>
		/// <param name="useFYStartYear">optional object useFYStartYear</param>
		/// <param name="daysPerMonth">optional object daysPerMonth</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalendar(object startWeekOnMonday, object startYearIn, object startTime, object finishTime, object hoursPerDay, object hoursPerWeek, object setDefaults, object startWeekOn, object useFYStartYear, object daysPerMonth)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalendar", new object[]{ startWeekOnMonday, startYearIn, startTime, finishTime, hoursPerDay, hoursPerWeek, setDefaults, startWeekOn, useFYStartYear, daysPerMonth });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalendar()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalendar");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startWeekOnMonday">optional object startWeekOnMonday</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalendar(object startWeekOnMonday)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalendar", startWeekOnMonday);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startWeekOnMonday">optional object startWeekOnMonday</param>
		/// <param name="startYearIn">optional object startYearIn</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalendar(object startWeekOnMonday, object startYearIn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalendar", startWeekOnMonday, startYearIn);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startWeekOnMonday">optional object startWeekOnMonday</param>
		/// <param name="startYearIn">optional object startYearIn</param>
		/// <param name="startTime">optional object startTime</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalendar(object startWeekOnMonday, object startYearIn, object startTime)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalendar", startWeekOnMonday, startYearIn, startTime);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startWeekOnMonday">optional object startWeekOnMonday</param>
		/// <param name="startYearIn">optional object startYearIn</param>
		/// <param name="startTime">optional object startTime</param>
		/// <param name="finishTime">optional object finishTime</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalendar(object startWeekOnMonday, object startYearIn, object startTime, object finishTime)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalendar", startWeekOnMonday, startYearIn, startTime, finishTime);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startWeekOnMonday">optional object startWeekOnMonday</param>
		/// <param name="startYearIn">optional object startYearIn</param>
		/// <param name="startTime">optional object startTime</param>
		/// <param name="finishTime">optional object finishTime</param>
		/// <param name="hoursPerDay">optional object hoursPerDay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalendar(object startWeekOnMonday, object startYearIn, object startTime, object finishTime, object hoursPerDay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalendar", new object[]{ startWeekOnMonday, startYearIn, startTime, finishTime, hoursPerDay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startWeekOnMonday">optional object startWeekOnMonday</param>
		/// <param name="startYearIn">optional object startYearIn</param>
		/// <param name="startTime">optional object startTime</param>
		/// <param name="finishTime">optional object finishTime</param>
		/// <param name="hoursPerDay">optional object hoursPerDay</param>
		/// <param name="hoursPerWeek">optional object hoursPerWeek</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalendar(object startWeekOnMonday, object startYearIn, object startTime, object finishTime, object hoursPerDay, object hoursPerWeek)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalendar", new object[]{ startWeekOnMonday, startYearIn, startTime, finishTime, hoursPerDay, hoursPerWeek });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startWeekOnMonday">optional object startWeekOnMonday</param>
		/// <param name="startYearIn">optional object startYearIn</param>
		/// <param name="startTime">optional object startTime</param>
		/// <param name="finishTime">optional object finishTime</param>
		/// <param name="hoursPerDay">optional object hoursPerDay</param>
		/// <param name="hoursPerWeek">optional object hoursPerWeek</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalendar(object startWeekOnMonday, object startYearIn, object startTime, object finishTime, object hoursPerDay, object hoursPerWeek, object setDefaults)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalendar", new object[]{ startWeekOnMonday, startYearIn, startTime, finishTime, hoursPerDay, hoursPerWeek, setDefaults });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startWeekOnMonday">optional object startWeekOnMonday</param>
		/// <param name="startYearIn">optional object startYearIn</param>
		/// <param name="startTime">optional object startTime</param>
		/// <param name="finishTime">optional object finishTime</param>
		/// <param name="hoursPerDay">optional object hoursPerDay</param>
		/// <param name="hoursPerWeek">optional object hoursPerWeek</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="startWeekOn">optional object startWeekOn</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalendar(object startWeekOnMonday, object startYearIn, object startTime, object finishTime, object hoursPerDay, object hoursPerWeek, object setDefaults, object startWeekOn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalendar", new object[]{ startWeekOnMonday, startYearIn, startTime, finishTime, hoursPerDay, hoursPerWeek, setDefaults, startWeekOn });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="startWeekOnMonday">optional object startWeekOnMonday</param>
		/// <param name="startYearIn">optional object startYearIn</param>
		/// <param name="startTime">optional object startTime</param>
		/// <param name="finishTime">optional object finishTime</param>
		/// <param name="hoursPerDay">optional object hoursPerDay</param>
		/// <param name="hoursPerWeek">optional object hoursPerWeek</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="startWeekOn">optional object startWeekOn</param>
		/// <param name="useFYStartYear">optional object useFYStartYear</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalendar(object startWeekOnMonday, object startYearIn, object startTime, object finishTime, object hoursPerDay, object hoursPerWeek, object setDefaults, object startWeekOn, object useFYStartYear)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalendar", new object[]{ startWeekOnMonday, startYearIn, startTime, finishTime, hoursPerDay, hoursPerWeek, setDefaults, startWeekOn, useFYStartYear });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		/// <param name="setDefaultsTimeUnits">optional object setDefaultsTimeUnits</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaultsHyperlink">optional object setDefaultsHyperlink</param>
		/// <param name="inCellEditing">optional object inCellEditing</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaultsHyperlink, object inCellEditing)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaultsHyperlink, inCellEditing });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", moveAfterReturn);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", moveAfterReturn, dragAndDrop);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", moveAfterReturn, dragAndDrop, updateLinks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		/// <param name="setDefaultsTimeUnits">optional object setDefaultsTimeUnits</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		/// <param name="setDefaultsTimeUnits">optional object setDefaultsTimeUnits</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits, object hyperlinkColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits, hyperlinkColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		/// <param name="setDefaultsTimeUnits">optional object setDefaultsTimeUnits</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits, object hyperlinkColor, object followedHyperlinkColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits, hyperlinkColor, followedHyperlinkColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		/// <param name="setDefaultsTimeUnits">optional object setDefaultsTimeUnits</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		/// <param name="setDefaultsTimeUnits">optional object setDefaultsTimeUnits</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaultsHyperlink">optional object setDefaultsHyperlink</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsEdit(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaultsHyperlink)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEdit", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaultsHyperlink });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		/// <param name="autoFilter">optional object autoFilter</param>
		/// <param name="macroVirusProtection">optional object macroVirusProtection</param>
		/// <param name="displayRecentFiles">optional object displayRecentFiles</param>
		/// <param name="recentFilesMaximum">optional object recentFilesMaximum</param>
		/// <param name="fontConversion">optional object fontConversion</param>
		/// <param name="showStartupWorkpane">optional object showStartupWorkpane</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter, object macroVirusProtection, object displayRecentFiles, object recentFilesMaximum, object fontConversion, object showStartupWorkpane)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter, macroVirusProtection, displayRecentFiles, recentFilesMaximum, fontConversion, showStartupWorkpane });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", planningWizard);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", planningWizard, wizardUsage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", planningWizard, wizardUsage, wizardErrors);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", planningWizard, wizardUsage, wizardErrors, wizardScheduling);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		/// <param name="autoFilter">optional object autoFilter</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		/// <param name="autoFilter">optional object autoFilter</param>
		/// <param name="macroVirusProtection">optional object macroVirusProtection</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter, object macroVirusProtection)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter, macroVirusProtection });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		/// <param name="autoFilter">optional object autoFilter</param>
		/// <param name="macroVirusProtection">optional object macroVirusProtection</param>
		/// <param name="displayRecentFiles">optional object displayRecentFiles</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter, object macroVirusProtection, object displayRecentFiles)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter, macroVirusProtection, displayRecentFiles });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		/// <param name="autoFilter">optional object autoFilter</param>
		/// <param name="macroVirusProtection">optional object macroVirusProtection</param>
		/// <param name="displayRecentFiles">optional object displayRecentFiles</param>
		/// <param name="recentFilesMaximum">optional object recentFilesMaximum</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter, object macroVirusProtection, object displayRecentFiles, object recentFilesMaximum)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter, macroVirusProtection, displayRecentFiles, recentFilesMaximum });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		/// <param name="autoFilter">optional object autoFilter</param>
		/// <param name="macroVirusProtection">optional object macroVirusProtection</param>
		/// <param name="displayRecentFiles">optional object displayRecentFiles</param>
		/// <param name="recentFilesMaximum">optional object recentFilesMaximum</param>
		/// <param name="fontConversion">optional object fontConversion</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneral(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter, object macroVirusProtection, object displayRecentFiles, object recentFilesMaximum, object fontConversion)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneral", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter, macroVirusProtection, displayRecentFiles, recentFilesMaximum, fontConversion });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		/// <param name="autoLink">optional object autoLink</param>
		/// <param name="autoSplit">optional object autoSplit</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="taskType">optional object taskType</param>
		/// <param name="durationUnits">optional object durationUnits</param>
		/// <param name="workUnits">optional object workUnits</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="assignmentUnits">optional object assignmentUnits</param>
		/// <param name="effortDriven">optional object effortDriven</param>
		/// <param name="honorConstraints">optional object honorConstraints</param>
		/// <param name="showEstimated">optional object showEstimated</param>
		/// <param name="newTasksEstimated">optional object newTasksEstimated</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink, object autoSplit, object criticalSlack, object taskType, object durationUnits, object workUnits, object autoTrack, object setDefaults, object assignmentUnits, object effortDriven, object honorConstraints, object showEstimated, object newTasksEstimated)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", new object[]{ scheduleMessages, startOnCurrentDate, autoLink, autoSplit, criticalSlack, taskType, durationUnits, workUnits, autoTrack, setDefaults, assignmentUnits, effortDriven, honorConstraints, showEstimated, newTasksEstimated });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", scheduleMessages);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", scheduleMessages, startOnCurrentDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		/// <param name="autoLink">optional object autoLink</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", scheduleMessages, startOnCurrentDate, autoLink);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		/// <param name="autoLink">optional object autoLink</param>
		/// <param name="autoSplit">optional object autoSplit</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink, object autoSplit)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", scheduleMessages, startOnCurrentDate, autoLink, autoSplit);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		/// <param name="autoLink">optional object autoLink</param>
		/// <param name="autoSplit">optional object autoSplit</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink, object autoSplit, object criticalSlack)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", new object[]{ scheduleMessages, startOnCurrentDate, autoLink, autoSplit, criticalSlack });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		/// <param name="autoLink">optional object autoLink</param>
		/// <param name="autoSplit">optional object autoSplit</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="taskType">optional object taskType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink, object autoSplit, object criticalSlack, object taskType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", new object[]{ scheduleMessages, startOnCurrentDate, autoLink, autoSplit, criticalSlack, taskType });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		/// <param name="autoLink">optional object autoLink</param>
		/// <param name="autoSplit">optional object autoSplit</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="taskType">optional object taskType</param>
		/// <param name="durationUnits">optional object durationUnits</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink, object autoSplit, object criticalSlack, object taskType, object durationUnits)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", new object[]{ scheduleMessages, startOnCurrentDate, autoLink, autoSplit, criticalSlack, taskType, durationUnits });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		/// <param name="autoLink">optional object autoLink</param>
		/// <param name="autoSplit">optional object autoSplit</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="taskType">optional object taskType</param>
		/// <param name="durationUnits">optional object durationUnits</param>
		/// <param name="workUnits">optional object workUnits</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink, object autoSplit, object criticalSlack, object taskType, object durationUnits, object workUnits)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", new object[]{ scheduleMessages, startOnCurrentDate, autoLink, autoSplit, criticalSlack, taskType, durationUnits, workUnits });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		/// <param name="autoLink">optional object autoLink</param>
		/// <param name="autoSplit">optional object autoSplit</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="taskType">optional object taskType</param>
		/// <param name="durationUnits">optional object durationUnits</param>
		/// <param name="workUnits">optional object workUnits</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink, object autoSplit, object criticalSlack, object taskType, object durationUnits, object workUnits, object autoTrack)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", new object[]{ scheduleMessages, startOnCurrentDate, autoLink, autoSplit, criticalSlack, taskType, durationUnits, workUnits, autoTrack });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		/// <param name="autoLink">optional object autoLink</param>
		/// <param name="autoSplit">optional object autoSplit</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="taskType">optional object taskType</param>
		/// <param name="durationUnits">optional object durationUnits</param>
		/// <param name="workUnits">optional object workUnits</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink, object autoSplit, object criticalSlack, object taskType, object durationUnits, object workUnits, object autoTrack, object setDefaults)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", new object[]{ scheduleMessages, startOnCurrentDate, autoLink, autoSplit, criticalSlack, taskType, durationUnits, workUnits, autoTrack, setDefaults });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		/// <param name="autoLink">optional object autoLink</param>
		/// <param name="autoSplit">optional object autoSplit</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="taskType">optional object taskType</param>
		/// <param name="durationUnits">optional object durationUnits</param>
		/// <param name="workUnits">optional object workUnits</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="assignmentUnits">optional object assignmentUnits</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink, object autoSplit, object criticalSlack, object taskType, object durationUnits, object workUnits, object autoTrack, object setDefaults, object assignmentUnits)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", new object[]{ scheduleMessages, startOnCurrentDate, autoLink, autoSplit, criticalSlack, taskType, durationUnits, workUnits, autoTrack, setDefaults, assignmentUnits });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		/// <param name="autoLink">optional object autoLink</param>
		/// <param name="autoSplit">optional object autoSplit</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="taskType">optional object taskType</param>
		/// <param name="durationUnits">optional object durationUnits</param>
		/// <param name="workUnits">optional object workUnits</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="assignmentUnits">optional object assignmentUnits</param>
		/// <param name="effortDriven">optional object effortDriven</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink, object autoSplit, object criticalSlack, object taskType, object durationUnits, object workUnits, object autoTrack, object setDefaults, object assignmentUnits, object effortDriven)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", new object[]{ scheduleMessages, startOnCurrentDate, autoLink, autoSplit, criticalSlack, taskType, durationUnits, workUnits, autoTrack, setDefaults, assignmentUnits, effortDriven });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		/// <param name="autoLink">optional object autoLink</param>
		/// <param name="autoSplit">optional object autoSplit</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="taskType">optional object taskType</param>
		/// <param name="durationUnits">optional object durationUnits</param>
		/// <param name="workUnits">optional object workUnits</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="assignmentUnits">optional object assignmentUnits</param>
		/// <param name="effortDriven">optional object effortDriven</param>
		/// <param name="honorConstraints">optional object honorConstraints</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink, object autoSplit, object criticalSlack, object taskType, object durationUnits, object workUnits, object autoTrack, object setDefaults, object assignmentUnits, object effortDriven, object honorConstraints)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", new object[]{ scheduleMessages, startOnCurrentDate, autoLink, autoSplit, criticalSlack, taskType, durationUnits, workUnits, autoTrack, setDefaults, assignmentUnits, effortDriven, honorConstraints });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="scheduleMessages">optional object scheduleMessages</param>
		/// <param name="startOnCurrentDate">optional object startOnCurrentDate</param>
		/// <param name="autoLink">optional object autoLink</param>
		/// <param name="autoSplit">optional object autoSplit</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="taskType">optional object taskType</param>
		/// <param name="durationUnits">optional object durationUnits</param>
		/// <param name="workUnits">optional object workUnits</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="assignmentUnits">optional object assignmentUnits</param>
		/// <param name="effortDriven">optional object effortDriven</param>
		/// <param name="honorConstraints">optional object honorConstraints</param>
		/// <param name="showEstimated">optional object showEstimated</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSchedule(object scheduleMessages, object startOnCurrentDate, object autoLink, object autoSplit, object criticalSlack, object taskType, object durationUnits, object workUnits, object autoTrack, object setDefaults, object assignmentUnits, object effortDriven, object honorConstraints, object showEstimated)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSchedule", new object[]{ scheduleMessages, startOnCurrentDate, autoLink, autoSplit, criticalSlack, taskType, durationUnits, workUnits, autoTrack, setDefaults, assignmentUnits, effortDriven, honorConstraints, showEstimated });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		/// <param name="displayExternalPredecessors">optional object displayExternalPredecessors</param>
		/// <param name="crossProjectLinksInfo">optional object crossProjectLinksInfo</param>
		/// <param name="acceptNewExternalData">optional object acceptNewExternalData</param>
		/// <param name="displayWindowsInTaskbar">optional object displayWindowsInTaskbar</param>
		/// <param name="displayScreentips">optional object displayScreentips</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors, object crossProjectLinksInfo, object acceptNewExternalData, object displayWindowsInTaskbar, object displayScreentips)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors, crossProjectLinksInfo, acceptNewExternalData, displayWindowsInTaskbar, displayScreentips });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", defaultView);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", defaultView, dateFormat);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", defaultView, dateFormat, projectSummary);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", defaultView, dateFormat, projectSummary, displayStatusBar);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object displayOutlineNumber)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, displayOutlineNumber });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object displayOutlineNumber, object displayOutlineSymbols)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, displayOutlineNumber, displayOutlineSymbols });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, displayOutlineNumber, displayOutlineSymbols, displayNameIndent });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		/// <param name="displayExternalPredecessors">optional object displayExternalPredecessors</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		/// <param name="displayExternalPredecessors">optional object displayExternalPredecessors</param>
		/// <param name="crossProjectLinksInfo">optional object crossProjectLinksInfo</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors, object crossProjectLinksInfo)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors, crossProjectLinksInfo });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		/// <param name="displayExternalPredecessors">optional object displayExternalPredecessors</param>
		/// <param name="crossProjectLinksInfo">optional object crossProjectLinksInfo</param>
		/// <param name="acceptNewExternalData">optional object acceptNewExternalData</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors, object crossProjectLinksInfo, object acceptNewExternalData)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors, crossProjectLinksInfo, acceptNewExternalData });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		/// <param name="displayExternalPredecessors">optional object displayExternalPredecessors</param>
		/// <param name="crossProjectLinksInfo">optional object crossProjectLinksInfo</param>
		/// <param name="acceptNewExternalData">optional object acceptNewExternalData</param>
		/// <param name="displayWindowsInTaskbar">optional object displayWindowsInTaskbar</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsView(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors, object crossProjectLinksInfo, object acceptNewExternalData, object displayWindowsInTaskbar)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsView", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors, crossProjectLinksInfo, acceptNewExternalData, displayWindowsInTaskbar });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="serverIdentification">optional object serverIdentification</param>
		/// <param name="allowTaskDelegation">optional object allowTaskDelegation</param>
		/// <param name="updateProjectToWeb">optional object updateProjectToWeb</param>
		/// <param name="publishInformationOnSave">optional object publishInformationOnSave</param>
		/// <param name="setDefaultsMessaging">optional object setDefaultsMessaging</param>
		/// <param name="setDefaultsWebServer">optional object setDefaultsWebServer</param>
		/// <param name="managerEmail">optional object managerEmail</param>
		/// <param name="confirmationDialog">optional object confirmationDialog</param>
		/// <param name="changesMarkAssnDirty">optional object changesMarkAssnDirty</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaults, object serverIdentification, object allowTaskDelegation, object updateProjectToWeb, object publishInformationOnSave, object setDefaultsMessaging, object setDefaultsWebServer, object managerEmail, object confirmationDialog, object changesMarkAssnDirty)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaults, serverIdentification, allowTaskDelegation, updateProjectToWeb, publishInformationOnSave, setDefaultsMessaging, setDefaultsWebServer, managerEmail, confirmationDialog, changesMarkAssnDirty });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", workgroupMessages);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", workgroupMessages, serverURL);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", workgroupMessages, serverURL, serverPath);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", workgroupMessages, serverURL, serverPath, receiveNotifications);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor, object followedHyperlinkColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor, followedHyperlinkColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaults)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaults });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="serverIdentification">optional object serverIdentification</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaults, object serverIdentification)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaults, serverIdentification });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="serverIdentification">optional object serverIdentification</param>
		/// <param name="allowTaskDelegation">optional object allowTaskDelegation</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaults, object serverIdentification, object allowTaskDelegation)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaults, serverIdentification, allowTaskDelegation });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="serverIdentification">optional object serverIdentification</param>
		/// <param name="allowTaskDelegation">optional object allowTaskDelegation</param>
		/// <param name="updateProjectToWeb">optional object updateProjectToWeb</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaults, object serverIdentification, object allowTaskDelegation, object updateProjectToWeb)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaults, serverIdentification, allowTaskDelegation, updateProjectToWeb });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="serverIdentification">optional object serverIdentification</param>
		/// <param name="allowTaskDelegation">optional object allowTaskDelegation</param>
		/// <param name="updateProjectToWeb">optional object updateProjectToWeb</param>
		/// <param name="publishInformationOnSave">optional object publishInformationOnSave</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaults, object serverIdentification, object allowTaskDelegation, object updateProjectToWeb, object publishInformationOnSave)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaults, serverIdentification, allowTaskDelegation, updateProjectToWeb, publishInformationOnSave });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="serverIdentification">optional object serverIdentification</param>
		/// <param name="allowTaskDelegation">optional object allowTaskDelegation</param>
		/// <param name="updateProjectToWeb">optional object updateProjectToWeb</param>
		/// <param name="publishInformationOnSave">optional object publishInformationOnSave</param>
		/// <param name="setDefaultsMessaging">optional object setDefaultsMessaging</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaults, object serverIdentification, object allowTaskDelegation, object updateProjectToWeb, object publishInformationOnSave, object setDefaultsMessaging)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaults, serverIdentification, allowTaskDelegation, updateProjectToWeb, publishInformationOnSave, setDefaultsMessaging });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="serverIdentification">optional object serverIdentification</param>
		/// <param name="allowTaskDelegation">optional object allowTaskDelegation</param>
		/// <param name="updateProjectToWeb">optional object updateProjectToWeb</param>
		/// <param name="publishInformationOnSave">optional object publishInformationOnSave</param>
		/// <param name="setDefaultsMessaging">optional object setDefaultsMessaging</param>
		/// <param name="setDefaultsWebServer">optional object setDefaultsWebServer</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaults, object serverIdentification, object allowTaskDelegation, object updateProjectToWeb, object publishInformationOnSave, object setDefaultsMessaging, object setDefaultsWebServer)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaults, serverIdentification, allowTaskDelegation, updateProjectToWeb, publishInformationOnSave, setDefaultsMessaging, setDefaultsWebServer });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="serverIdentification">optional object serverIdentification</param>
		/// <param name="allowTaskDelegation">optional object allowTaskDelegation</param>
		/// <param name="updateProjectToWeb">optional object updateProjectToWeb</param>
		/// <param name="publishInformationOnSave">optional object publishInformationOnSave</param>
		/// <param name="setDefaultsMessaging">optional object setDefaultsMessaging</param>
		/// <param name="setDefaultsWebServer">optional object setDefaultsWebServer</param>
		/// <param name="managerEmail">optional object managerEmail</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaults, object serverIdentification, object allowTaskDelegation, object updateProjectToWeb, object publishInformationOnSave, object setDefaultsMessaging, object setDefaultsWebServer, object managerEmail)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaults, serverIdentification, allowTaskDelegation, updateProjectToWeb, publishInformationOnSave, setDefaultsMessaging, setDefaultsWebServer, managerEmail });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="workgroupMessages">optional object workgroupMessages</param>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="serverPath">optional object serverPath</param>
		/// <param name="receiveNotifications">optional object receiveNotifications</param>
		/// <param name="sendHyperlinkNote">optional object sendHyperlinkNote</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="serverIdentification">optional object serverIdentification</param>
		/// <param name="allowTaskDelegation">optional object allowTaskDelegation</param>
		/// <param name="updateProjectToWeb">optional object updateProjectToWeb</param>
		/// <param name="publishInformationOnSave">optional object publishInformationOnSave</param>
		/// <param name="setDefaultsMessaging">optional object setDefaultsMessaging</param>
		/// <param name="setDefaultsWebServer">optional object setDefaultsWebServer</param>
		/// <param name="managerEmail">optional object managerEmail</param>
		/// <param name="confirmationDialog">optional object confirmationDialog</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsWorkgroup(object workgroupMessages, object serverURL, object serverPath, object receiveNotifications, object sendHyperlinkNote, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaults, object serverIdentification, object allowTaskDelegation, object updateProjectToWeb, object publishInformationOnSave, object setDefaultsMessaging, object setDefaultsWebServer, object managerEmail, object confirmationDialog)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsWorkgroup", new object[]{ workgroupMessages, serverURL, serverPath, receiveNotifications, sendHyperlinkNote, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaults, serverIdentification, allowTaskDelegation, updateProjectToWeb, publishInformationOnSave, setDefaultsMessaging, setDefaultsWebServer, managerEmail, confirmationDialog });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		/// <param name="spreadCostsToStatusDate">optional object spreadCostsToStatusDate</param>
		/// <param name="autoCalcCosts">optional object autoCalcCosts</param>
		/// <param name="fixedCostAccrual">optional object fixedCostAccrual</param>
		/// <param name="calcMultipleCriticalPaths">optional object calcMultipleCriticalPaths</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="calcInsProjLikeSummTask">optional object calcInsProjLikeSummTask</param>
		/// <param name="moveCompleted">optional object moveCompleted</param>
		/// <param name="andMoveRemaining">optional object andMoveRemaining</param>
		/// <param name="moveRemaining">optional object moveRemaining</param>
		/// <param name="andMoveCompleted">optional object andMoveCompleted</param>
		/// <param name="eVMethod">optional object eVMethod</param>
		/// <param name="eVBaseline">optional object eVBaseline</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate, object autoCalcCosts, object fixedCostAccrual, object calcMultipleCriticalPaths, object criticalSlack, object setDefaults, object calcInsProjLikeSummTask, object moveCompleted, object andMoveRemaining, object moveRemaining, object andMoveCompleted, object eVMethod, object eVBaseline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", new object[]{ automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate, autoCalcCosts, fixedCostAccrual, calcMultipleCriticalPaths, criticalSlack, setDefaults, calcInsProjLikeSummTask, moveCompleted, andMoveRemaining, moveRemaining, andMoveCompleted, eVMethod, eVBaseline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", automatic);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", automatic, autoTrack);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", automatic, autoTrack, spreadPercentToStatusDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		/// <param name="spreadCostsToStatusDate">optional object spreadCostsToStatusDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		/// <param name="spreadCostsToStatusDate">optional object spreadCostsToStatusDate</param>
		/// <param name="autoCalcCosts">optional object autoCalcCosts</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate, object autoCalcCosts)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", new object[]{ automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate, autoCalcCosts });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		/// <param name="spreadCostsToStatusDate">optional object spreadCostsToStatusDate</param>
		/// <param name="autoCalcCosts">optional object autoCalcCosts</param>
		/// <param name="fixedCostAccrual">optional object fixedCostAccrual</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate, object autoCalcCosts, object fixedCostAccrual)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", new object[]{ automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate, autoCalcCosts, fixedCostAccrual });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		/// <param name="spreadCostsToStatusDate">optional object spreadCostsToStatusDate</param>
		/// <param name="autoCalcCosts">optional object autoCalcCosts</param>
		/// <param name="fixedCostAccrual">optional object fixedCostAccrual</param>
		/// <param name="calcMultipleCriticalPaths">optional object calcMultipleCriticalPaths</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate, object autoCalcCosts, object fixedCostAccrual, object calcMultipleCriticalPaths)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", new object[]{ automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate, autoCalcCosts, fixedCostAccrual, calcMultipleCriticalPaths });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		/// <param name="spreadCostsToStatusDate">optional object spreadCostsToStatusDate</param>
		/// <param name="autoCalcCosts">optional object autoCalcCosts</param>
		/// <param name="fixedCostAccrual">optional object fixedCostAccrual</param>
		/// <param name="calcMultipleCriticalPaths">optional object calcMultipleCriticalPaths</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate, object autoCalcCosts, object fixedCostAccrual, object calcMultipleCriticalPaths, object criticalSlack)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", new object[]{ automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate, autoCalcCosts, fixedCostAccrual, calcMultipleCriticalPaths, criticalSlack });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		/// <param name="spreadCostsToStatusDate">optional object spreadCostsToStatusDate</param>
		/// <param name="autoCalcCosts">optional object autoCalcCosts</param>
		/// <param name="fixedCostAccrual">optional object fixedCostAccrual</param>
		/// <param name="calcMultipleCriticalPaths">optional object calcMultipleCriticalPaths</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate, object autoCalcCosts, object fixedCostAccrual, object calcMultipleCriticalPaths, object criticalSlack, object setDefaults)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", new object[]{ automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate, autoCalcCosts, fixedCostAccrual, calcMultipleCriticalPaths, criticalSlack, setDefaults });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		/// <param name="spreadCostsToStatusDate">optional object spreadCostsToStatusDate</param>
		/// <param name="autoCalcCosts">optional object autoCalcCosts</param>
		/// <param name="fixedCostAccrual">optional object fixedCostAccrual</param>
		/// <param name="calcMultipleCriticalPaths">optional object calcMultipleCriticalPaths</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="calcInsProjLikeSummTask">optional object calcInsProjLikeSummTask</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate, object autoCalcCosts, object fixedCostAccrual, object calcMultipleCriticalPaths, object criticalSlack, object setDefaults, object calcInsProjLikeSummTask)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", new object[]{ automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate, autoCalcCosts, fixedCostAccrual, calcMultipleCriticalPaths, criticalSlack, setDefaults, calcInsProjLikeSummTask });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		/// <param name="spreadCostsToStatusDate">optional object spreadCostsToStatusDate</param>
		/// <param name="autoCalcCosts">optional object autoCalcCosts</param>
		/// <param name="fixedCostAccrual">optional object fixedCostAccrual</param>
		/// <param name="calcMultipleCriticalPaths">optional object calcMultipleCriticalPaths</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="calcInsProjLikeSummTask">optional object calcInsProjLikeSummTask</param>
		/// <param name="moveCompleted">optional object moveCompleted</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate, object autoCalcCosts, object fixedCostAccrual, object calcMultipleCriticalPaths, object criticalSlack, object setDefaults, object calcInsProjLikeSummTask, object moveCompleted)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", new object[]{ automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate, autoCalcCosts, fixedCostAccrual, calcMultipleCriticalPaths, criticalSlack, setDefaults, calcInsProjLikeSummTask, moveCompleted });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		/// <param name="spreadCostsToStatusDate">optional object spreadCostsToStatusDate</param>
		/// <param name="autoCalcCosts">optional object autoCalcCosts</param>
		/// <param name="fixedCostAccrual">optional object fixedCostAccrual</param>
		/// <param name="calcMultipleCriticalPaths">optional object calcMultipleCriticalPaths</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="calcInsProjLikeSummTask">optional object calcInsProjLikeSummTask</param>
		/// <param name="moveCompleted">optional object moveCompleted</param>
		/// <param name="andMoveRemaining">optional object andMoveRemaining</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate, object autoCalcCosts, object fixedCostAccrual, object calcMultipleCriticalPaths, object criticalSlack, object setDefaults, object calcInsProjLikeSummTask, object moveCompleted, object andMoveRemaining)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", new object[]{ automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate, autoCalcCosts, fixedCostAccrual, calcMultipleCriticalPaths, criticalSlack, setDefaults, calcInsProjLikeSummTask, moveCompleted, andMoveRemaining });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		/// <param name="spreadCostsToStatusDate">optional object spreadCostsToStatusDate</param>
		/// <param name="autoCalcCosts">optional object autoCalcCosts</param>
		/// <param name="fixedCostAccrual">optional object fixedCostAccrual</param>
		/// <param name="calcMultipleCriticalPaths">optional object calcMultipleCriticalPaths</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="calcInsProjLikeSummTask">optional object calcInsProjLikeSummTask</param>
		/// <param name="moveCompleted">optional object moveCompleted</param>
		/// <param name="andMoveRemaining">optional object andMoveRemaining</param>
		/// <param name="moveRemaining">optional object moveRemaining</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate, object autoCalcCosts, object fixedCostAccrual, object calcMultipleCriticalPaths, object criticalSlack, object setDefaults, object calcInsProjLikeSummTask, object moveCompleted, object andMoveRemaining, object moveRemaining)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", new object[]{ automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate, autoCalcCosts, fixedCostAccrual, calcMultipleCriticalPaths, criticalSlack, setDefaults, calcInsProjLikeSummTask, moveCompleted, andMoveRemaining, moveRemaining });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		/// <param name="spreadCostsToStatusDate">optional object spreadCostsToStatusDate</param>
		/// <param name="autoCalcCosts">optional object autoCalcCosts</param>
		/// <param name="fixedCostAccrual">optional object fixedCostAccrual</param>
		/// <param name="calcMultipleCriticalPaths">optional object calcMultipleCriticalPaths</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="calcInsProjLikeSummTask">optional object calcInsProjLikeSummTask</param>
		/// <param name="moveCompleted">optional object moveCompleted</param>
		/// <param name="andMoveRemaining">optional object andMoveRemaining</param>
		/// <param name="moveRemaining">optional object moveRemaining</param>
		/// <param name="andMoveCompleted">optional object andMoveCompleted</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate, object autoCalcCosts, object fixedCostAccrual, object calcMultipleCriticalPaths, object criticalSlack, object setDefaults, object calcInsProjLikeSummTask, object moveCompleted, object andMoveRemaining, object moveRemaining, object andMoveCompleted)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", new object[]{ automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate, autoCalcCosts, fixedCostAccrual, calcMultipleCriticalPaths, criticalSlack, setDefaults, calcInsProjLikeSummTask, moveCompleted, andMoveRemaining, moveRemaining, andMoveCompleted });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="autoTrack">optional object autoTrack</param>
		/// <param name="spreadPercentToStatusDate">optional object spreadPercentToStatusDate</param>
		/// <param name="spreadCostsToStatusDate">optional object spreadCostsToStatusDate</param>
		/// <param name="autoCalcCosts">optional object autoCalcCosts</param>
		/// <param name="fixedCostAccrual">optional object fixedCostAccrual</param>
		/// <param name="calcMultipleCriticalPaths">optional object calcMultipleCriticalPaths</param>
		/// <param name="criticalSlack">optional object criticalSlack</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="calcInsProjLikeSummTask">optional object calcInsProjLikeSummTask</param>
		/// <param name="moveCompleted">optional object moveCompleted</param>
		/// <param name="andMoveRemaining">optional object andMoveRemaining</param>
		/// <param name="moveRemaining">optional object moveRemaining</param>
		/// <param name="andMoveCompleted">optional object andMoveCompleted</param>
		/// <param name="eVMethod">optional object eVMethod</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsCalculation(object automatic, object autoTrack, object spreadPercentToStatusDate, object spreadCostsToStatusDate, object autoCalcCosts, object fixedCostAccrual, object calcMultipleCriticalPaths, object criticalSlack, object setDefaults, object calcInsProjLikeSummTask, object moveCompleted, object andMoveRemaining, object moveRemaining, object andMoveCompleted, object eVMethod)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsCalculation", new object[]{ automatic, autoTrack, spreadPercentToStatusDate, spreadCostsToStatusDate, autoCalcCosts, fixedCostAccrual, calcMultipleCriticalPaths, criticalSlack, setDefaults, calcInsProjLikeSummTask, moveCompleted, andMoveRemaining, moveRemaining, andMoveCompleted, eVMethod });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalculateAll()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalculateAll");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsPreferences()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsPreferences");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="calendarName">optional object calendarName</param>
		/// <param name="locked">optional object locked</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ChangeWorkingTime(object calendarName, object locked)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ChangeWorkingTime", calendarName, locked);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ChangeWorkingTime()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ChangeWorkingTime");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="calendarName">optional object calendarName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ChangeWorkingTime(object calendarName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ChangeWorkingTime", calendarName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="index">optional object index</param>
		/// <param name="locked">optional object locked</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendars(object index, object locked)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendars", index, locked);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendars()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendars");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="index">optional object index</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendars(object index)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendars", index);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="fromName">optional object fromName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarCreate(string name, object fromName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarCreate", name, fromName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarCreate(string name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarCreate", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fromName">string fromName</param>
		/// <param name="toName">string toName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarRename(string fromName, string toName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarRename", fromName, toName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarDelete(string name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarDelete", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		/// <param name="from3">optional object from3</param>
		/// <param name="to3">optional object to3</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from4">optional object from4</param>
		/// <param name="to4">optional object to4</param>
		/// <param name="from5">optional object from5</param>
		/// <param name="to5">optional object to5</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay, object working, object from1, object to1, object from2, object to2, object from3, object to3, object _default, object from4, object to4, object from5, object to5)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", new object[]{ name, startDate, endDate, weekDay, working, from1, to1, from2, to2, from3, to3, _default, from4, to4, from5, to5 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", name, startDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", name, startDate, endDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", name, startDate, endDate, weekDay);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay, object working)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", new object[]{ name, startDate, endDate, weekDay, working });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="from1">optional object from1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay, object working, object from1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", new object[]{ name, startDate, endDate, weekDay, working, from1 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay, object working, object from1, object to1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", new object[]{ name, startDate, endDate, weekDay, working, from1, to1 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay, object working, object from1, object to1, object from2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", new object[]{ name, startDate, endDate, weekDay, working, from1, to1, from2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay, object working, object from1, object to1, object from2, object to2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", new object[]{ name, startDate, endDate, weekDay, working, from1, to1, from2, to2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		/// <param name="from3">optional object from3</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay, object working, object from1, object to1, object from2, object to2, object from3)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", new object[]{ name, startDate, endDate, weekDay, working, from1, to1, from2, to2, from3 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		/// <param name="from3">optional object from3</param>
		/// <param name="to3">optional object to3</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay, object working, object from1, object to1, object from2, object to2, object from3, object to3)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", new object[]{ name, startDate, endDate, weekDay, working, from1, to1, from2, to2, from3, to3 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		/// <param name="from3">optional object from3</param>
		/// <param name="to3">optional object to3</param>
		/// <param name="_default">optional object default</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay, object working, object from1, object to1, object from2, object to2, object from3, object to3, object _default)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", new object[]{ name, startDate, endDate, weekDay, working, from1, to1, from2, to2, from3, to3, _default });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		/// <param name="from3">optional object from3</param>
		/// <param name="to3">optional object to3</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from4">optional object from4</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay, object working, object from1, object to1, object from2, object to2, object from3, object to3, object _default, object from4)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", new object[]{ name, startDate, endDate, weekDay, working, from1, to1, from2, to2, from3, to3, _default, from4 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		/// <param name="from3">optional object from3</param>
		/// <param name="to3">optional object to3</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from4">optional object from4</param>
		/// <param name="to4">optional object to4</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay, object working, object from1, object to1, object from2, object to2, object from3, object to3, object _default, object from4, object to4)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", new object[]{ name, startDate, endDate, weekDay, working, from1, to1, from2, to2, from3, to3, _default, from4, to4 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		/// <param name="from3">optional object from3</param>
		/// <param name="to3">optional object to3</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from4">optional object from4</param>
		/// <param name="to4">optional object to4</param>
		/// <param name="from5">optional object from5</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarEditDays(string name, object startDate, object endDate, object weekDay, object working, object from1, object to1, object from2, object to2, object from3, object to3, object _default, object from4, object to4, object from5)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarEditDays", new object[]{ name, startDate, endDate, weekDay, working, from1, to1, from2, to2, from3, to3, _default, from4, to4, from5 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		/// <param name="from3">optional object from3</param>
		/// <param name="to3">optional object to3</param>
		/// <param name="from4">optional object from4</param>
		/// <param name="to4">optional object to4</param>
		/// <param name="from5">optional object from5</param>
		/// <param name="to5">optional object to5</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay, object working, object _default, object from1, object to1, object from2, object to2, object from3, object to3, object from4, object to4, object from5, object to5)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", new object[]{ projectName, resourceName, startDate, endDate, weekDay, working, _default, from1, to1, from2, to2, from3, to3, from4, to4, from5, to5 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", projectName, resourceName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", projectName, resourceName, startDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", projectName, resourceName, startDate, endDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", new object[]{ projectName, resourceName, startDate, endDate, weekDay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay, object working)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", new object[]{ projectName, resourceName, startDate, endDate, weekDay, working });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="_default">optional object default</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay, object working, object _default)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", new object[]{ projectName, resourceName, startDate, endDate, weekDay, working, _default });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from1">optional object from1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay, object working, object _default, object from1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", new object[]{ projectName, resourceName, startDate, endDate, weekDay, working, _default, from1 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay, object working, object _default, object from1, object to1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", new object[]{ projectName, resourceName, startDate, endDate, weekDay, working, _default, from1, to1 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay, object working, object _default, object from1, object to1, object from2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", new object[]{ projectName, resourceName, startDate, endDate, weekDay, working, _default, from1, to1, from2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay, object working, object _default, object from1, object to1, object from2, object to2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", new object[]{ projectName, resourceName, startDate, endDate, weekDay, working, _default, from1, to1, from2, to2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		/// <param name="from3">optional object from3</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay, object working, object _default, object from1, object to1, object from2, object to2, object from3)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", new object[]{ projectName, resourceName, startDate, endDate, weekDay, working, _default, from1, to1, from2, to2, from3 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		/// <param name="from3">optional object from3</param>
		/// <param name="to3">optional object to3</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay, object working, object _default, object from1, object to1, object from2, object to2, object from3, object to3)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", new object[]{ projectName, resourceName, startDate, endDate, weekDay, working, _default, from1, to1, from2, to2, from3, to3 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		/// <param name="from3">optional object from3</param>
		/// <param name="to3">optional object to3</param>
		/// <param name="from4">optional object from4</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay, object working, object _default, object from1, object to1, object from2, object to2, object from3, object to3, object from4)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", new object[]{ projectName, resourceName, startDate, endDate, weekDay, working, _default, from1, to1, from2, to2, from3, to3, from4 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		/// <param name="from3">optional object from3</param>
		/// <param name="to3">optional object to3</param>
		/// <param name="from4">optional object from4</param>
		/// <param name="to4">optional object to4</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay, object working, object _default, object from1, object to1, object from2, object to2, object from3, object to3, object from4, object to4)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", new object[]{ projectName, resourceName, startDate, endDate, weekDay, working, _default, from1, to1, from2, to2, from3, to3, from4, to4 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		/// <param name="weekDay">optional object weekDay</param>
		/// <param name="working">optional object working</param>
		/// <param name="_default">optional object default</param>
		/// <param name="from1">optional object from1</param>
		/// <param name="to1">optional object to1</param>
		/// <param name="from2">optional object from2</param>
		/// <param name="to2">optional object to2</param>
		/// <param name="from3">optional object from3</param>
		/// <param name="to3">optional object to3</param>
		/// <param name="from4">optional object from4</param>
		/// <param name="to4">optional object to4</param>
		/// <param name="from5">optional object from5</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarEditDays(string projectName, string resourceName, object startDate, object endDate, object weekDay, object working, object _default, object from1, object to1, object from2, object to2, object from3, object to3, object from4, object to4, object from5)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarEditDays", new object[]{ projectName, resourceName, startDate, endDate, weekDay, working, _default, from1, to1, from2, to2, from3, to3, from4, to4, from5 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaseCalendarReset(string name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaseCalendarReset", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		/// <param name="baseCalendar">optional object baseCalendar</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarReset(string projectName, string resourceName, object baseCalendar)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarReset", projectName, resourceName, baseCalendar);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">string projectName</param>
		/// <param name="resourceName">string resourceName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendarReset(string projectName, string resourceName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendarReset", projectName, resourceName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="index">optional object index</param>
		/// <param name="locked">optional object locked</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendars(object index, object locked)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendars", index, locked);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendars()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendars");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="index">optional object index</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceCalendars(object index)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceCalendars", index);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="periodBasis">optional object periodBasis</param>
		/// <param name="levelIndividualAssignments">optional object levelIndividualAssignments</param>
		/// <param name="levelingCanSplit">optional object levelingCanSplit</param>
		/// <param name="levelProposedBookings">optional object levelProposedBookings</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingOptions(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate, object toDate, object periodBasis, object levelIndividualAssignments, object levelingCanSplit, object levelProposedBookings)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptions", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate, toDate, periodBasis, levelIndividualAssignments, levelingCanSplit, levelProposedBookings });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingOptions()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptions");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingOptions(object automatic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptions", automatic);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingOptions(object automatic, object delayInSlack)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptions", automatic, delayInSlack);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingOptions(object automatic, object delayInSlack, object autoClearLeveling)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptions", automatic, delayInSlack, autoClearLeveling);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingOptions(object automatic, object delayInSlack, object autoClearLeveling, object order)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptions", automatic, delayInSlack, autoClearLeveling, order);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingOptions(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptions", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		/// <param name="fromDate">optional object fromDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingOptions(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptions", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingOptions(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate, object toDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptions", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate, toDate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="periodBasis">optional object periodBasis</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingOptions(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate, object toDate, object periodBasis)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptions", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate, toDate, periodBasis });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="periodBasis">optional object periodBasis</param>
		/// <param name="levelIndividualAssignments">optional object levelIndividualAssignments</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingOptions(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate, object toDate, object periodBasis, object levelIndividualAssignments)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptions", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate, toDate, periodBasis, levelIndividualAssignments });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="periodBasis">optional object periodBasis</param>
		/// <param name="levelIndividualAssignments">optional object levelIndividualAssignments</param>
		/// <param name="levelingCanSplit">optional object levelingCanSplit</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingOptions(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate, object toDate, object periodBasis, object levelIndividualAssignments, object levelingCanSplit)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptions", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate, toDate, periodBasis, levelIndividualAssignments, levelingCanSplit });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelNow(object all)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelNow", all);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelNow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelNow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		/// <param name="copy">optional object copy</param>
		/// <param name="into">optional object into</param>
		/// <param name="rollupToSummaryTasks">optional object rollupToSummaryTasks</param>
		/// <param name="rollupFromSubtasks">optional object rollupFromSubtasks</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaselineSave(object all, object copy, object into, object rollupToSummaryTasks, object rollupFromSubtasks, object setDefaults)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaselineSave", new object[]{ all, copy, into, rollupToSummaryTasks, rollupFromSubtasks, setDefaults });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaselineSave()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaselineSave");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaselineSave(object all)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaselineSave", all);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		/// <param name="copy">optional object copy</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaselineSave(object all, object copy)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaselineSave", all, copy);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		/// <param name="copy">optional object copy</param>
		/// <param name="into">optional object into</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaselineSave(object all, object copy, object into)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaselineSave", all, copy, into);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		/// <param name="copy">optional object copy</param>
		/// <param name="into">optional object into</param>
		/// <param name="rollupToSummaryTasks">optional object rollupToSummaryTasks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaselineSave(object all, object copy, object into, object rollupToSummaryTasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaselineSave", all, copy, into, rollupToSummaryTasks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		/// <param name="copy">optional object copy</param>
		/// <param name="into">optional object into</param>
		/// <param name="rollupToSummaryTasks">optional object rollupToSummaryTasks</param>
		/// <param name="rollupFromSubtasks">optional object rollupFromSubtasks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaselineSave(object all, object copy, object into, object rollupToSummaryTasks, object rollupFromSubtasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaselineSave", new object[]{ all, copy, into, rollupToSummaryTasks, rollupFromSubtasks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		/// <param name="updateDate">optional object updateDate</param>
		/// <param name="action">optional object action</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateProject(object all, object updateDate, object action)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateProject", all, updateDate, action);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateProject()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateProject");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateProject(object all)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateProject", all);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		/// <param name="updateDate">optional object updateDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateProject(object all, object updateDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateProject", all, updateDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="percentComplete">optional object percentComplete</param>
		/// <param name="actualDuration">optional object actualDuration</param>
		/// <param name="remainingDuration">optional object remainingDuration</param>
		/// <param name="actualStart">optional object actualStart</param>
		/// <param name="actualFinish">optional object actualFinish</param>
		/// <param name="notes">optional object notes</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateTasks(object percentComplete, object actualDuration, object remainingDuration, object actualStart, object actualFinish, object notes)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateTasks", new object[]{ percentComplete, actualDuration, remainingDuration, actualStart, actualFinish, notes });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateTasks()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateTasks");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="percentComplete">optional object percentComplete</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateTasks(object percentComplete)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateTasks", percentComplete);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="percentComplete">optional object percentComplete</param>
		/// <param name="actualDuration">optional object actualDuration</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateTasks(object percentComplete, object actualDuration)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateTasks", percentComplete, actualDuration);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="percentComplete">optional object percentComplete</param>
		/// <param name="actualDuration">optional object actualDuration</param>
		/// <param name="remainingDuration">optional object remainingDuration</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateTasks(object percentComplete, object actualDuration, object remainingDuration)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateTasks", percentComplete, actualDuration, remainingDuration);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="percentComplete">optional object percentComplete</param>
		/// <param name="actualDuration">optional object actualDuration</param>
		/// <param name="remainingDuration">optional object remainingDuration</param>
		/// <param name="actualStart">optional object actualStart</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateTasks(object percentComplete, object actualDuration, object remainingDuration, object actualStart)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateTasks", percentComplete, actualDuration, remainingDuration, actualStart);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="percentComplete">optional object percentComplete</param>
		/// <param name="actualDuration">optional object actualDuration</param>
		/// <param name="remainingDuration">optional object remainingDuration</param>
		/// <param name="actualStart">optional object actualStart</param>
		/// <param name="actualFinish">optional object actualFinish</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateTasks(object percentComplete, object actualDuration, object remainingDuration, object actualStart, object actualFinish)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateTasks", new object[]{ percentComplete, actualDuration, remainingDuration, actualStart, actualFinish });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projects">optional object projects</param>
		/// <param name="view">optional object view</param>
		/// <param name="allProjects">optional object allProjects</param>
		/// <param name="showDialog">optional object showDialog</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowNewWindow(object projects, object view, object allProjects, object showDialog)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowNewWindow", projects, view, allProjects, showDialog);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowNewWindow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowNewWindow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projects">optional object projects</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowNewWindow(object projects)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowNewWindow", projects);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projects">optional object projects</param>
		/// <param name="view">optional object view</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowNewWindow(object projects, object view)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowNewWindow", projects, view);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projects">optional object projects</param>
		/// <param name="view">optional object view</param>
		/// <param name="allProjects">optional object allProjects</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowNewWindow(object projects, object view, object allProjects)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowNewWindow", projects, view, allProjects);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowArrangeAll()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowArrangeAll");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowHide(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowHide", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowHide()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowHide");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowUnhide(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowUnhide", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowUnhide()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowUnhide");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="windowName">optional object windowName</param>
		/// <param name="dialogID">optional object dialogID</param>
		/// <param name="topPane">optional object topPane</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowActivate(object windowName, object dialogID, object topPane)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowActivate", windowName, dialogID, topPane);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowActivate()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowActivate");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="windowName">optional object windowName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowActivate(object windowName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowActivate", windowName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="windowName">optional object windowName</param>
		/// <param name="dialogID">optional object dialogID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowActivate(object windowName, object dialogID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowActivate", windowName, dialogID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PageBreakSet()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PageBreakSet");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PageBreakRemove()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PageBreakRemove");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PageBreaksRemoveAll()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PageBreaksRemoveAll");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowResourcesPredecessors()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowResourcesPredecessors");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowResourcesSuccessors()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowResourcesSuccessors");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowPredecessorsSuccessors()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowPredecessorsSuccessors");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowNotes()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowNotes");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowObjects()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowObjects");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowOverallocation()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowOverallocation");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowPercentAllocation()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowPercentAllocation");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowWork()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowWork");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowCost()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowCost");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowSchedule()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowSchedule");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowPeakUnits()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowPeakUnits");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowAvailability()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowAvailability");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowRemainingAvailability()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowRemainingAvailability");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowCumulativeWork()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowCumulativeWork");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowCumulativeCost()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowCumulativeCost");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PaneNext()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PaneNext");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PaneCreate()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PaneCreate");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FormViewShow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FormViewShow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PaneClose()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PaneClose");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowSplit()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowSplit");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="noWrap">optional object noWrap</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowNext(object noWrap)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowNext", noWrap);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowNext()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowNext");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="noWrap">optional object noWrap</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowPrev(object noWrap)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowPrev", noWrap);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowPrev()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowPrev");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DocClose()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocClose");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppMaximize()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppMaximize");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppMinimize()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppMinimize");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="xPosition">optional object xPosition</param>
		/// <param name="yPosition">optional object yPosition</param>
		/// <param name="points">optional object points</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppMove(object xPosition, object yPosition, object points)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppMove", xPosition, yPosition, points);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppMove()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppMove");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="xPosition">optional object xPosition</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppMove(object xPosition)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppMove", xPosition);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="xPosition">optional object xPosition</param>
		/// <param name="yPosition">optional object yPosition</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppMove(object xPosition, object yPosition)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppMove", xPosition, yPosition);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppRestore()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppRestore");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="width">optional object width</param>
		/// <param name="height">optional object height</param>
		/// <param name="points">optional object points</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppSize(object width, object height, object points)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppSize", width, height, points);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppSize()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppSize");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="width">optional object width</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppSize(object width)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppSize", width);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="width">optional object width</param>
		/// <param name="height">optional object height</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppSize(object width, object height)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppSize", width, height);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DocMaximize()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocMaximize");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="xPosition">optional object xPosition</param>
		/// <param name="yPosition">optional object yPosition</param>
		/// <param name="points">optional object points</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DocMove(object xPosition, object yPosition, object points)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocMove", xPosition, yPosition, points);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DocMove()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocMove");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="xPosition">optional object xPosition</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DocMove(object xPosition)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocMove", xPosition);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="xPosition">optional object xPosition</param>
		/// <param name="yPosition">optional object yPosition</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DocMove(object xPosition, object yPosition)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocMove", xPosition, yPosition);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DocRestore()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocRestore");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="width">optional object width</param>
		/// <param name="height">optional object height</param>
		/// <param name="points">optional object points</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DocSize(object width, object height, object points)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocSize", width, height, points);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DocSize()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocSize");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="width">optional object width</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DocSize(object width)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocSize", width);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="width">optional object width</param>
		/// <param name="height">optional object height</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DocSize(object width, object height)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocSize", width, height);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="levels">optional object levels</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OutlineOutdent(object levels)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OutlineOutdent", levels);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OutlineOutdent()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OutlineOutdent");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="outlineNumber">optional NetOffice.MSProjectApi.Enums.PJTaskOutlineShowLevel OutlineNumber = 65535</param>
		/// <param name="expandInsertedProjects">optional object expandInsertedProjects</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OutlineShowTasks(object outlineNumber, object expandInsertedProjects)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OutlineShowTasks", outlineNumber, expandInsertedProjects);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OutlineShowTasks()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OutlineShowTasks");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="outlineNumber">optional NetOffice.MSProjectApi.Enums.PJTaskOutlineShowLevel OutlineNumber = 65535</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OutlineShowTasks(object outlineNumber)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OutlineShowTasks", outlineNumber);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="levels">optional object levels</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OutlineIndent(object levels)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OutlineIndent", levels);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OutlineIndent()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OutlineIndent");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OutlineHideSubTasks()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OutlineHideSubTasks");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OutlineShowSubTasks()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OutlineShowSubTasks");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OutlineShowAllTasks()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OutlineShowAllTasks");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="extend">optional object extend</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectBeginning(object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectBeginning", extend);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectBeginning()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectBeginning");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="extend">optional object extend</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectEnd(object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectEnd", extend);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectEnd()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectEnd");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="extend">optional object extend</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRowStart(object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRowStart", extend);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRowStart()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRowStart");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="extend">optional object extend</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRowEnd(object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRowEnd", extend);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRowEnd()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRowEnd");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="numCells">optional object numCells</param>
		/// <param name="extend">optional object extend</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCellLeft(object numCells, object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCellLeft", numCells, extend);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCellLeft()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCellLeft");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="numCells">optional object numCells</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCellLeft(object numCells)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCellLeft", numCells);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="numCells">optional object numCells</param>
		/// <param name="extend">optional object extend</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCellRight(object numCells, object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCellRight", numCells, extend);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCellRight()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCellRight");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="numCells">optional object numCells</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCellRight(object numCells)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCellRight", numCells);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="numCells">optional object numCells</param>
		/// <param name="extend">optional object extend</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCellUp(object numCells, object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCellUp", numCells, extend);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCellUp()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCellUp");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="numCells">optional object numCells</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCellUp(object numCells)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCellUp", numCells);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="numCells">optional object numCells</param>
		/// <param name="extend">optional object extend</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCellDown(object numCells, object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCellDown", numCells, extend);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCellDown()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCellDown");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="numCells">optional object numCells</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCellDown(object numCells)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCellDown", numCells);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="extend">optional object extend</param>
		/// <param name="add">optional object add</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectionExtend(object extend, object add)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectionExtend", extend, add);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectionExtend()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectionExtend");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="extend">optional object extend</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectionExtend(object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectionExtend", extend);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ColumnBestFit(object column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ColumnBestFit", column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ColumnBestFit()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ColumnBestFit");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ColumnEdit(object column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ColumnEdit", column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ColumnEdit()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ColumnEdit");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">Int16 column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="width">optional object width</param>
		/// <param name="height">optional object height</param>
		/// <param name="extend">optional object extend</param>
		/// <param name="add">optional object add</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRange(Int32 row, Int16 column, object rowRelative, object width, object height, object extend, object add)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRange", new object[]{ row, column, rowRelative, width, height, extend, add });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">Int16 column</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRange(Int32 row, Int16 column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRange", row, column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">Int16 column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRange(Int32 row, Int16 column, object rowRelative)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRange", row, column, rowRelative);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">Int16 column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="width">optional object width</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRange(Int32 row, Int16 column, object rowRelative, object width)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRange", row, column, rowRelative, width);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">Int16 column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="width">optional object width</param>
		/// <param name="height">optional object height</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRange(Int32 row, Int16 column, object rowRelative, object width, object height)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRange", new object[]{ row, column, rowRelative, width, height });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">Int16 column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="width">optional object width</param>
		/// <param name="height">optional object height</param>
		/// <param name="extend">optional object extend</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRange(Int32 row, Int16 column, object rowRelative, object width, object height, object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRange", new object[]{ row, column, rowRelative, width, height, extend });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="startTime">string startTime</param>
		/// <param name="width">Int16 width</param>
		/// <param name="height">Int32 height</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTimescaleRange(Int32 row, string startTime, Int16 width, Int32 height)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTimescaleRange", row, startTime, width, height);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">string column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="width">optional object width</param>
		/// <param name="height">optional object height</param>
		/// <param name="extend">optional object extend</param>
		/// <param name="add">optional object add</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskField(Int32 row, string column, object rowRelative, object width, object height, object extend, object add)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskField", new object[]{ row, column, rowRelative, width, height, extend, add });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">string column</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskField(Int32 row, string column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskField", row, column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">string column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskField(Int32 row, string column, object rowRelative)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskField", row, column, rowRelative);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">string column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="width">optional object width</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskField(Int32 row, string column, object rowRelative, object width)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskField", row, column, rowRelative, width);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">string column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="width">optional object width</param>
		/// <param name="height">optional object height</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskField(Int32 row, string column, object rowRelative, object width, object height)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskField", new object[]{ row, column, rowRelative, width, height });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">string column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="width">optional object width</param>
		/// <param name="height">optional object height</param>
		/// <param name="extend">optional object extend</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskField(Int32 row, string column, object rowRelative, object width, object height, object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskField", new object[]{ row, column, rowRelative, width, height, extend });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">string column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="width">optional object width</param>
		/// <param name="height">optional object height</param>
		/// <param name="extend">optional object extend</param>
		/// <param name="add">optional object add</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceField(Int32 row, string column, object rowRelative, object width, object height, object extend, object add)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceField", new object[]{ row, column, rowRelative, width, height, extend, add });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">string column</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceField(Int32 row, string column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceField", row, column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">string column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceField(Int32 row, string column, object rowRelative)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceField", row, column, rowRelative);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">string column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="width">optional object width</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceField(Int32 row, string column, object rowRelative, object width)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceField", row, column, rowRelative, width);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">string column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="width">optional object width</param>
		/// <param name="height">optional object height</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceField(Int32 row, string column, object rowRelative, object width, object height)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceField", new object[]{ row, column, rowRelative, width, height });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">Int32 row</param>
		/// <param name="column">string column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="width">optional object width</param>
		/// <param name="height">optional object height</param>
		/// <param name="extend">optional object extend</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceField(Int32 row, string column, object rowRelative, object width, object height, object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceField", new object[]{ row, column, rowRelative, width, height, extend });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="height">optional object height</param>
		/// <param name="extend">optional object extend</param>
		/// <param name="add">optional object add</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRow(object row, object rowRelative, object height, object extend, object add)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRow", new object[]{ row, rowRelative, height, extend, add });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRow(object row)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRow", row);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRow(object row, object rowRelative)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRow", row, rowRelative);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="height">optional object height</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRow(object row, object rowRelative, object height)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRow", row, rowRelative, height);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		/// <param name="height">optional object height</param>
		/// <param name="extend">optional object extend</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectRow(object row, object rowRelative, object height, object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectRow", row, rowRelative, height, extend);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		/// <param name="additional">optional object additional</param>
		/// <param name="extend">optional object extend</param>
		/// <param name="add">optional object add</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectColumn(object column, object additional, object extend, object add)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectColumn", column, additional, extend, add);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectColumn()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectColumn");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectColumn(object column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectColumn", column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		/// <param name="additional">optional object additional</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectColumn(object column, object additional)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectColumn", column, additional);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		/// <param name="additional">optional object additional</param>
		/// <param name="extend">optional object extend</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectColumn(object column, object additional, object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectColumn", column, additional, extend);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		/// <param name="additional">optional object additional</param>
		/// <param name="extend">optional object extend</param>
		/// <param name="add">optional object add</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskColumn(object column, object additional, object extend, object add)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskColumn", column, additional, extend, add);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskColumn()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskColumn");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskColumn(object column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskColumn", column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		/// <param name="additional">optional object additional</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskColumn(object column, object additional)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskColumn", column, additional);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		/// <param name="additional">optional object additional</param>
		/// <param name="extend">optional object extend</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskColumn(object column, object additional, object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskColumn", column, additional, extend);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		/// <param name="additional">optional object additional</param>
		/// <param name="extend">optional object extend</param>
		/// <param name="add">optional object add</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceColumn(object column, object additional, object extend, object add)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceColumn", column, additional, extend, add);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceColumn()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceColumn");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceColumn(object column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceColumn", column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		/// <param name="additional">optional object additional</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceColumn(object column, object additional)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceColumn", column, additional);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		/// <param name="additional">optional object additional</param>
		/// <param name="extend">optional object extend</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceColumn(object column, object additional, object extend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceColumn", column, additional, extend);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		/// <param name="column">optional object column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskCell(object row, object column, object rowRelative)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskCell", row, column, rowRelative);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskCell()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskCell");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskCell(object row)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskCell", row);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		/// <param name="column">optional object column</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectTaskCell(object row, object column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskCell", row, column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		/// <param name="column">optional object column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceCell(object row, object column, object rowRelative)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceCell", row, column, rowRelative);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceCell()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceCell");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceCell(object row)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceCell", row);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		/// <param name="column">optional object column</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectResourceCell(object row, object column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectResourceCell", row, column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		/// <param name="column">optional object column</param>
		/// <param name="rowRelative">optional object rowRelative</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCell(object row, object column, object rowRelative)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCell", row, column, rowRelative);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCell()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCell");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCell(object row)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCell", row);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="row">optional object row</param>
		/// <param name="column">optional object column</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectCell(object row, object column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectCell", row, column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SelectSheet()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectSheet");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="app">string app</param>
		/// <param name="topic">string topic</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DDEInitiate(string app, string topic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DDEInitiate", app, topic);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="command">string command</param>
		/// <param name="timeOut">optional object timeOut</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DDEExecute(string command, object timeOut)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DDEExecute", command, timeOut);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="command">string command</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DDEExecute(string command)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DDEExecute", command);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DDETerminate()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DDETerminate");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="tab">optional object tab</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool InformationDialog(object tab)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InformationDialog", tab);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool InformationDialog()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InformationDialog");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Form(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Form", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Form()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Form");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomForms()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomForms");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Tables()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Tables");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Filters()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Filters");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Macro(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Macro", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Macro()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Macro");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="down">optional object down</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FillDown(object down)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FillDown", down);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FillDown()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FillDown");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Views()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Views");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalculateProject()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalculateProject");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingClear(object all)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingClear", all);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LevelingClear()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingClear");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SpellingCheck()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SpellingCheck");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		/// <param name="resourceName">optional object resourceName</param>
		/// <param name="resourceNotes">optional object resourceNotes</param>
		/// <param name="resourceGroup">optional object resourceGroup</param>
		/// <param name="resourceText1">optional object resourceText1</param>
		/// <param name="resourceText2">optional object resourceText2</param>
		/// <param name="resourceText3">optional object resourceText3</param>
		/// <param name="resourceText4">optional object resourceText4</param>
		/// <param name="resourceText5">optional object resourceText5</param>
		/// <param name="assignNotes">optional object assignNotes</param>
		/// <param name="ignoreUppercase">optional object ignoreUppercase</param>
		/// <param name="ignoreNumberWords">optional object ignoreNumberWords</param>
		/// <param name="alwaysSuggest">optional object alwaysSuggest</param>
		/// <param name="useCustomDictionary">optional object useCustomDictionary</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName, object resourceNotes, object resourceGroup, object resourceText1, object resourceText2, object resourceText3, object resourceText4, object resourceText5, object assignNotes, object ignoreUppercase, object ignoreNumberWords, object alwaysSuggest, object useCustomDictionary)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName, resourceNotes, resourceGroup, resourceText1, resourceText2, resourceText3, resourceText4, resourceText5, assignNotes, ignoreUppercase, ignoreNumberWords, alwaysSuggest, useCustomDictionary });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", taskName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", taskName, taskNotes);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", taskName, taskNotes, taskText1);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", taskName, taskNotes, taskText1, taskText2);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		/// <param name="resourceName">optional object resourceName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		/// <param name="resourceName">optional object resourceName</param>
		/// <param name="resourceNotes">optional object resourceNotes</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName, object resourceNotes)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName, resourceNotes });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		/// <param name="resourceName">optional object resourceName</param>
		/// <param name="resourceNotes">optional object resourceNotes</param>
		/// <param name="resourceGroup">optional object resourceGroup</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName, object resourceNotes, object resourceGroup)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName, resourceNotes, resourceGroup });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		/// <param name="resourceName">optional object resourceName</param>
		/// <param name="resourceNotes">optional object resourceNotes</param>
		/// <param name="resourceGroup">optional object resourceGroup</param>
		/// <param name="resourceText1">optional object resourceText1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName, object resourceNotes, object resourceGroup, object resourceText1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName, resourceNotes, resourceGroup, resourceText1 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		/// <param name="resourceName">optional object resourceName</param>
		/// <param name="resourceNotes">optional object resourceNotes</param>
		/// <param name="resourceGroup">optional object resourceGroup</param>
		/// <param name="resourceText1">optional object resourceText1</param>
		/// <param name="resourceText2">optional object resourceText2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName, object resourceNotes, object resourceGroup, object resourceText1, object resourceText2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName, resourceNotes, resourceGroup, resourceText1, resourceText2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		/// <param name="resourceName">optional object resourceName</param>
		/// <param name="resourceNotes">optional object resourceNotes</param>
		/// <param name="resourceGroup">optional object resourceGroup</param>
		/// <param name="resourceText1">optional object resourceText1</param>
		/// <param name="resourceText2">optional object resourceText2</param>
		/// <param name="resourceText3">optional object resourceText3</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName, object resourceNotes, object resourceGroup, object resourceText1, object resourceText2, object resourceText3)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName, resourceNotes, resourceGroup, resourceText1, resourceText2, resourceText3 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		/// <param name="resourceName">optional object resourceName</param>
		/// <param name="resourceNotes">optional object resourceNotes</param>
		/// <param name="resourceGroup">optional object resourceGroup</param>
		/// <param name="resourceText1">optional object resourceText1</param>
		/// <param name="resourceText2">optional object resourceText2</param>
		/// <param name="resourceText3">optional object resourceText3</param>
		/// <param name="resourceText4">optional object resourceText4</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName, object resourceNotes, object resourceGroup, object resourceText1, object resourceText2, object resourceText3, object resourceText4)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName, resourceNotes, resourceGroup, resourceText1, resourceText2, resourceText3, resourceText4 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		/// <param name="resourceName">optional object resourceName</param>
		/// <param name="resourceNotes">optional object resourceNotes</param>
		/// <param name="resourceGroup">optional object resourceGroup</param>
		/// <param name="resourceText1">optional object resourceText1</param>
		/// <param name="resourceText2">optional object resourceText2</param>
		/// <param name="resourceText3">optional object resourceText3</param>
		/// <param name="resourceText4">optional object resourceText4</param>
		/// <param name="resourceText5">optional object resourceText5</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName, object resourceNotes, object resourceGroup, object resourceText1, object resourceText2, object resourceText3, object resourceText4, object resourceText5)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName, resourceNotes, resourceGroup, resourceText1, resourceText2, resourceText3, resourceText4, resourceText5 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		/// <param name="resourceName">optional object resourceName</param>
		/// <param name="resourceNotes">optional object resourceNotes</param>
		/// <param name="resourceGroup">optional object resourceGroup</param>
		/// <param name="resourceText1">optional object resourceText1</param>
		/// <param name="resourceText2">optional object resourceText2</param>
		/// <param name="resourceText3">optional object resourceText3</param>
		/// <param name="resourceText4">optional object resourceText4</param>
		/// <param name="resourceText5">optional object resourceText5</param>
		/// <param name="assignNotes">optional object assignNotes</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName, object resourceNotes, object resourceGroup, object resourceText1, object resourceText2, object resourceText3, object resourceText4, object resourceText5, object assignNotes)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName, resourceNotes, resourceGroup, resourceText1, resourceText2, resourceText3, resourceText4, resourceText5, assignNotes });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		/// <param name="resourceName">optional object resourceName</param>
		/// <param name="resourceNotes">optional object resourceNotes</param>
		/// <param name="resourceGroup">optional object resourceGroup</param>
		/// <param name="resourceText1">optional object resourceText1</param>
		/// <param name="resourceText2">optional object resourceText2</param>
		/// <param name="resourceText3">optional object resourceText3</param>
		/// <param name="resourceText4">optional object resourceText4</param>
		/// <param name="resourceText5">optional object resourceText5</param>
		/// <param name="assignNotes">optional object assignNotes</param>
		/// <param name="ignoreUppercase">optional object ignoreUppercase</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName, object resourceNotes, object resourceGroup, object resourceText1, object resourceText2, object resourceText3, object resourceText4, object resourceText5, object assignNotes, object ignoreUppercase)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName, resourceNotes, resourceGroup, resourceText1, resourceText2, resourceText3, resourceText4, resourceText5, assignNotes, ignoreUppercase });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		/// <param name="resourceName">optional object resourceName</param>
		/// <param name="resourceNotes">optional object resourceNotes</param>
		/// <param name="resourceGroup">optional object resourceGroup</param>
		/// <param name="resourceText1">optional object resourceText1</param>
		/// <param name="resourceText2">optional object resourceText2</param>
		/// <param name="resourceText3">optional object resourceText3</param>
		/// <param name="resourceText4">optional object resourceText4</param>
		/// <param name="resourceText5">optional object resourceText5</param>
		/// <param name="assignNotes">optional object assignNotes</param>
		/// <param name="ignoreUppercase">optional object ignoreUppercase</param>
		/// <param name="ignoreNumberWords">optional object ignoreNumberWords</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName, object resourceNotes, object resourceGroup, object resourceText1, object resourceText2, object resourceText3, object resourceText4, object resourceText5, object assignNotes, object ignoreUppercase, object ignoreNumberWords)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName, resourceNotes, resourceGroup, resourceText1, resourceText2, resourceText3, resourceText4, resourceText5, assignNotes, ignoreUppercase, ignoreNumberWords });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskName">optional object taskName</param>
		/// <param name="taskNotes">optional object taskNotes</param>
		/// <param name="taskText1">optional object taskText1</param>
		/// <param name="taskText2">optional object taskText2</param>
		/// <param name="taskText3">optional object taskText3</param>
		/// <param name="taskText4">optional object taskText4</param>
		/// <param name="taskText5">optional object taskText5</param>
		/// <param name="taskText6">optional object taskText6</param>
		/// <param name="taskText7">optional object taskText7</param>
		/// <param name="taskText8">optional object taskText8</param>
		/// <param name="taskText9">optional object taskText9</param>
		/// <param name="taskText10">optional object taskText10</param>
		/// <param name="resourceCode">optional object resourceCode</param>
		/// <param name="resourceName">optional object resourceName</param>
		/// <param name="resourceNotes">optional object resourceNotes</param>
		/// <param name="resourceGroup">optional object resourceGroup</param>
		/// <param name="resourceText1">optional object resourceText1</param>
		/// <param name="resourceText2">optional object resourceText2</param>
		/// <param name="resourceText3">optional object resourceText3</param>
		/// <param name="resourceText4">optional object resourceText4</param>
		/// <param name="resourceText5">optional object resourceText5</param>
		/// <param name="assignNotes">optional object assignNotes</param>
		/// <param name="ignoreUppercase">optional object ignoreUppercase</param>
		/// <param name="ignoreNumberWords">optional object ignoreNumberWords</param>
		/// <param name="alwaysSuggest">optional object alwaysSuggest</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSpelling(object taskName, object taskNotes, object taskText1, object taskText2, object taskText3, object taskText4, object taskText5, object taskText6, object taskText7, object taskText8, object taskText9, object taskText10, object resourceCode, object resourceName, object resourceNotes, object resourceGroup, object resourceText1, object resourceText2, object resourceText3, object resourceText4, object resourceText5, object assignNotes, object ignoreUppercase, object ignoreNumberWords, object alwaysSuggest)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSpelling", new object[]{ taskName, taskNotes, taskText1, taskText2, taskText3, taskText4, taskText5, taskText6, taskText7, taskText8, taskText9, taskText10, resourceCode, resourceName, resourceNotes, resourceGroup, resourceText1, resourceText2, resourceText3, resourceText4, resourceText5, assignNotes, ignoreUppercase, ignoreNumberWords, alwaysSuggest });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WindowMoreWindows()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WindowMoreWindows");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpContents()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpContents");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpSearch()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpSearch");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpOnlineIndex()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpOnlineIndex");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpAbout()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpAbout");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fileName">optional object fileName</param>
		/// <param name="contextNumber">optional object contextNumber</param>
		/// <param name="search">optional object search</param>
		/// <param name="searchKey">optional object searchKey</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpLaunch(object fileName, object contextNumber, object search, object searchKey)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpLaunch", fileName, contextNumber, search, searchKey);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpLaunch()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpLaunch");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fileName">optional object fileName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpLaunch(object fileName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpLaunch", fileName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fileName">optional object fileName</param>
		/// <param name="contextNumber">optional object contextNumber</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpLaunch(object fileName, object contextNumber)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpLaunch", fileName, contextNumber);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fileName">optional object fileName</param>
		/// <param name="contextNumber">optional object contextNumber</param>
		/// <param name="search">optional object search</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpLaunch(object fileName, object contextNumber, object search)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpLaunch", fileName, contextNumber, search);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fileName">optional object fileName</param>
		/// <param name="contextNumber">optional object contextNumber</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpCueCards(object fileName, object contextNumber)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpCueCards", fileName, contextNumber);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpCueCards()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpCueCards");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fileName">optional object fileName</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpCueCards(object fileName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpCueCards", fileName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpTopics()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpTopics");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpAnswerWizard()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpAnswerWizard");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpMSProjectFundamentals()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpMSProjectFundamentals");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AutoCorrect()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AutoCorrect");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpQuickPreview()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpQuickPreview");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpTechnicalSupport()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpTechnicalSupport");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpCreateYourProject()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpCreateYourProject");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpContextHelp()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpContextHelp");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStyles(object item, object font, object size, object bold, object italic, object underline, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles", new object[]{ item, font, size, bold, italic, underline, color });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStyles()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStyles(object item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStyles(object item, object font)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles", item, font);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStyles(object item, object font, object size)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles", item, font, size);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStyles(object item, object font, object size, object bold)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles", item, font, size, bold);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStyles(object item, object font, object size, object bold, object italic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles", new object[]{ item, font, size, bold, italic });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStyles(object item, object font, object size, object bold, object italic, object underline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles", new object[]{ item, font, size, bold, italic, underline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="cellColor">optional object cellColor</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesFormat(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor, object pattern, object showInMenu)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormat", new object[]{ item, font, size, bold, italic, underline, color, cellColor, pattern, showInMenu });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesFormat()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormat");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesFormat(object item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormat", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesFormat(object item, object font)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormat", item, font);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesFormat(object item, object font, object size)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormat", item, font, size);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesFormat(object item, object font, object size, object bold)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormat", item, font, size, bold);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesFormat(object item, object font, object size, object bold, object italic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormat", new object[]{ item, font, size, bold, italic });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesFormat(object item, object font, object size, object bold, object italic, object underline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormat", new object[]{ item, font, size, bold, italic, underline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesFormat(object item, object font, object size, object bold, object italic, object underline, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormat", new object[]{ item, font, size, bold, italic, underline, color });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="cellColor">optional object cellColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesFormat(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormat", new object[]{ item, font, size, bold, italic, underline, color, cellColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="cellColor">optional object cellColor</param>
		/// <param name="pattern">optional object pattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesFormat(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor, object pattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormat", new object[]{ item, font, size, bold, italic, underline, color, cellColor, pattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional NetOffice.MSProjectApi.Enums.PjTimescaledData Item = 0</param>
		/// <param name="position">optional object position</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesAdd(object item, object position)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesAdd", item, position);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesAdd()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesAdd");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional NetOffice.MSProjectApi.Enums.PjTimescaledData Item = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesAdd(object item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesAdd", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional NetOffice.MSProjectApi.Enums.PjTimescaledData Item = 0</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesRemove(object item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesRemove", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesRemove()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesRemove");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesRemoveAll()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesRemoveAll");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="reset">optional object reset</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Font(object name, object size, object bold, object italic, object underline, object color, object reset)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font", new object[]{ name, size, bold, italic, underline, color, reset });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Font()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Font(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Font(object name, object size)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font", name, size);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Font(object name, object size, object bold)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font", name, size, bold);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Font(object name, object size, object bold, object italic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font", name, size, bold, italic);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Font(object name, object size, object bold, object italic, object underline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font", new object[]{ name, size, bold, italic, underline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Font(object name, object size, object bold, object italic, object underline, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font", new object[]{ name, size, bold, italic, underline, color });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Timescale()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Timescale");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		/// <param name="majorTicks">optional object majorTicks</param>
		/// <param name="minorTicks">optional object minorTicks</param>
		/// <param name="enlarge">optional object enlarge</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="majorUseFY">optional object majorUseFY</param>
		/// <param name="minorUseFY">optional object minorUseFY</param>
		/// <param name="topUnits">optional object topUnits</param>
		/// <param name="topLabel">optional object topLabel</param>
		/// <param name="topAlign">optional object topAlign</param>
		/// <param name="topCount">optional object topCount</param>
		/// <param name="topTicks">optional object topTicks</param>
		/// <param name="topUseFY">optional object topUseFY</param>
		/// <param name="tierCount">optional object tierCount</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks, object minorTicks, object enlarge, object separator, object majorUseFY, object minorUseFY, object topUnits, object topLabel, object topAlign, object topCount, object topTicks, object topUseFY, object tierCount)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks, minorTicks, enlarge, separator, majorUseFY, minorUseFY, topUnits, topLabel, topAlign, topCount, topTicks, topUseFY, tierCount });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", majorUnits);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", majorUnits, minorUnits);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", majorUnits, minorUnits, majorLabel);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", majorUnits, minorUnits, majorLabel, minorLabel);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		/// <param name="majorTicks">optional object majorTicks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		/// <param name="majorTicks">optional object majorTicks</param>
		/// <param name="minorTicks">optional object minorTicks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks, object minorTicks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks, minorTicks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		/// <param name="majorTicks">optional object majorTicks</param>
		/// <param name="minorTicks">optional object minorTicks</param>
		/// <param name="enlarge">optional object enlarge</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks, object minorTicks, object enlarge)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks, minorTicks, enlarge });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		/// <param name="majorTicks">optional object majorTicks</param>
		/// <param name="minorTicks">optional object minorTicks</param>
		/// <param name="enlarge">optional object enlarge</param>
		/// <param name="separator">optional object separator</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks, object minorTicks, object enlarge, object separator)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks, minorTicks, enlarge, separator });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		/// <param name="majorTicks">optional object majorTicks</param>
		/// <param name="minorTicks">optional object minorTicks</param>
		/// <param name="enlarge">optional object enlarge</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="majorUseFY">optional object majorUseFY</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks, object minorTicks, object enlarge, object separator, object majorUseFY)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks, minorTicks, enlarge, separator, majorUseFY });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		/// <param name="majorTicks">optional object majorTicks</param>
		/// <param name="minorTicks">optional object minorTicks</param>
		/// <param name="enlarge">optional object enlarge</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="majorUseFY">optional object majorUseFY</param>
		/// <param name="minorUseFY">optional object minorUseFY</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks, object minorTicks, object enlarge, object separator, object majorUseFY, object minorUseFY)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks, minorTicks, enlarge, separator, majorUseFY, minorUseFY });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		/// <param name="majorTicks">optional object majorTicks</param>
		/// <param name="minorTicks">optional object minorTicks</param>
		/// <param name="enlarge">optional object enlarge</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="majorUseFY">optional object majorUseFY</param>
		/// <param name="minorUseFY">optional object minorUseFY</param>
		/// <param name="topUnits">optional object topUnits</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks, object minorTicks, object enlarge, object separator, object majorUseFY, object minorUseFY, object topUnits)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks, minorTicks, enlarge, separator, majorUseFY, minorUseFY, topUnits });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		/// <param name="majorTicks">optional object majorTicks</param>
		/// <param name="minorTicks">optional object minorTicks</param>
		/// <param name="enlarge">optional object enlarge</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="majorUseFY">optional object majorUseFY</param>
		/// <param name="minorUseFY">optional object minorUseFY</param>
		/// <param name="topUnits">optional object topUnits</param>
		/// <param name="topLabel">optional object topLabel</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks, object minorTicks, object enlarge, object separator, object majorUseFY, object minorUseFY, object topUnits, object topLabel)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks, minorTicks, enlarge, separator, majorUseFY, minorUseFY, topUnits, topLabel });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		/// <param name="majorTicks">optional object majorTicks</param>
		/// <param name="minorTicks">optional object minorTicks</param>
		/// <param name="enlarge">optional object enlarge</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="majorUseFY">optional object majorUseFY</param>
		/// <param name="minorUseFY">optional object minorUseFY</param>
		/// <param name="topUnits">optional object topUnits</param>
		/// <param name="topLabel">optional object topLabel</param>
		/// <param name="topAlign">optional object topAlign</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks, object minorTicks, object enlarge, object separator, object majorUseFY, object minorUseFY, object topUnits, object topLabel, object topAlign)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks, minorTicks, enlarge, separator, majorUseFY, minorUseFY, topUnits, topLabel, topAlign });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		/// <param name="majorTicks">optional object majorTicks</param>
		/// <param name="minorTicks">optional object minorTicks</param>
		/// <param name="enlarge">optional object enlarge</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="majorUseFY">optional object majorUseFY</param>
		/// <param name="minorUseFY">optional object minorUseFY</param>
		/// <param name="topUnits">optional object topUnits</param>
		/// <param name="topLabel">optional object topLabel</param>
		/// <param name="topAlign">optional object topAlign</param>
		/// <param name="topCount">optional object topCount</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks, object minorTicks, object enlarge, object separator, object majorUseFY, object minorUseFY, object topUnits, object topLabel, object topAlign, object topCount)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks, minorTicks, enlarge, separator, majorUseFY, minorUseFY, topUnits, topLabel, topAlign, topCount });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		/// <param name="majorTicks">optional object majorTicks</param>
		/// <param name="minorTicks">optional object minorTicks</param>
		/// <param name="enlarge">optional object enlarge</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="majorUseFY">optional object majorUseFY</param>
		/// <param name="minorUseFY">optional object minorUseFY</param>
		/// <param name="topUnits">optional object topUnits</param>
		/// <param name="topLabel">optional object topLabel</param>
		/// <param name="topAlign">optional object topAlign</param>
		/// <param name="topCount">optional object topCount</param>
		/// <param name="topTicks">optional object topTicks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks, object minorTicks, object enlarge, object separator, object majorUseFY, object minorUseFY, object topUnits, object topLabel, object topAlign, object topCount, object topTicks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks, minorTicks, enlarge, separator, majorUseFY, minorUseFY, topUnits, topLabel, topAlign, topCount, topTicks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="majorUnits">optional object majorUnits</param>
		/// <param name="minorUnits">optional object minorUnits</param>
		/// <param name="majorLabel">optional object majorLabel</param>
		/// <param name="minorLabel">optional object minorLabel</param>
		/// <param name="majorAlign">optional object majorAlign</param>
		/// <param name="minorAlign">optional object minorAlign</param>
		/// <param name="majorCount">optional object majorCount</param>
		/// <param name="minorCount">optional object minorCount</param>
		/// <param name="majorTicks">optional object majorTicks</param>
		/// <param name="minorTicks">optional object minorTicks</param>
		/// <param name="enlarge">optional object enlarge</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="majorUseFY">optional object majorUseFY</param>
		/// <param name="minorUseFY">optional object minorUseFY</param>
		/// <param name="topUnits">optional object topUnits</param>
		/// <param name="topLabel">optional object topLabel</param>
		/// <param name="topAlign">optional object topAlign</param>
		/// <param name="topCount">optional object topCount</param>
		/// <param name="topTicks">optional object topTicks</param>
		/// <param name="topUseFY">optional object topUseFY</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleEdit(object majorUnits, object minorUnits, object majorLabel, object minorLabel, object majorAlign, object minorAlign, object majorCount, object minorCount, object majorTicks, object minorTicks, object enlarge, object separator, object majorUseFY, object minorUseFY, object topUnits, object topLabel, object topAlign, object topCount, object topTicks, object topUseFY)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleEdit", new object[]{ majorUnits, minorUnits, majorLabel, minorLabel, majorAlign, minorAlign, majorCount, minorCount, majorTicks, minorTicks, enlarge, separator, majorUseFY, minorUseFY, topUnits, topLabel, topAlign, topCount, topTicks, topUseFY });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="key1">optional object key1</param>
		/// <param name="ascending1">optional object ascending1</param>
		/// <param name="key2">optional object key2</param>
		/// <param name="ascending2">optional object ascending2</param>
		/// <param name="key3">optional object key3</param>
		/// <param name="ascending3">optional object ascending3</param>
		/// <param name="renumber">optional object renumber</param>
		/// <param name="outline">optional object outline</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Sort(object key1, object ascending1, object key2, object ascending2, object key3, object ascending3, object renumber, object outline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Sort", new object[]{ key1, ascending1, key2, ascending2, key3, ascending3, renumber, outline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Sort()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Sort");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="key1">optional object key1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Sort(object key1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Sort", key1);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="key1">optional object key1</param>
		/// <param name="ascending1">optional object ascending1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Sort(object key1, object ascending1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Sort", key1, ascending1);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="key1">optional object key1</param>
		/// <param name="ascending1">optional object ascending1</param>
		/// <param name="key2">optional object key2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Sort(object key1, object ascending1, object key2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Sort", key1, ascending1, key2);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="key1">optional object key1</param>
		/// <param name="ascending1">optional object ascending1</param>
		/// <param name="key2">optional object key2</param>
		/// <param name="ascending2">optional object ascending2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Sort(object key1, object ascending1, object key2, object ascending2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Sort", key1, ascending1, key2, ascending2);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="key1">optional object key1</param>
		/// <param name="ascending1">optional object ascending1</param>
		/// <param name="key2">optional object key2</param>
		/// <param name="ascending2">optional object ascending2</param>
		/// <param name="key3">optional object key3</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Sort(object key1, object ascending1, object key2, object ascending2, object key3)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Sort", new object[]{ key1, ascending1, key2, ascending2, key3 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="key1">optional object key1</param>
		/// <param name="ascending1">optional object ascending1</param>
		/// <param name="key2">optional object key2</param>
		/// <param name="ascending2">optional object ascending2</param>
		/// <param name="key3">optional object key3</param>
		/// <param name="ascending3">optional object ascending3</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Sort(object key1, object ascending1, object key2, object ascending2, object key3, object ascending3)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Sort", new object[]{ key1, ascending1, key2, ascending2, key3, ascending3 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="key1">optional object key1</param>
		/// <param name="ascending1">optional object ascending1</param>
		/// <param name="key2">optional object key2</param>
		/// <param name="ascending2">optional object ascending2</param>
		/// <param name="key3">optional object key3</param>
		/// <param name="ascending3">optional object ascending3</param>
		/// <param name="renumber">optional object renumber</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Sort(object key1, object ascending1, object key2, object ascending2, object key3, object ascending3, object renumber)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Sort", new object[]{ key1, ascending1, key2, ascending2, key3, ascending3, renumber });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BarBoxStyles()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BarBoxStyles");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="insideText">optional object insideText</param>
		/// <param name="reset">optional object reset</param>
		/// <param name="projectName">optional object projectName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText, object topText, object bottomText, object insideText, object reset, object projectName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText, topText, bottomText, insideText, reset, projectName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", taskID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", taskID, ganttStyle);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", taskID, ganttStyle, startShape);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", taskID, ganttStyle, startShape, startType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		/// <param name="topText">optional object topText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText, object topText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText, topText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="bottomText">optional object bottomText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText, object topText, object bottomText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText, topText, bottomText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="insideText">optional object insideText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText, object topText, object bottomText, object insideText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText, topText, bottomText, insideText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="insideText">optional object insideText</param>
		/// <param name="reset">optional object reset</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarFormat(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText, object topText, object bottomText, object insideText, object reset)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormat", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText, topText, bottomText, insideText, reset });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="draw">optional object draw</param>
		/// <param name="calendar">optional object calendar</param>
		/// <param name="color">optional object color</param>
		/// <param name="pattern">optional object pattern</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleNonWorking(object draw, object calendar, object color, object pattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleNonWorking", draw, calendar, color, pattern);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleNonWorking()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleNonWorking");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="draw">optional object draw</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleNonWorking(object draw)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleNonWorking", draw);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="draw">optional object draw</param>
		/// <param name="calendar">optional object calendar</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleNonWorking(object draw, object calendar)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleNonWorking", draw, calendar);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="draw">optional object draw</param>
		/// <param name="calendar">optional object calendar</param>
		/// <param name="color">optional object color</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TimescaleNonWorking(object draw, object calendar, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleNonWorking", draw, calendar, color);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxShowHideFields(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxShowHideFields", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxShowHideFields()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxShowHideFields");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Layout()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Layout");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="straight">optional object straight</param>
		/// <param name="displayArrows">optional object displayArrows</param>
		/// <param name="adjustForPageBreaks">optional object adjustForPageBreaks</param>
		/// <param name="displayPageBreaks">optional object displayPageBreaks</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTLayout(object straight, object displayArrows, object adjustForPageBreaks, object displayPageBreaks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTLayout", straight, displayArrows, adjustForPageBreaks, displayPageBreaks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTLayout()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTLayout");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="straight">optional object straight</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTLayout(object straight)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTLayout", straight);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="straight">optional object straight</param>
		/// <param name="displayArrows">optional object displayArrows</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTLayout(object straight, object displayArrows)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTLayout", straight, displayArrows);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="straight">optional object straight</param>
		/// <param name="displayArrows">optional object displayArrows</param>
		/// <param name="adjustForPageBreaks">optional object adjustForPageBreaks</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTLayout(object straight, object displayArrows, object adjustForPageBreaks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTLayout", straight, displayArrows, adjustForPageBreaks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LayoutNow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LayoutNow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		/// <param name="noncriticalSummaryColor">optional object noncriticalSummaryColor</param>
		/// <param name="criticalSubprojectStyle">optional object criticalSubprojectStyle</param>
		/// <param name="criticalSubprojectColor">optional object criticalSubprojectColor</param>
		/// <param name="noncriticalSubprojectStyle">optional object noncriticalSubprojectStyle</param>
		/// <param name="noncriticalSubprojectColor">optional object noncriticalSubprojectColor</param>
		/// <param name="criticalMarkedStyle">optional object criticalMarkedStyle</param>
		/// <param name="criticalMarkedColor">optional object criticalMarkedColor</param>
		/// <param name="noncriticalMarkedStyle">optional object noncriticalMarkedStyle</param>
		/// <param name="noncriticalMarkedColor">optional object noncriticalMarkedColor</param>
		/// <param name="criticalExternalTaskStyle">optional object criticalExternalTaskStyle</param>
		/// <param name="criticalExternalTaskColor">optional object criticalExternalTaskColor</param>
		/// <param name="noncriticalExternalTaskStyle">optional object noncriticalExternalTaskStyle</param>
		/// <param name="noncriticalExternalTaskColor">optional object noncriticalExternalTaskColor</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor, object criticalSubprojectStyle, object criticalSubprojectColor, object noncriticalSubprojectStyle, object noncriticalSubprojectColor, object criticalMarkedStyle, object criticalMarkedColor, object noncriticalMarkedStyle, object noncriticalMarkedColor, object criticalExternalTaskStyle, object criticalExternalTaskColor, object noncriticalExternalTaskStyle, object noncriticalExternalTaskColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor, criticalSubprojectStyle, criticalSubprojectColor, noncriticalSubprojectStyle, noncriticalSubprojectColor, criticalMarkedStyle, criticalMarkedColor, noncriticalMarkedStyle, noncriticalMarkedColor, criticalExternalTaskStyle, criticalExternalTaskColor, noncriticalExternalTaskStyle, noncriticalExternalTaskColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", criticalStyle);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", criticalStyle, criticalColor);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", criticalStyle, criticalColor, noncriticalStyle);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", criticalStyle, criticalColor, noncriticalStyle, noncriticalColor);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		/// <param name="noncriticalSummaryColor">optional object noncriticalSummaryColor</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		/// <param name="noncriticalSummaryColor">optional object noncriticalSummaryColor</param>
		/// <param name="criticalSubprojectStyle">optional object criticalSubprojectStyle</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor, object criticalSubprojectStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor, criticalSubprojectStyle });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		/// <param name="noncriticalSummaryColor">optional object noncriticalSummaryColor</param>
		/// <param name="criticalSubprojectStyle">optional object criticalSubprojectStyle</param>
		/// <param name="criticalSubprojectColor">optional object criticalSubprojectColor</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor, object criticalSubprojectStyle, object criticalSubprojectColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor, criticalSubprojectStyle, criticalSubprojectColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		/// <param name="noncriticalSummaryColor">optional object noncriticalSummaryColor</param>
		/// <param name="criticalSubprojectStyle">optional object criticalSubprojectStyle</param>
		/// <param name="criticalSubprojectColor">optional object criticalSubprojectColor</param>
		/// <param name="noncriticalSubprojectStyle">optional object noncriticalSubprojectStyle</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor, object criticalSubprojectStyle, object criticalSubprojectColor, object noncriticalSubprojectStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor, criticalSubprojectStyle, criticalSubprojectColor, noncriticalSubprojectStyle });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		/// <param name="noncriticalSummaryColor">optional object noncriticalSummaryColor</param>
		/// <param name="criticalSubprojectStyle">optional object criticalSubprojectStyle</param>
		/// <param name="criticalSubprojectColor">optional object criticalSubprojectColor</param>
		/// <param name="noncriticalSubprojectStyle">optional object noncriticalSubprojectStyle</param>
		/// <param name="noncriticalSubprojectColor">optional object noncriticalSubprojectColor</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor, object criticalSubprojectStyle, object criticalSubprojectColor, object noncriticalSubprojectStyle, object noncriticalSubprojectColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor, criticalSubprojectStyle, criticalSubprojectColor, noncriticalSubprojectStyle, noncriticalSubprojectColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		/// <param name="noncriticalSummaryColor">optional object noncriticalSummaryColor</param>
		/// <param name="criticalSubprojectStyle">optional object criticalSubprojectStyle</param>
		/// <param name="criticalSubprojectColor">optional object criticalSubprojectColor</param>
		/// <param name="noncriticalSubprojectStyle">optional object noncriticalSubprojectStyle</param>
		/// <param name="noncriticalSubprojectColor">optional object noncriticalSubprojectColor</param>
		/// <param name="criticalMarkedStyle">optional object criticalMarkedStyle</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor, object criticalSubprojectStyle, object criticalSubprojectColor, object noncriticalSubprojectStyle, object noncriticalSubprojectColor, object criticalMarkedStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor, criticalSubprojectStyle, criticalSubprojectColor, noncriticalSubprojectStyle, noncriticalSubprojectColor, criticalMarkedStyle });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		/// <param name="noncriticalSummaryColor">optional object noncriticalSummaryColor</param>
		/// <param name="criticalSubprojectStyle">optional object criticalSubprojectStyle</param>
		/// <param name="criticalSubprojectColor">optional object criticalSubprojectColor</param>
		/// <param name="noncriticalSubprojectStyle">optional object noncriticalSubprojectStyle</param>
		/// <param name="noncriticalSubprojectColor">optional object noncriticalSubprojectColor</param>
		/// <param name="criticalMarkedStyle">optional object criticalMarkedStyle</param>
		/// <param name="criticalMarkedColor">optional object criticalMarkedColor</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor, object criticalSubprojectStyle, object criticalSubprojectColor, object noncriticalSubprojectStyle, object noncriticalSubprojectColor, object criticalMarkedStyle, object criticalMarkedColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor, criticalSubprojectStyle, criticalSubprojectColor, noncriticalSubprojectStyle, noncriticalSubprojectColor, criticalMarkedStyle, criticalMarkedColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		/// <param name="noncriticalSummaryColor">optional object noncriticalSummaryColor</param>
		/// <param name="criticalSubprojectStyle">optional object criticalSubprojectStyle</param>
		/// <param name="criticalSubprojectColor">optional object criticalSubprojectColor</param>
		/// <param name="noncriticalSubprojectStyle">optional object noncriticalSubprojectStyle</param>
		/// <param name="noncriticalSubprojectColor">optional object noncriticalSubprojectColor</param>
		/// <param name="criticalMarkedStyle">optional object criticalMarkedStyle</param>
		/// <param name="criticalMarkedColor">optional object criticalMarkedColor</param>
		/// <param name="noncriticalMarkedStyle">optional object noncriticalMarkedStyle</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor, object criticalSubprojectStyle, object criticalSubprojectColor, object noncriticalSubprojectStyle, object noncriticalSubprojectColor, object criticalMarkedStyle, object criticalMarkedColor, object noncriticalMarkedStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor, criticalSubprojectStyle, criticalSubprojectColor, noncriticalSubprojectStyle, noncriticalSubprojectColor, criticalMarkedStyle, criticalMarkedColor, noncriticalMarkedStyle });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		/// <param name="noncriticalSummaryColor">optional object noncriticalSummaryColor</param>
		/// <param name="criticalSubprojectStyle">optional object criticalSubprojectStyle</param>
		/// <param name="criticalSubprojectColor">optional object criticalSubprojectColor</param>
		/// <param name="noncriticalSubprojectStyle">optional object noncriticalSubprojectStyle</param>
		/// <param name="noncriticalSubprojectColor">optional object noncriticalSubprojectColor</param>
		/// <param name="criticalMarkedStyle">optional object criticalMarkedStyle</param>
		/// <param name="criticalMarkedColor">optional object criticalMarkedColor</param>
		/// <param name="noncriticalMarkedStyle">optional object noncriticalMarkedStyle</param>
		/// <param name="noncriticalMarkedColor">optional object noncriticalMarkedColor</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor, object criticalSubprojectStyle, object criticalSubprojectColor, object noncriticalSubprojectStyle, object noncriticalSubprojectColor, object criticalMarkedStyle, object criticalMarkedColor, object noncriticalMarkedStyle, object noncriticalMarkedColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor, criticalSubprojectStyle, criticalSubprojectColor, noncriticalSubprojectStyle, noncriticalSubprojectColor, criticalMarkedStyle, criticalMarkedColor, noncriticalMarkedStyle, noncriticalMarkedColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		/// <param name="noncriticalSummaryColor">optional object noncriticalSummaryColor</param>
		/// <param name="criticalSubprojectStyle">optional object criticalSubprojectStyle</param>
		/// <param name="criticalSubprojectColor">optional object criticalSubprojectColor</param>
		/// <param name="noncriticalSubprojectStyle">optional object noncriticalSubprojectStyle</param>
		/// <param name="noncriticalSubprojectColor">optional object noncriticalSubprojectColor</param>
		/// <param name="criticalMarkedStyle">optional object criticalMarkedStyle</param>
		/// <param name="criticalMarkedColor">optional object criticalMarkedColor</param>
		/// <param name="noncriticalMarkedStyle">optional object noncriticalMarkedStyle</param>
		/// <param name="noncriticalMarkedColor">optional object noncriticalMarkedColor</param>
		/// <param name="criticalExternalTaskStyle">optional object criticalExternalTaskStyle</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor, object criticalSubprojectStyle, object criticalSubprojectColor, object noncriticalSubprojectStyle, object noncriticalSubprojectColor, object criticalMarkedStyle, object criticalMarkedColor, object noncriticalMarkedStyle, object noncriticalMarkedColor, object criticalExternalTaskStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor, criticalSubprojectStyle, criticalSubprojectColor, noncriticalSubprojectStyle, noncriticalSubprojectColor, criticalMarkedStyle, criticalMarkedColor, noncriticalMarkedStyle, noncriticalMarkedColor, criticalExternalTaskStyle });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		/// <param name="noncriticalSummaryColor">optional object noncriticalSummaryColor</param>
		/// <param name="criticalSubprojectStyle">optional object criticalSubprojectStyle</param>
		/// <param name="criticalSubprojectColor">optional object criticalSubprojectColor</param>
		/// <param name="noncriticalSubprojectStyle">optional object noncriticalSubprojectStyle</param>
		/// <param name="noncriticalSubprojectColor">optional object noncriticalSubprojectColor</param>
		/// <param name="criticalMarkedStyle">optional object criticalMarkedStyle</param>
		/// <param name="criticalMarkedColor">optional object criticalMarkedColor</param>
		/// <param name="noncriticalMarkedStyle">optional object noncriticalMarkedStyle</param>
		/// <param name="noncriticalMarkedColor">optional object noncriticalMarkedColor</param>
		/// <param name="criticalExternalTaskStyle">optional object criticalExternalTaskStyle</param>
		/// <param name="criticalExternalTaskColor">optional object criticalExternalTaskColor</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor, object criticalSubprojectStyle, object criticalSubprojectColor, object noncriticalSubprojectStyle, object noncriticalSubprojectColor, object criticalMarkedStyle, object criticalMarkedColor, object noncriticalMarkedStyle, object noncriticalMarkedColor, object criticalExternalTaskStyle, object criticalExternalTaskColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor, criticalSubprojectStyle, criticalSubprojectColor, noncriticalSubprojectStyle, noncriticalSubprojectColor, criticalMarkedStyle, criticalMarkedColor, noncriticalMarkedStyle, noncriticalMarkedColor, criticalExternalTaskStyle, criticalExternalTaskColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="criticalStyle">optional object criticalStyle</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalStyle">optional object noncriticalStyle</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		/// <param name="criticalMilestoneStyle">optional object criticalMilestoneStyle</param>
		/// <param name="criticalMilestoneColor">optional object criticalMilestoneColor</param>
		/// <param name="noncriticalMilestoneStyle">optional object noncriticalMilestoneStyle</param>
		/// <param name="noncriticalMilestoneColor">optional object noncriticalMilestoneColor</param>
		/// <param name="criticalSummaryStyle">optional object criticalSummaryStyle</param>
		/// <param name="criticalSummaryColor">optional object criticalSummaryColor</param>
		/// <param name="noncriticalSummaryStyle">optional object noncriticalSummaryStyle</param>
		/// <param name="noncriticalSummaryColor">optional object noncriticalSummaryColor</param>
		/// <param name="criticalSubprojectStyle">optional object criticalSubprojectStyle</param>
		/// <param name="criticalSubprojectColor">optional object criticalSubprojectColor</param>
		/// <param name="noncriticalSubprojectStyle">optional object noncriticalSubprojectStyle</param>
		/// <param name="noncriticalSubprojectColor">optional object noncriticalSubprojectColor</param>
		/// <param name="criticalMarkedStyle">optional object criticalMarkedStyle</param>
		/// <param name="criticalMarkedColor">optional object criticalMarkedColor</param>
		/// <param name="noncriticalMarkedStyle">optional object noncriticalMarkedStyle</param>
		/// <param name="noncriticalMarkedColor">optional object noncriticalMarkedColor</param>
		/// <param name="criticalExternalTaskStyle">optional object criticalExternalTaskStyle</param>
		/// <param name="criticalExternalTaskColor">optional object criticalExternalTaskColor</param>
		/// <param name="noncriticalExternalTaskStyle">optional object noncriticalExternalTaskStyle</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBorders(object criticalStyle, object criticalColor, object noncriticalStyle, object noncriticalColor, object criticalMilestoneStyle, object criticalMilestoneColor, object noncriticalMilestoneStyle, object noncriticalMilestoneColor, object criticalSummaryStyle, object criticalSummaryColor, object noncriticalSummaryStyle, object noncriticalSummaryColor, object criticalSubprojectStyle, object criticalSubprojectColor, object noncriticalSubprojectStyle, object noncriticalSubprojectColor, object criticalMarkedStyle, object criticalMarkedColor, object noncriticalMarkedStyle, object noncriticalMarkedColor, object criticalExternalTaskStyle, object criticalExternalTaskColor, object noncriticalExternalTaskStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBorders", new object[]{ criticalStyle, criticalColor, noncriticalStyle, noncriticalColor, criticalMilestoneStyle, criticalMilestoneColor, noncriticalMilestoneStyle, noncriticalMilestoneColor, criticalSummaryStyle, criticalSummaryColor, noncriticalSummaryStyle, noncriticalSummaryColor, criticalSubprojectStyle, criticalSubprojectColor, noncriticalSubprojectStyle, noncriticalSubprojectColor, criticalMarkedStyle, criticalMarkedColor, noncriticalMarkedStyle, noncriticalMarkedColor, criticalExternalTaskStyle, criticalExternalTaskColor, noncriticalExternalTaskStyle });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Gridlines()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Gridlines");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjGridline item</param>
		/// <param name="normalType">optional object normalType</param>
		/// <param name="normalColor">optional object normalColor</param>
		/// <param name="interval">optional object interval</param>
		/// <param name="intervalType">optional object intervalType</param>
		/// <param name="intervalColor">optional object intervalColor</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GridlinesEdit(NetOffice.MSProjectApi.Enums.PjGridline item, object normalType, object normalColor, object interval, object intervalType, object intervalColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GridlinesEdit", new object[]{ item, normalType, normalColor, interval, intervalType, intervalColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjGridline item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GridlinesEdit(NetOffice.MSProjectApi.Enums.PjGridline item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GridlinesEdit", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjGridline item</param>
		/// <param name="normalType">optional object normalType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GridlinesEdit(NetOffice.MSProjectApi.Enums.PjGridline item, object normalType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GridlinesEdit", item, normalType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjGridline item</param>
		/// <param name="normalType">optional object normalType</param>
		/// <param name="normalColor">optional object normalColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GridlinesEdit(NetOffice.MSProjectApi.Enums.PjGridline item, object normalType, object normalColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GridlinesEdit", item, normalType, normalColor);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjGridline item</param>
		/// <param name="normalType">optional object normalType</param>
		/// <param name="normalColor">optional object normalColor</param>
		/// <param name="interval">optional object interval</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GridlinesEdit(NetOffice.MSProjectApi.Enums.PjGridline item, object normalType, object normalColor, object interval)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GridlinesEdit", item, normalType, normalColor, interval);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjGridline item</param>
		/// <param name="normalType">optional object normalType</param>
		/// <param name="normalColor">optional object normalColor</param>
		/// <param name="interval">optional object interval</param>
		/// <param name="intervalType">optional object intervalType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GridlinesEdit(NetOffice.MSProjectApi.Enums.PjGridline item, object normalType, object normalColor, object interval, object intervalType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GridlinesEdit", new object[]{ item, normalType, normalColor, interval, intervalType });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowSelectedTasks(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowSelectedTasks", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowSelectedTasks()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowSelectedTasks");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PageBreaksShow(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PageBreaksShow", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PageBreaksShow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PageBreaksShow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FindNext()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FindNext");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FindPrevious()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FindPrevious");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ZoomOut()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomOut");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ZoomIn()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomIn");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="create">optional object create</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetField(string field, string value, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetField", field, value, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetField(string field, string value)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetField", field, value);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedTasks">optional object allSelectedTasks</param>
		/// <param name="create">optional object create</param>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="projectName">optional object projectName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetTaskField(string field, string value, object allSelectedTasks, object create, object taskID, object projectName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTaskField", new object[]{ field, value, allSelectedTasks, create, taskID, projectName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetTaskField(string field, string value)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTaskField", field, value);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedTasks">optional object allSelectedTasks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetTaskField(string field, string value, object allSelectedTasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTaskField", field, value, allSelectedTasks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedTasks">optional object allSelectedTasks</param>
		/// <param name="create">optional object create</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetTaskField(string field, string value, object allSelectedTasks, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTaskField", field, value, allSelectedTasks, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedTasks">optional object allSelectedTasks</param>
		/// <param name="create">optional object create</param>
		/// <param name="taskID">optional object taskID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetTaskField(string field, string value, object allSelectedTasks, object create, object taskID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTaskField", new object[]{ field, value, allSelectedTasks, create, taskID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedResources">optional object allSelectedResources</param>
		/// <param name="create">optional object create</param>
		/// <param name="resourceID">optional object resourceID</param>
		/// <param name="projectName">optional object projectName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetResourceField(string field, string value, object allSelectedResources, object create, object resourceID, object projectName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetResourceField", new object[]{ field, value, allSelectedResources, create, resourceID, projectName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetResourceField(string field, string value)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetResourceField", field, value);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedResources">optional object allSelectedResources</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetResourceField(string field, string value, object allSelectedResources)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetResourceField", field, value, allSelectedResources);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedResources">optional object allSelectedResources</param>
		/// <param name="create">optional object create</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetResourceField(string field, string value, object allSelectedResources, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetResourceField", field, value, allSelectedResources, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedResources">optional object allSelectedResources</param>
		/// <param name="create">optional object create</param>
		/// <param name="resourceID">optional object resourceID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetResourceField(string field, string value, object allSelectedResources, object create, object resourceID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetResourceField", new object[]{ field, value, allSelectedResources, create, resourceID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="value">string value</param>
		/// <param name="create">optional object create</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetActiveCell(string value, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetActiveCell", value, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="value">string value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetActiveCell(string value)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetActiveCell", value);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="test">optional object test</param>
		/// <param name="op">optional object op</param>
		/// <param name="field2">optional object field2</param>
		/// <param name="value2">optional object value2</param>
		/// <param name="test2">optional object test2</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object CheckField(string field, string value, object test, object op, object field2, object value2, object test2)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "CheckField", new object[]{ field, value, test, op, field2, value2, test2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object CheckField(string field, string value)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "CheckField", field, value);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="test">optional object test</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object CheckField(string field, string value, object test)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "CheckField", field, value, test);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="test">optional object test</param>
		/// <param name="op">optional object op</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object CheckField(string field, string value, object test, object op)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "CheckField", field, value, test, op);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="test">optional object test</param>
		/// <param name="op">optional object op</param>
		/// <param name="field2">optional object field2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object CheckField(string field, string value, object test, object op, object field2)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "CheckField", new object[]{ field, value, test, op, field2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="test">optional object test</param>
		/// <param name="op">optional object op</param>
		/// <param name="field2">optional object field2</param>
		/// <param name="value2">optional object value2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual object CheckField(string field, string value, object test, object op, object field2, object value2)
		{
			return InvokerService.InvokeInternal.ExecuteVariantMethodGet(this, "CheckField", new object[]{ field, value, test, op, field2, value2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="checkField">string checkField</param>
		/// <param name="checkValue">string checkValue</param>
		/// <param name="checkTest">optional object checkTest</param>
		/// <param name="checkOperation">optional object checkOperation</param>
		/// <param name="checkField2">optional object checkField2</param>
		/// <param name="checkValue2">optional object checkValue2</param>
		/// <param name="checkTest2">optional object checkTest2</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetMatchingField(string field, string value, string checkField, string checkValue, object checkTest, object checkOperation, object checkField2, object checkValue2, object checkTest2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetMatchingField", new object[]{ field, value, checkField, checkValue, checkTest, checkOperation, checkField2, checkValue2, checkTest2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="checkField">string checkField</param>
		/// <param name="checkValue">string checkValue</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetMatchingField(string field, string value, string checkField, string checkValue)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetMatchingField", field, value, checkField, checkValue);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="checkField">string checkField</param>
		/// <param name="checkValue">string checkValue</param>
		/// <param name="checkTest">optional object checkTest</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetMatchingField(string field, string value, string checkField, string checkValue, object checkTest)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetMatchingField", new object[]{ field, value, checkField, checkValue, checkTest });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="checkField">string checkField</param>
		/// <param name="checkValue">string checkValue</param>
		/// <param name="checkTest">optional object checkTest</param>
		/// <param name="checkOperation">optional object checkOperation</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetMatchingField(string field, string value, string checkField, string checkValue, object checkTest, object checkOperation)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetMatchingField", new object[]{ field, value, checkField, checkValue, checkTest, checkOperation });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="checkField">string checkField</param>
		/// <param name="checkValue">string checkValue</param>
		/// <param name="checkTest">optional object checkTest</param>
		/// <param name="checkOperation">optional object checkOperation</param>
		/// <param name="checkField2">optional object checkField2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetMatchingField(string field, string value, string checkField, string checkValue, object checkTest, object checkOperation, object checkField2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetMatchingField", new object[]{ field, value, checkField, checkValue, checkTest, checkOperation, checkField2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="checkField">string checkField</param>
		/// <param name="checkValue">string checkValue</param>
		/// <param name="checkTest">optional object checkTest</param>
		/// <param name="checkOperation">optional object checkOperation</param>
		/// <param name="checkField2">optional object checkField2</param>
		/// <param name="checkValue2">optional object checkValue2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetMatchingField(string field, string value, string checkField, string checkValue, object checkTest, object checkOperation, object checkField2, object checkValue2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetMatchingField", new object[]{ field, value, checkField, checkValue, checkTest, checkOperation, checkField2, checkValue2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="window">optional object window</param>
		/// <param name="command">optional object command</param>
		/// <param name="minimize">optional object minimize</param>
		/// <param name="activate">optional object activate</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppExecute(object window, object command, object minimize, object activate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppExecute", window, command, minimize, activate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppExecute()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppExecute");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="window">optional object window</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppExecute(object window)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppExecute", window);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="window">optional object window</param>
		/// <param name="command">optional object command</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppExecute(object window, object command)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppExecute", window, command);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="window">optional object window</param>
		/// <param name="command">optional object command</param>
		/// <param name="minimize">optional object minimize</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppExecute(object window, object command, object minimize)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppExecute", window, command, minimize);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="application">string application</param>
		/// <param name="document">optional object document</param>
		/// <param name="activate">optional object activate</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppLaunch(string application, object document, object activate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppLaunch", application, document, activate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="application">string application</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppLaunch(string application)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppLaunch", application);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="application">string application</param>
		/// <param name="document">optional object document</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AppLaunch(string application, object document)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AppLaunch", application, document);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DDELinksUpdate()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DDELinksUpdate");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GotoTaskDates()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GotoTaskDates");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="display">optional NetOffice.MSProjectApi.Enums.PjGanttBarLink Display = 0</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarLinks(object display)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarLinks", display);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarLinks()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarLinks");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="display">optional object display</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttShowDrawings(object display)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttShowDrawings", display);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttShowDrawings()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttShowDrawings");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="on">optional object on</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BarRounding(object on)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BarRounding", on);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BarRounding()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BarRounding");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="alwaysRollup">optional object alwaysRollup</param>
		/// <param name="hideWhenSummaryExpanded">optional object hideWhenSummaryExpanded</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttRollup(object alwaysRollup, object hideWhenSummaryExpanded)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttRollup", alwaysRollup, hideWhenSummaryExpanded);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttRollup()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttRollup");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="alwaysRollup">optional object alwaysRollup</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttRollup(object alwaysRollup)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttRollup", alwaysRollup);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="dateFormat">NetOffice.MSProjectApi.Enums.PjDateFormat dateFormat</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarTextDateFormat(NetOffice.MSProjectApi.Enums.PjDateFormat dateFormat)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarTextDateFormat", dateFormat);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="size">NetOffice.MSProjectApi.Enums.PjBarSize size</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarSize(NetOffice.MSProjectApi.Enums.PjBarSize size)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarSize", size);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleDelete(string item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleDelete", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		/// <param name="to">optional object to</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		/// <param name="insideText">optional object insideText</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to, object bottomText, object topText, object leftText, object rightText, object insideText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to, bottomText, topText, leftText, rightText, insideText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", item, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", item, create, name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", item, create, name, startShape);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		/// <param name="to">optional object to</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		/// <param name="to">optional object to</param>
		/// <param name="bottomText">optional object bottomText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to, object bottomText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to, bottomText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		/// <param name="to">optional object to</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="topText">optional object topText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to, object bottomText, object topText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to, bottomText, topText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		/// <param name="to">optional object to</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="leftText">optional object leftText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to, object bottomText, object topText, object leftText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to, bottomText, topText, leftText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		/// <param name="to">optional object to</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttBarStyleEdit(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to, object bottomText, object topText, object leftText, object rightText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleEdit", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to, bottomText, topText, leftText, rightText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="size">optional object size</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="gridlines">optional object gridlines</param>
		/// <param name="crossMarks">optional object crossMarks</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		/// <param name="field3">optional object field3</param>
		/// <param name="field4">optional object field4</param>
		/// <param name="field5">optional object field5</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBoxStyles(object size, object dateFormat, object gridlines, object crossMarks, object field1, object field2, object field3, object field4, object field5)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBoxStyles", new object[]{ size, dateFormat, gridlines, crossMarks, field1, field2, field3, field4, field5 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBoxStyles()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBoxStyles");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="size">optional object size</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBoxStyles(object size)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBoxStyles", size);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="size">optional object size</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBoxStyles(object size, object dateFormat)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBoxStyles", size, dateFormat);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="size">optional object size</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="gridlines">optional object gridlines</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBoxStyles(object size, object dateFormat, object gridlines)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBoxStyles", size, dateFormat, gridlines);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="size">optional object size</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="gridlines">optional object gridlines</param>
		/// <param name="crossMarks">optional object crossMarks</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBoxStyles(object size, object dateFormat, object gridlines, object crossMarks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBoxStyles", size, dateFormat, gridlines, crossMarks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="size">optional object size</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="gridlines">optional object gridlines</param>
		/// <param name="crossMarks">optional object crossMarks</param>
		/// <param name="field1">optional object field1</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBoxStyles(object size, object dateFormat, object gridlines, object crossMarks, object field1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBoxStyles", new object[]{ size, dateFormat, gridlines, crossMarks, field1 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="size">optional object size</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="gridlines">optional object gridlines</param>
		/// <param name="crossMarks">optional object crossMarks</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBoxStyles(object size, object dateFormat, object gridlines, object crossMarks, object field1, object field2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBoxStyles", new object[]{ size, dateFormat, gridlines, crossMarks, field1, field2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="size">optional object size</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="gridlines">optional object gridlines</param>
		/// <param name="crossMarks">optional object crossMarks</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		/// <param name="field3">optional object field3</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBoxStyles(object size, object dateFormat, object gridlines, object crossMarks, object field1, object field2, object field3)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBoxStyles", new object[]{ size, dateFormat, gridlines, crossMarks, field1, field2, field3 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="size">optional object size</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="gridlines">optional object gridlines</param>
		/// <param name="crossMarks">optional object crossMarks</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		/// <param name="field3">optional object field3</param>
		/// <param name="field4">optional object field4</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTBoxStyles(object size, object dateFormat, object gridlines, object crossMarks, object field1, object field2, object field3, object field4)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTBoxStyles", new object[]{ size, dateFormat, gridlines, crossMarks, field1, field2, field3, field4 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="create">optional object create</param>
		/// <param name="move">optional object move</param>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="xPosition">optional object xPosition</param>
		/// <param name="yPosition">optional object yPosition</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTSetTask(object create, object move, object taskID, object xPosition, object yPosition)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTSetTask", new object[]{ create, move, taskID, xPosition, yPosition });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTSetTask()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTSetTask");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="create">optional object create</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTSetTask(object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTSetTask", create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="create">optional object create</param>
		/// <param name="move">optional object move</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTSetTask(object create, object move)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTSetTask", create, move);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="create">optional object create</param>
		/// <param name="move">optional object move</param>
		/// <param name="taskID">optional object taskID</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTSetTask(object create, object move, object taskID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTSetTask", create, move, taskID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="create">optional object create</param>
		/// <param name="move">optional object move</param>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="xPosition">optional object xPosition</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool PERTSetTask(object create, object move, object taskID, object xPosition)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PERTSetTask", create, move, taskID, xPosition);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		/// <param name="proposedLeftShowAs">optional object proposedLeftShowAs</param>
		/// <param name="proposedLeftColor">optional object proposedLeftColor</param>
		/// <param name="proposedLeftPattern">optional object proposedLeftPattern</param>
		/// <param name="proposedRightShowAs">optional object proposedRightShowAs</param>
		/// <param name="proposedRightColor">optional object proposedRightColor</param>
		/// <param name="proposedRightPattern">optional object proposedRightPattern</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs, object proposedLeftColor, object proposedLeftPattern, object proposedRightShowAs, object proposedRightColor, object proposedRightPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs, proposedLeftColor, proposedLeftPattern, proposedRightShowAs, proposedRightColor, proposedRightPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", topLeftShowAs);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", topLeftShowAs, topLeftColor);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", topLeftShowAs, topLeftColor, topLeftPattern);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		/// <param name="proposedLeftShowAs">optional object proposedLeftShowAs</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		/// <param name="proposedLeftShowAs">optional object proposedLeftShowAs</param>
		/// <param name="proposedLeftColor">optional object proposedLeftColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs, object proposedLeftColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs, proposedLeftColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		/// <param name="proposedLeftShowAs">optional object proposedLeftShowAs</param>
		/// <param name="proposedLeftColor">optional object proposedLeftColor</param>
		/// <param name="proposedLeftPattern">optional object proposedLeftPattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs, object proposedLeftColor, object proposedLeftPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs, proposedLeftColor, proposedLeftPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		/// <param name="proposedLeftShowAs">optional object proposedLeftShowAs</param>
		/// <param name="proposedLeftColor">optional object proposedLeftColor</param>
		/// <param name="proposedLeftPattern">optional object proposedLeftPattern</param>
		/// <param name="proposedRightShowAs">optional object proposedRightShowAs</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs, object proposedLeftColor, object proposedLeftPattern, object proposedRightShowAs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs, proposedLeftColor, proposedLeftPattern, proposedRightShowAs });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		/// <param name="proposedLeftShowAs">optional object proposedLeftShowAs</param>
		/// <param name="proposedLeftColor">optional object proposedLeftColor</param>
		/// <param name="proposedLeftPattern">optional object proposedLeftPattern</param>
		/// <param name="proposedRightShowAs">optional object proposedRightShowAs</param>
		/// <param name="proposedRightColor">optional object proposedRightColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceGraphBarStyles(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs, object proposedLeftColor, object proposedLeftPattern, object proposedRightShowAs, object proposedRightColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStyles", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs, proposedLeftColor, proposedLeftPattern, proposedRightShowAs, proposedRightColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="filenames">object filenames</param>
		/// <param name="newWindow">object newWindow</param>
		/// <param name="attachToSources">object attachToSources</param>
		/// <param name="poolResources">object poolResources</param>
		/// <param name="hideSubtasks">object hideSubtasks</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="password">optional object password</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ConsolidateProjects(object filenames, object newWindow, object attachToSources, object poolResources, object hideSubtasks, object openPool, object userID, object password)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ConsolidateProjects", new object[]{ filenames, newWindow, attachToSources, poolResources, hideSubtasks, openPool, userID, password });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="filenames">object filenames</param>
		/// <param name="newWindow">object newWindow</param>
		/// <param name="attachToSources">object attachToSources</param>
		/// <param name="poolResources">object poolResources</param>
		/// <param name="hideSubtasks">object hideSubtasks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ConsolidateProjects(object filenames, object newWindow, object attachToSources, object poolResources, object hideSubtasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ConsolidateProjects", new object[]{ filenames, newWindow, attachToSources, poolResources, hideSubtasks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="filenames">object filenames</param>
		/// <param name="newWindow">object newWindow</param>
		/// <param name="attachToSources">object attachToSources</param>
		/// <param name="poolResources">object poolResources</param>
		/// <param name="hideSubtasks">object hideSubtasks</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ConsolidateProjects(object filenames, object newWindow, object attachToSources, object poolResources, object hideSubtasks, object openPool)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ConsolidateProjects", new object[]{ filenames, newWindow, attachToSources, poolResources, hideSubtasks, openPool });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="filenames">object filenames</param>
		/// <param name="newWindow">object newWindow</param>
		/// <param name="attachToSources">object attachToSources</param>
		/// <param name="poolResources">object poolResources</param>
		/// <param name="hideSubtasks">object hideSubtasks</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		/// <param name="userID">optional object userID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ConsolidateProjects(object filenames, object newWindow, object attachToSources, object poolResources, object hideSubtasks, object openPool, object userID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ConsolidateProjects", new object[]{ filenames, newWindow, attachToSources, poolResources, hideSubtasks, openPool, userID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional NetOffice.MSProjectApi.Enums.PjOrganizer Type = 0</param>
		/// <param name="task">optional object task</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Organizer(object type, object task)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Organizer", type, task);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Organizer()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Organizer");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional NetOffice.MSProjectApi.Enums.PjOrganizer Type = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Organizer(object type)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Organizer", type);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		/// <param name="fileName">optional object fileName</param>
		/// <param name="toFileName">optional object toFileName</param>
		/// <param name="name">optional object name</param>
		/// <param name="task">optional object task</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerMoveItem(object type, object fileName, object toFileName, object name, object task)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerMoveItem", new object[]{ type, fileName, toFileName, name, task });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerMoveItem()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerMoveItem");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerMoveItem(object type)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerMoveItem", type);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		/// <param name="fileName">optional object fileName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerMoveItem(object type, object fileName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerMoveItem", type, fileName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		/// <param name="fileName">optional object fileName</param>
		/// <param name="toFileName">optional object toFileName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerMoveItem(object type, object fileName, object toFileName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerMoveItem", type, fileName, toFileName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		/// <param name="fileName">optional object fileName</param>
		/// <param name="toFileName">optional object toFileName</param>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerMoveItem(object type, object fileName, object toFileName, object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerMoveItem", type, fileName, toFileName, name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		/// <param name="fileName">optional object fileName</param>
		/// <param name="name">optional object name</param>
		/// <param name="task">optional object task</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerDeleteItem(object type, object fileName, object name, object task)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerDeleteItem", type, fileName, name, task);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerDeleteItem()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerDeleteItem");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerDeleteItem(object type)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerDeleteItem", type);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		/// <param name="fileName">optional object fileName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerDeleteItem(object type, object fileName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerDeleteItem", type, fileName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		/// <param name="fileName">optional object fileName</param>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerDeleteItem(object type, object fileName, object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerDeleteItem", type, fileName, name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		/// <param name="fileName">optional object fileName</param>
		/// <param name="name">optional object name</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="task">optional object task</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerRenameItem(object type, object fileName, object name, object newName, object task)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerRenameItem", new object[]{ type, fileName, name, newName, task });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerRenameItem()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerRenameItem");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerRenameItem(object type)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerRenameItem", type);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		/// <param name="fileName">optional object fileName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerRenameItem(object type, object fileName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerRenameItem", type, fileName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		/// <param name="fileName">optional object fileName</param>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerRenameItem(object type, object fileName, object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerRenameItem", type, fileName, name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		/// <param name="fileName">optional object fileName</param>
		/// <param name="name">optional object name</param>
		/// <param name="newName">optional object newName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OrganizerRenameItem(object type, object fileName, object name, object newName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OrganizerRenameItem", type, fileName, name, newName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool RecurringTaskInsert()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "RecurringTaskInsert");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarTimescale()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarTimescale");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		/// <param name="bottomLeft">optional object bottomLeft</param>
		/// <param name="bottomRight">optional object bottomRight</param>
		/// <param name="topColor">optional object topColor</param>
		/// <param name="bottomColor">optional object bottomColor</param>
		/// <param name="topPattern">optional object topPattern</param>
		/// <param name="bottomPattern">optional object bottomPattern</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateBoxes(object topLeft, object topRight, object bottomLeft, object bottomRight, object topColor, object bottomColor, object topPattern, object bottomPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxes", new object[]{ topLeft, topRight, bottomLeft, bottomRight, topColor, bottomColor, topPattern, bottomPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateBoxes()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxes");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateBoxes(object topLeft)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxes", topLeft);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateBoxes(object topLeft, object topRight)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxes", topLeft, topRight);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		/// <param name="bottomLeft">optional object bottomLeft</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateBoxes(object topLeft, object topRight, object bottomLeft)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxes", topLeft, topRight, bottomLeft);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		/// <param name="bottomLeft">optional object bottomLeft</param>
		/// <param name="bottomRight">optional object bottomRight</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateBoxes(object topLeft, object topRight, object bottomLeft, object bottomRight)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxes", topLeft, topRight, bottomLeft, bottomRight);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		/// <param name="bottomLeft">optional object bottomLeft</param>
		/// <param name="bottomRight">optional object bottomRight</param>
		/// <param name="topColor">optional object topColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateBoxes(object topLeft, object topRight, object bottomLeft, object bottomRight, object topColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxes", new object[]{ topLeft, topRight, bottomLeft, bottomRight, topColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		/// <param name="bottomLeft">optional object bottomLeft</param>
		/// <param name="bottomRight">optional object bottomRight</param>
		/// <param name="topColor">optional object topColor</param>
		/// <param name="bottomColor">optional object bottomColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateBoxes(object topLeft, object topRight, object bottomLeft, object bottomRight, object topColor, object bottomColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxes", new object[]{ topLeft, topRight, bottomLeft, bottomRight, topColor, bottomColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		/// <param name="bottomLeft">optional object bottomLeft</param>
		/// <param name="bottomRight">optional object bottomRight</param>
		/// <param name="topColor">optional object topColor</param>
		/// <param name="bottomColor">optional object bottomColor</param>
		/// <param name="topPattern">optional object topPattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateBoxes(object topLeft, object topRight, object bottomLeft, object bottomRight, object topColor, object bottomColor, object topPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxes", new object[]{ topLeft, topRight, bottomLeft, bottomRight, topColor, bottomColor, topPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="monthTitle">optional object monthTitle</param>
		/// <param name="weekTitle">optional object weekTitle</param>
		/// <param name="dayTitle">optional object dayTitle</param>
		/// <param name="showPreview">optional object showPreview</param>
		/// <param name="daysPerWeek">optional object daysPerWeek</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarWeekHeadings(object monthTitle, object weekTitle, object dayTitle, object showPreview, object daysPerWeek)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarWeekHeadings", new object[]{ monthTitle, weekTitle, dayTitle, showPreview, daysPerWeek });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarWeekHeadings()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarWeekHeadings");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="monthTitle">optional object monthTitle</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarWeekHeadings(object monthTitle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarWeekHeadings", monthTitle);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="monthTitle">optional object monthTitle</param>
		/// <param name="weekTitle">optional object weekTitle</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarWeekHeadings(object monthTitle, object weekTitle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarWeekHeadings", monthTitle, weekTitle);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="monthTitle">optional object monthTitle</param>
		/// <param name="weekTitle">optional object weekTitle</param>
		/// <param name="dayTitle">optional object dayTitle</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarWeekHeadings(object monthTitle, object weekTitle, object dayTitle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarWeekHeadings", monthTitle, weekTitle, dayTitle);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="monthTitle">optional object monthTitle</param>
		/// <param name="weekTitle">optional object weekTitle</param>
		/// <param name="dayTitle">optional object dayTitle</param>
		/// <param name="showPreview">optional object showPreview</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarWeekHeadings(object monthTitle, object weekTitle, object dayTitle, object showPreview)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarWeekHeadings", monthTitle, weekTitle, dayTitle, showPreview);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjCalendarShading item</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateShadingEdit(NetOffice.MSProjectApi.Enums.PjCalendarShading item, object pattern, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateShadingEdit", item, pattern, color);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjCalendarShading item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateShadingEdit(NetOffice.MSProjectApi.Enums.PjCalendarShading item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateShadingEdit", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjCalendarShading item</param>
		/// <param name="pattern">optional object pattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateShadingEdit(NetOffice.MSProjectApi.Enums.PjCalendarShading item, object pattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateShadingEdit", item, pattern);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="baseCalendarName">optional object baseCalendarName</param>
		/// <param name="resourceUniqueID">optional object resourceUniqueID</param>
		/// <param name="projectIndex">optional object projectIndex</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateShading(object baseCalendarName, object resourceUniqueID, object projectIndex)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateShading", baseCalendarName, resourceUniqueID, projectIndex);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateShading()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateShading");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="baseCalendarName">optional object baseCalendarName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateShading(object baseCalendarName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateShading", baseCalendarName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="baseCalendarName">optional object baseCalendarName</param>
		/// <param name="resourceUniqueID">optional object resourceUniqueID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarDateShading(object baseCalendarName, object resourceUniqueID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateShading", baseCalendarName, resourceUniqueID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="numWeeks">optional object numWeeks</param>
		/// <param name="startDate">optional object startDate</param>
		/// <param name="endDate">optional object endDate</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ZoomCalendar(object numWeeks, object startDate, object endDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomCalendar", numWeeks, startDate, endDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ZoomCalendar()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomCalendar");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="numWeeks">optional object numWeeks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ZoomCalendar(object numWeeks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomCalendar", numWeeks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="numWeeks">optional object numWeeks</param>
		/// <param name="startDate">optional object startDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ZoomCalendar(object numWeeks, object startDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomCalendar", numWeeks, startDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="sortOrder">optional object sortOrder</param>
		/// <param name="autoLayout">optional object autoLayout</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarLayout(object sortOrder, object autoLayout)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarLayout", sortOrder, autoLayout);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarLayout()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarLayout");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="sortOrder">optional object sortOrder</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarLayout(object sortOrder)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarLayout", sortOrder);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="barRounding">optional object barRounding</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStyles(object barRounding)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStyles", barRounding);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStyles()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStyles");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		/// <param name="field3">optional object field3</param>
		/// <param name="field4">optional object field4</param>
		/// <param name="field5">optional object field5</param>
		/// <param name="splitPattern">optional object splitPattern</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStylesEdit(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1, object field2, object field3, object field4, object field5, object splitPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEdit", new object[]{ item, bar, pattern, color, align, wrap, shadow, field1, field2, field3, field4, field5, splitPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStylesEdit(NetOffice.MSProjectApi.Enums.PjBarItem item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEdit", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStylesEdit(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEdit", item, bar);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStylesEdit(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEdit", item, bar, pattern);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStylesEdit(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEdit", item, bar, pattern, color);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStylesEdit(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEdit", new object[]{ item, bar, pattern, color, align });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStylesEdit(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEdit", new object[]{ item, bar, pattern, color, align, wrap });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStylesEdit(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEdit", new object[]{ item, bar, pattern, color, align, wrap, shadow });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		/// <param name="field1">optional object field1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStylesEdit(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEdit", new object[]{ item, bar, pattern, color, align, wrap, shadow, field1 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStylesEdit(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1, object field2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEdit", new object[]{ item, bar, pattern, color, align, wrap, shadow, field1, field2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		/// <param name="field3">optional object field3</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStylesEdit(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1, object field2, object field3)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEdit", new object[]{ item, bar, pattern, color, align, wrap, shadow, field1, field2, field3 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		/// <param name="field3">optional object field3</param>
		/// <param name="field4">optional object field4</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStylesEdit(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1, object field2, object field3, object field4)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEdit", new object[]{ item, bar, pattern, color, align, wrap, shadow, field1, field2, field3, field4 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		/// <param name="field3">optional object field3</param>
		/// <param name="field4">optional object field4</param>
		/// <param name="field5">optional object field5</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBarStylesEdit(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1, object field2, object field3, object field4, object field5)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEdit", new object[]{ item, bar, pattern, color, align, wrap, shadow, field1, field2, field3, field4, field5 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarBestFitWeekHeight()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBestFitWeekHeight");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">NetOffice.MSProjectApi.Enums.PjShape type</param>
		/// <param name="behind">optional object behind</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DrawingCreate(NetOffice.MSProjectApi.Enums.PjShape type, object behind)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DrawingCreate", type, behind);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">NetOffice.MSProjectApi.Enums.PjShape type</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DrawingCreate(NetOffice.MSProjectApi.Enums.PjShape type)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DrawingCreate", type);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="forward">optional object forward</param>
		/// <param name="full">optional object full</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DrawingMove(object forward, object full)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DrawingMove", forward, full);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DrawingMove()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DrawingMove");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="forward">optional object forward</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DrawingMove(object forward)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DrawingMove", forward);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DrawingReshape()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DrawingReshape");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="sizePositionTab">optional object sizePositionTab</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DrawingProperties(object sizePositionTab)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DrawingProperties", sizePositionTab);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DrawingProperties()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DrawingProperties");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DrawingCycleColor()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DrawingCycleColor");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FormatCopy()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FormatCopy");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FormatPaste()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FormatPaste");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FormatPainter()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FormatPainter");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional object action</param>
		/// <param name="toolbarName">optional object toolbarName</param>
		/// <param name="newToolbarName">optional object newToolbarName</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Toolbars(object action, object toolbarName, object newToolbarName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Toolbars", action, toolbarName, newToolbarName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Toolbars()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Toolbars");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional object action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Toolbars(object action)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Toolbars", action);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional object action</param>
		/// <param name="toolbarName">optional object toolbarName</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Toolbars(object action, object toolbarName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Toolbars", action, toolbarName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">string toolbarName</param>
		/// <param name="buttonIndex">Int16 buttonIndex</param>
		/// <param name="command">optional object command</param>
		/// <param name="faceIndex">optional object faceIndex</param>
		/// <param name="description">optional object description</param>
		/// <param name="toolTip">optional object toolTip</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarInsertTool(string toolbarName, Int16 buttonIndex, object command, object faceIndex, object description, object toolTip)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarInsertTool", new object[]{ toolbarName, buttonIndex, command, faceIndex, description, toolTip });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">string toolbarName</param>
		/// <param name="buttonIndex">Int16 buttonIndex</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarInsertTool(string toolbarName, Int16 buttonIndex)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarInsertTool", toolbarName, buttonIndex);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">string toolbarName</param>
		/// <param name="buttonIndex">Int16 buttonIndex</param>
		/// <param name="command">optional object command</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarInsertTool(string toolbarName, Int16 buttonIndex, object command)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarInsertTool", toolbarName, buttonIndex, command);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">string toolbarName</param>
		/// <param name="buttonIndex">Int16 buttonIndex</param>
		/// <param name="command">optional object command</param>
		/// <param name="faceIndex">optional object faceIndex</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarInsertTool(string toolbarName, Int16 buttonIndex, object command, object faceIndex)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarInsertTool", toolbarName, buttonIndex, command, faceIndex);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">string toolbarName</param>
		/// <param name="buttonIndex">Int16 buttonIndex</param>
		/// <param name="command">optional object command</param>
		/// <param name="faceIndex">optional object faceIndex</param>
		/// <param name="description">optional object description</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarInsertTool(string toolbarName, Int16 buttonIndex, object command, object faceIndex, object description)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarInsertTool", new object[]{ toolbarName, buttonIndex, command, faceIndex, description });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">string toolbarName</param>
		/// <param name="buttonIndex">Int16 buttonIndex</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarDeleteTool(string toolbarName, Int16 buttonIndex)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarDeleteTool", toolbarName, buttonIndex);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarsCustomize()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarsCustomize");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">optional object toolbarName</param>
		/// <param name="buttonIndex">optional object buttonIndex</param>
		/// <param name="command">optional object command</param>
		/// <param name="faceIndex">optional object faceIndex</param>
		/// <param name="description">optional object description</param>
		/// <param name="toolTip">optional object toolTip</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarCustomizeTool(object toolbarName, object buttonIndex, object command, object faceIndex, object description, object toolTip)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarCustomizeTool", new object[]{ toolbarName, buttonIndex, command, faceIndex, description, toolTip });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarCustomizeTool()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarCustomizeTool");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">optional object toolbarName</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarCustomizeTool(object toolbarName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarCustomizeTool", toolbarName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">optional object toolbarName</param>
		/// <param name="buttonIndex">optional object buttonIndex</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarCustomizeTool(object toolbarName, object buttonIndex)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarCustomizeTool", toolbarName, buttonIndex);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">optional object toolbarName</param>
		/// <param name="buttonIndex">optional object buttonIndex</param>
		/// <param name="command">optional object command</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarCustomizeTool(object toolbarName, object buttonIndex, object command)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarCustomizeTool", toolbarName, buttonIndex, command);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">optional object toolbarName</param>
		/// <param name="buttonIndex">optional object buttonIndex</param>
		/// <param name="command">optional object command</param>
		/// <param name="faceIndex">optional object faceIndex</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarCustomizeTool(object toolbarName, object buttonIndex, object command, object faceIndex)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarCustomizeTool", toolbarName, buttonIndex, command, faceIndex);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">optional object toolbarName</param>
		/// <param name="buttonIndex">optional object buttonIndex</param>
		/// <param name="command">optional object command</param>
		/// <param name="faceIndex">optional object faceIndex</param>
		/// <param name="description">optional object description</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarCustomizeTool(object toolbarName, object buttonIndex, object command, object faceIndex, object description)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarCustomizeTool", new object[]{ toolbarName, buttonIndex, command, faceIndex, description });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">string toolbarName</param>
		/// <param name="buttonIndex">Int16 buttonIndex</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarCopyToolFace(string toolbarName, Int16 buttonIndex)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarCopyToolFace", toolbarName, buttonIndex);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="toolbarName">string toolbarName</param>
		/// <param name="buttonIndex">Int16 buttonIndex</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToolbarPasteToolFace(string toolbarName, Int16 buttonIndex)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToolbarPasteToolFace", toolbarName, buttonIndex);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="set">optional object set</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontBold(object set)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontBold", set);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontBold()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontBold");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="set">optional object set</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontItalic(object set)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontItalic", set);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontItalic()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontItalic");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="set">optional object set</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontUnderLine(object set)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontUnderLine", set);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontUnderLine()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontUnderLine");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="align">NetOffice.MSProjectApi.Enums.PjAlignment align</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ColumnAlignment(NetOffice.MSProjectApi.Enums.PjAlignment align)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ColumnAlignment", align);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Reports()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Reports");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TipOfTheDay()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TipOfTheDay");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FindFile()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FindFile");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="dataFile">string dataFile</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailUpdateProject(string dataFile)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailUpdateProject", dataFile);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="messageType">optional object messageType</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="fields">optional object fields</param>
		/// <param name="updateAsOf">optional object updateAsOf</param>
		/// <param name="showDialog">optional object showDialog</param>
		/// <param name="installationMessage">optional object installationMessage</param>
		/// <param name="updateFrom">optional object updateFrom</param>
		/// <param name="publishScope">optional object publishScope</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendProjectMail(object messageType, object subject, object body, object fields, object updateAsOf, object showDialog, object installationMessage, object updateFrom, object publishScope)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendProjectMail", new object[]{ messageType, subject, body, fields, updateAsOf, showDialog, installationMessage, updateFrom, publishScope });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendProjectMail()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendProjectMail");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="messageType">optional object messageType</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendProjectMail(object messageType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendProjectMail", messageType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="messageType">optional object messageType</param>
		/// <param name="subject">optional object subject</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendProjectMail(object messageType, object subject)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendProjectMail", messageType, subject);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="messageType">optional object messageType</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendProjectMail(object messageType, object subject, object body)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendProjectMail", messageType, subject, body);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="messageType">optional object messageType</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="fields">optional object fields</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendProjectMail(object messageType, object subject, object body, object fields)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendProjectMail", messageType, subject, body, fields);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="messageType">optional object messageType</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="fields">optional object fields</param>
		/// <param name="updateAsOf">optional object updateAsOf</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendProjectMail(object messageType, object subject, object body, object fields, object updateAsOf)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendProjectMail", new object[]{ messageType, subject, body, fields, updateAsOf });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="messageType">optional object messageType</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="fields">optional object fields</param>
		/// <param name="updateAsOf">optional object updateAsOf</param>
		/// <param name="showDialog">optional object showDialog</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendProjectMail(object messageType, object subject, object body, object fields, object updateAsOf, object showDialog)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendProjectMail", new object[]{ messageType, subject, body, fields, updateAsOf, showDialog });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="messageType">optional object messageType</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="fields">optional object fields</param>
		/// <param name="updateAsOf">optional object updateAsOf</param>
		/// <param name="showDialog">optional object showDialog</param>
		/// <param name="installationMessage">optional object installationMessage</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendProjectMail(object messageType, object subject, object body, object fields, object updateAsOf, object showDialog, object installationMessage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendProjectMail", new object[]{ messageType, subject, body, fields, updateAsOf, showDialog, installationMessage });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="messageType">optional object messageType</param>
		/// <param name="subject">optional object subject</param>
		/// <param name="body">optional object body</param>
		/// <param name="fields">optional object fields</param>
		/// <param name="updateAsOf">optional object updateAsOf</param>
		/// <param name="showDialog">optional object showDialog</param>
		/// <param name="installationMessage">optional object installationMessage</param>
		/// <param name="updateFrom">optional object updateFrom</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailSendProjectMail(object messageType, object subject, object body, object fields, object updateAsOf, object showDialog, object installationMessage, object updateFrom)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailSendProjectMail", new object[]{ messageType, subject, body, fields, updateAsOf, showDialog, installationMessage, updateFrom });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebInbox()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebInbox");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttChartWizard()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttChartWizard");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DrawingToolbarShow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DrawingToolbarShow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="start">optional object start</param>
		/// <param name="leadTime">optional object leadTime</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReminderSet(object start, object leadTime)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReminderSet", start, leadTime);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReminderSet()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReminderSet");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="start">optional object start</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ReminderSet(object start)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReminderSet", start);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="start">optional object start</param>
		/// <param name="leadTime">optional object leadTime</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SchedulePlusReminderSet(object start, object leadTime)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SchedulePlusReminderSet", start, leadTime);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SchedulePlusReminderSet()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SchedulePlusReminderSet");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="start">optional object start</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SchedulePlusReminderSet(object start)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SchedulePlusReminderSet", start);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="date">optional object date</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarTaskList(object date)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarTaskList", date);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarTaskList()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarTaskList");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OutlineSymbolsToggle(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OutlineSymbolsToggle", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OutlineSymbolsToggle()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OutlineSymbolsToggle");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">NetOffice.MSProjectApi.Enums.PjPoolAction action</param>
		/// <param name="fileName">optional object fileName</param>
		/// <param name="readOnly">optional object readOnly</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceSharingPoolAction(NetOffice.MSProjectApi.Enums.PjPoolAction action, object fileName, object readOnly)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceSharingPoolAction", action, fileName, readOnly);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">NetOffice.MSProjectApi.Enums.PjPoolAction action</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceSharingPoolAction(NetOffice.MSProjectApi.Enums.PjPoolAction action)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceSharingPoolAction", action);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">NetOffice.MSProjectApi.Enums.PjPoolAction action</param>
		/// <param name="fileName">optional object fileName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceSharingPoolAction(NetOffice.MSProjectApi.Enums.PjPoolAction action, object fileName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceSharingPoolAction", action, fileName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceActiveDirectory()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceActiveDirectory");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceAddressBook()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceAddressBook");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceDetails(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceDetails", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceDetails()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceDetails");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional object action</param>
		/// <param name="position">optional object position</param>
		/// <param name="fieldID">optional object fieldID</param>
		/// <param name="title">optional object title</param>
		/// <param name="includeInTeamStatus">optional object includeInTeamStatus</param>
		/// <param name="editable">optional object editable</param>
		/// <param name="useAssignmentField">optional object useAssignmentField</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailProjectMailCustomize(object action, object position, object fieldID, object title, object includeInTeamStatus, object editable, object useAssignmentField)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailProjectMailCustomize", new object[]{ action, position, fieldID, title, includeInTeamStatus, editable, useAssignmentField });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailProjectMailCustomize()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailProjectMailCustomize");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional object action</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailProjectMailCustomize(object action)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailProjectMailCustomize", action);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional object action</param>
		/// <param name="position">optional object position</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailProjectMailCustomize(object action, object position)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailProjectMailCustomize", action, position);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional object action</param>
		/// <param name="position">optional object position</param>
		/// <param name="fieldID">optional object fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailProjectMailCustomize(object action, object position, object fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailProjectMailCustomize", action, position, fieldID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional object action</param>
		/// <param name="position">optional object position</param>
		/// <param name="fieldID">optional object fieldID</param>
		/// <param name="title">optional object title</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailProjectMailCustomize(object action, object position, object fieldID, object title)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailProjectMailCustomize", action, position, fieldID, title);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional object action</param>
		/// <param name="position">optional object position</param>
		/// <param name="fieldID">optional object fieldID</param>
		/// <param name="title">optional object title</param>
		/// <param name="includeInTeamStatus">optional object includeInTeamStatus</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailProjectMailCustomize(object action, object position, object fieldID, object title, object includeInTeamStatus)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailProjectMailCustomize", new object[]{ action, position, fieldID, title, includeInTeamStatus });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional object action</param>
		/// <param name="position">optional object position</param>
		/// <param name="fieldID">optional object fieldID</param>
		/// <param name="title">optional object title</param>
		/// <param name="includeInTeamStatus">optional object includeInTeamStatus</param>
		/// <param name="editable">optional object editable</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MailProjectMailCustomize(object action, object position, object fieldID, object title, object includeInTeamStatus, object editable)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MailProjectMailCustomize", new object[]{ action, position, fieldID, title, includeInTeamStatus, editable });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="save">optional NetOffice.MSProjectApi.Enums.PjSaveType Save = 2</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileQuit(object save)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileQuit", save);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileQuit()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileQuit");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool About()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "About");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="alignCellData">optional object alignCellData</param>
		/// <param name="repeatRowLabel">optional object repeatRowLabel</param>
		/// <param name="shortLabels">optional object shortLabels</param>
		/// <param name="displayDetailsColumn">optional object displayDetailsColumn</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesProperties(object alignCellData, object repeatRowLabel, object shortLabels, object displayDetailsColumn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesProperties", alignCellData, repeatRowLabel, shortLabels, displayDetailsColumn);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesProperties()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesProperties");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="alignCellData">optional object alignCellData</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesProperties(object alignCellData)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesProperties", alignCellData);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="alignCellData">optional object alignCellData</param>
		/// <param name="repeatRowLabel">optional object repeatRowLabel</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesProperties(object alignCellData, object repeatRowLabel)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesProperties", alignCellData, repeatRowLabel);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="alignCellData">optional object alignCellData</param>
		/// <param name="repeatRowLabel">optional object repeatRowLabel</param>
		/// <param name="shortLabels">optional object shortLabels</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesProperties(object alignCellData, object repeatRowLabel, object shortLabels)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesProperties", alignCellData, repeatRowLabel, shortLabels);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional NetOffice.MSProjectApi.Enums.PjTimescaledData Item = 0</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesToggleItem(object item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesToggleItem", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DetailStylesToggleItem()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesToggleItem");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AutoFilter()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AutoFilter");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewBar()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewBar");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MacroShowVba()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MacroShowVba");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MacroShowCode()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MacroShowCode");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebGoBack()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebGoBack");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebGoForward()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebGoForward");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebStopLoading()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebStopLoading");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebRefresh()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebRefresh");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebOpenStartPage()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebOpenStartPage");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebOpenSearchPage()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebOpenSearchPage");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="hide">optional object hide</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebHideToolbars(object hide)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebHideToolbars", hide);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebHideToolbars()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebHideToolbars");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="address">optional object address</param>
		/// <param name="subAddress">optional object subAddress</param>
		/// <param name="addHistory">optional object addHistory</param>
		/// <param name="newWindow">optional object newWindow</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FollowHyperlink(object address, object subAddress, object addHistory, object newWindow)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FollowHyperlink", address, subAddress, addHistory, newWindow);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FollowHyperlink()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FollowHyperlink");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="address">optional object address</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FollowHyperlink(object address)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FollowHyperlink", address);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="address">optional object address</param>
		/// <param name="subAddress">optional object subAddress</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FollowHyperlink(object address, object subAddress)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FollowHyperlink", address, subAddress);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="address">optional object address</param>
		/// <param name="subAddress">optional object subAddress</param>
		/// <param name="addHistory">optional object addHistory</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FollowHyperlink(object address, object subAddress, object addHistory)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FollowHyperlink", address, subAddress, addHistory);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditPasteAsHyperlink()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditPasteAsHyperlink");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="address">optional object address</param>
		/// <param name="subAddress">optional object subAddress</param>
		/// <param name="screenTip">optional object screenTip</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool InsertHyperlink(object name, object address, object subAddress, object screenTip)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertHyperlink", name, address, subAddress, screenTip);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool InsertHyperlink()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertHyperlink");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool InsertHyperlink(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertHyperlink", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="address">optional object address</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool InsertHyperlink(object name, object address)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertHyperlink", name, address);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="address">optional object address</param>
		/// <param name="subAddress">optional object subAddress</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool InsertHyperlink(object name, object address, object subAddress)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertHyperlink", name, address, subAddress);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="address">optional object address</param>
		/// <param name="subAddress">optional object subAddress</param>
		/// <param name="screenTip">optional object screenTip</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditHyperlink(object name, object address, object subAddress, object screenTip)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditHyperlink", name, address, subAddress, screenTip);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditHyperlink()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditHyperlink");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditHyperlink(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditHyperlink", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="address">optional object address</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditHyperlink(object name, object address)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditHyperlink", name, address);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="address">optional object address</param>
		/// <param name="subAddress">optional object subAddress</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditHyperlink(object name, object address, object subAddress)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditHyperlink", name, address, subAddress);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="address">optional object address</param>
		/// <param name="subAddress">optional object subAddress</param>
		/// <param name="addHistory">optional object addHistory</param>
		/// <param name="newWindow">optional object newWindow</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebOpenHyperlink(object address, object subAddress, object addHistory, object newWindow)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebOpenHyperlink", address, subAddress, addHistory, newWindow);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebOpenHyperlink()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebOpenHyperlink");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="address">optional object address</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebOpenHyperlink(object address)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebOpenHyperlink", address);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="address">optional object address</param>
		/// <param name="subAddress">optional object subAddress</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebOpenHyperlink(object address, object subAddress)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebOpenHyperlink", address, subAddress);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="address">optional object address</param>
		/// <param name="subAddress">optional object subAddress</param>
		/// <param name="addHistory">optional object addHistory</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebOpenHyperlink(object address, object subAddress, object addHistory)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebOpenHyperlink", address, subAddress, addHistory);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebCopyHyperlink()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebCopyHyperlink");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="currentLink">optional object currentLink</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebAddToFavorites(object currentLink)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebAddToFavorites", currentLink);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebAddToFavorites()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebAddToFavorites");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditClearHyperlink()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditClearHyperlink");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="address">optional object address</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebSetStartPage(object address)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebSetStartPage", address);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebSetStartPage()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebSetStartPage");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="address">optional object address</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebSetSearchPage(object address)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebSetSearchPage", address);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebSetSearchPage()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebSetSearchPage");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebOpenFavorites()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebOpenFavorites");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebToolbar(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebToolbar", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebToolbar()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebToolbar");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="_lock">optional object lock</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SplitTask(object _lock)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SplitTask", _lock);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SplitTask()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SplitTask");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="phonetic">optional object phonetic</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldRename(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object newName, object phonetic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldRename", fieldID, newName, phonetic);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldRename(NetOffice.MSProjectApi.Enums.PjCustomField fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldRename", fieldID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="newName">optional object newName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldRename(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object newName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldRename", fieldID, newName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomizeField()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomizeField");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="display">optional object display</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttShowBarSplits(object display)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttShowBarSplits", display);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GanttShowBarSplits()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttShowBarSplits");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="display">optional object display</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarShowBarSplits(object display)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarShowBarSplits", display);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarShowBarSplits()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarShowBarSplits");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="externalFieldName">optional object externalFieldName</param>
		/// <param name="exportFilter">optional object exportFilter</param>
		/// <param name="importMethod">optional object importMethod</param>
		/// <param name="mergeKey">optional object mergeKey</param>
		/// <param name="headerRow">optional object headerRow</param>
		/// <param name="assignmentData">optional object assignmentData</param>
		/// <param name="textDelimiter">optional object textDelimiter</param>
		/// <param name="textFileOrigin">optional object textFileOrigin</param>
		/// <param name="useHtmlTemplate">optional object useHtmlTemplate</param>
		/// <param name="templateFile">optional object templateFile</param>
		/// <param name="includeImage">optional object includeImage</param>
		/// <param name="imageFile">optional object imageFile</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName, object externalFieldName, object exportFilter, object importMethod, object mergeKey, object headerRow, object assignmentData, object textDelimiter, object textFileOrigin, object useHtmlTemplate, object templateFile, object includeImage, object imageFile)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName, externalFieldName, exportFilter, importMethod, mergeKey, headerRow, assignmentData, textDelimiter, textFileOrigin, useHtmlTemplate, templateFile, includeImage, imageFile });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", name, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", name, create, overwriteExisting);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", name, create, overwriteExisting, newName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		/// <param name="fieldName">optional object fieldName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="externalFieldName">optional object externalFieldName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName, object externalFieldName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName, externalFieldName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="externalFieldName">optional object externalFieldName</param>
		/// <param name="exportFilter">optional object exportFilter</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName, object externalFieldName, object exportFilter)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName, externalFieldName, exportFilter });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="externalFieldName">optional object externalFieldName</param>
		/// <param name="exportFilter">optional object exportFilter</param>
		/// <param name="importMethod">optional object importMethod</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName, object externalFieldName, object exportFilter, object importMethod)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName, externalFieldName, exportFilter, importMethod });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="externalFieldName">optional object externalFieldName</param>
		/// <param name="exportFilter">optional object exportFilter</param>
		/// <param name="importMethod">optional object importMethod</param>
		/// <param name="mergeKey">optional object mergeKey</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName, object externalFieldName, object exportFilter, object importMethod, object mergeKey)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName, externalFieldName, exportFilter, importMethod, mergeKey });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="externalFieldName">optional object externalFieldName</param>
		/// <param name="exportFilter">optional object exportFilter</param>
		/// <param name="importMethod">optional object importMethod</param>
		/// <param name="mergeKey">optional object mergeKey</param>
		/// <param name="headerRow">optional object headerRow</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName, object externalFieldName, object exportFilter, object importMethod, object mergeKey, object headerRow)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName, externalFieldName, exportFilter, importMethod, mergeKey, headerRow });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="externalFieldName">optional object externalFieldName</param>
		/// <param name="exportFilter">optional object exportFilter</param>
		/// <param name="importMethod">optional object importMethod</param>
		/// <param name="mergeKey">optional object mergeKey</param>
		/// <param name="headerRow">optional object headerRow</param>
		/// <param name="assignmentData">optional object assignmentData</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName, object externalFieldName, object exportFilter, object importMethod, object mergeKey, object headerRow, object assignmentData)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName, externalFieldName, exportFilter, importMethod, mergeKey, headerRow, assignmentData });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="externalFieldName">optional object externalFieldName</param>
		/// <param name="exportFilter">optional object exportFilter</param>
		/// <param name="importMethod">optional object importMethod</param>
		/// <param name="mergeKey">optional object mergeKey</param>
		/// <param name="headerRow">optional object headerRow</param>
		/// <param name="assignmentData">optional object assignmentData</param>
		/// <param name="textDelimiter">optional object textDelimiter</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName, object externalFieldName, object exportFilter, object importMethod, object mergeKey, object headerRow, object assignmentData, object textDelimiter)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName, externalFieldName, exportFilter, importMethod, mergeKey, headerRow, assignmentData, textDelimiter });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="externalFieldName">optional object externalFieldName</param>
		/// <param name="exportFilter">optional object exportFilter</param>
		/// <param name="importMethod">optional object importMethod</param>
		/// <param name="mergeKey">optional object mergeKey</param>
		/// <param name="headerRow">optional object headerRow</param>
		/// <param name="assignmentData">optional object assignmentData</param>
		/// <param name="textDelimiter">optional object textDelimiter</param>
		/// <param name="textFileOrigin">optional object textFileOrigin</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName, object externalFieldName, object exportFilter, object importMethod, object mergeKey, object headerRow, object assignmentData, object textDelimiter, object textFileOrigin)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName, externalFieldName, exportFilter, importMethod, mergeKey, headerRow, assignmentData, textDelimiter, textFileOrigin });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="externalFieldName">optional object externalFieldName</param>
		/// <param name="exportFilter">optional object exportFilter</param>
		/// <param name="importMethod">optional object importMethod</param>
		/// <param name="mergeKey">optional object mergeKey</param>
		/// <param name="headerRow">optional object headerRow</param>
		/// <param name="assignmentData">optional object assignmentData</param>
		/// <param name="textDelimiter">optional object textDelimiter</param>
		/// <param name="textFileOrigin">optional object textFileOrigin</param>
		/// <param name="useHtmlTemplate">optional object useHtmlTemplate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName, object externalFieldName, object exportFilter, object importMethod, object mergeKey, object headerRow, object assignmentData, object textDelimiter, object textFileOrigin, object useHtmlTemplate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName, externalFieldName, exportFilter, importMethod, mergeKey, headerRow, assignmentData, textDelimiter, textFileOrigin, useHtmlTemplate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="externalFieldName">optional object externalFieldName</param>
		/// <param name="exportFilter">optional object exportFilter</param>
		/// <param name="importMethod">optional object importMethod</param>
		/// <param name="mergeKey">optional object mergeKey</param>
		/// <param name="headerRow">optional object headerRow</param>
		/// <param name="assignmentData">optional object assignmentData</param>
		/// <param name="textDelimiter">optional object textDelimiter</param>
		/// <param name="textFileOrigin">optional object textFileOrigin</param>
		/// <param name="useHtmlTemplate">optional object useHtmlTemplate</param>
		/// <param name="templateFile">optional object templateFile</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName, object externalFieldName, object exportFilter, object importMethod, object mergeKey, object headerRow, object assignmentData, object textDelimiter, object textFileOrigin, object useHtmlTemplate, object templateFile)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName, externalFieldName, exportFilter, importMethod, mergeKey, headerRow, assignmentData, textDelimiter, textFileOrigin, useHtmlTemplate, templateFile });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="dataCategory">optional object dataCategory</param>
		/// <param name="categoryEnabled">optional object categoryEnabled</param>
		/// <param name="tableName">optional object tableName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="externalFieldName">optional object externalFieldName</param>
		/// <param name="exportFilter">optional object exportFilter</param>
		/// <param name="importMethod">optional object importMethod</param>
		/// <param name="mergeKey">optional object mergeKey</param>
		/// <param name="headerRow">optional object headerRow</param>
		/// <param name="assignmentData">optional object assignmentData</param>
		/// <param name="textDelimiter">optional object textDelimiter</param>
		/// <param name="textFileOrigin">optional object textFileOrigin</param>
		/// <param name="useHtmlTemplate">optional object useHtmlTemplate</param>
		/// <param name="templateFile">optional object templateFile</param>
		/// <param name="includeImage">optional object includeImage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MapEdit(object name, object create, object overwriteExisting, object newName, object dataCategory, object categoryEnabled, object tableName, object fieldName, object externalFieldName, object exportFilter, object importMethod, object mergeKey, object headerRow, object assignmentData, object textDelimiter, object textFileOrigin, object useHtmlTemplate, object templateFile, object includeImage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MapEdit", new object[]{ name, create, overwriteExisting, newName, dataCategory, categoryEnabled, tableName, fieldName, externalFieldName, exportFilter, importMethod, mergeKey, headerRow, assignmentData, textDelimiter, textFileOrigin, useHtmlTemplate, templateFile, includeImage });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="right">optional object right</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FillAcross(object right)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FillAcross", right);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FillAcross()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FillAcross");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="acceptAll">optional object acceptAll</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LinksBetweenProjects(object acceptAll)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LinksBetweenProjects", acceptAll);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LinksBetweenProjects()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LinksBetweenProjects");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToggleAssignments()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToggleAssignments");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ProgressLines()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProgressLines");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="allSharers">optional object allSharers</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceSharingPoolUpdate(object allSharers)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceSharingPoolUpdate", allSharers);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceSharingPoolUpdate()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceSharingPoolUpdate");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceSharingPoolRefresh()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceSharingPoolRefresh");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="type">optional object type</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebHelp(object type)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebHelp", type);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WebHelp()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WebHelp");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AddProgressLine()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AddProgressLine");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">optional NetOffice.MSProjectApi.Enums.PjField FieldID = -1</param>
		/// <param name="iMEMode">optional NetOffice.MSProjectApi.Enums.PjIMEMode IMEMode = -1</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomizeIMEMode(object fieldID, object iMEMode)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomizeIMEMode", fieldID, iMEMode);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomizeIMEMode()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomizeIMEMode");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">optional NetOffice.MSProjectApi.Enums.PjField FieldID = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomizeIMEMode(object fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomizeIMEMode", fieldID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		/// <param name="formatID">optional object formatID</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DeleteFromDatabase(object name, object userID, object databasePassWord, object formatID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DeleteFromDatabase", name, userID, databasePassWord, formatID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DeleteFromDatabase()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DeleteFromDatabase");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DeleteFromDatabase(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DeleteFromDatabase", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="userID">optional object userID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DeleteFromDatabase(object name, object userID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DeleteFromDatabase", name, userID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="userID">optional object userID</param>
		/// <param name="databasePassWord">optional object databasePassWord</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DeleteFromDatabase(object name, object userID, object databasePassWord)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DeleteFromDatabase", name, userID, databasePassWord);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WBSCodeRenumber(object all)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WBSCodeRenumber", all);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WBSCodeRenumber()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WBSCodeRenumber");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="codePrefix">object codePrefix</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjWBSSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="codeGenerate">optional object codeGenerate</param>
		/// <param name="verifyUniqueness">optional object verifyUniqueness</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WBSCodeMaskEdit(object codePrefix, object level, object sequence, object length, object separator, object codeGenerate, object verifyUniqueness)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WBSCodeMaskEdit", new object[]{ codePrefix, level, sequence, length, separator, codeGenerate, verifyUniqueness });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="codePrefix">object codePrefix</param>
		/// <param name="level">object level</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WBSCodeMaskEdit(object codePrefix, object level)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WBSCodeMaskEdit", codePrefix, level);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="codePrefix">object codePrefix</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjWBSSequence Sequence = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WBSCodeMaskEdit(object codePrefix, object level, object sequence)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WBSCodeMaskEdit", codePrefix, level, sequence);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="codePrefix">object codePrefix</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjWBSSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WBSCodeMaskEdit(object codePrefix, object level, object sequence, object length)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WBSCodeMaskEdit", codePrefix, level, sequence, length);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="codePrefix">object codePrefix</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjWBSSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WBSCodeMaskEdit(object codePrefix, object level, object sequence, object length, object separator)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WBSCodeMaskEdit", new object[]{ codePrefix, level, sequence, length, separator });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="codePrefix">object codePrefix</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjWBSSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="codeGenerate">optional object codeGenerate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WBSCodeMaskEdit(object codePrefix, object level, object sequence, object length, object separator, object codeGenerate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WBSCodeMaskEdit", new object[]{ codePrefix, level, sequence, length, separator, codeGenerate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		/// <param name="onlyCompleteCodes">optional object onlyCompleteCodes</param>
		/// <param name="lookupTableLink">optional object lookupTableLink</param>
		/// <param name="onlyLeaves">optional object onlyLeaves</param>
		/// <param name="matchGeneric">optional object matchGeneric</param>
		/// <param name="requiredCode">optional object requiredCode</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEdit(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes, object lookupTableLink, object onlyLeaves, object matchGeneric, object requiredCode)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEdit", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes, lookupTableLink, onlyLeaves, matchGeneric, requiredCode });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEdit(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEdit", fieldID, level);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEdit(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEdit", fieldID, level, sequence);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEdit(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEdit", fieldID, level, sequence, length);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEdit(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEdit", new object[]{ fieldID, level, sequence, length, separator });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEdit(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEdit", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		/// <param name="onlyCompleteCodes">optional object onlyCompleteCodes</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEdit(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEdit", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		/// <param name="onlyCompleteCodes">optional object onlyCompleteCodes</param>
		/// <param name="lookupTableLink">optional object lookupTableLink</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEdit(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes, object lookupTableLink)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEdit", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes, lookupTableLink });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		/// <param name="onlyCompleteCodes">optional object onlyCompleteCodes</param>
		/// <param name="lookupTableLink">optional object lookupTableLink</param>
		/// <param name="onlyLeaves">optional object onlyLeaves</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEdit(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes, object lookupTableLink, object onlyLeaves)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEdit", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes, lookupTableLink, onlyLeaves });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		/// <param name="onlyCompleteCodes">optional object onlyCompleteCodes</param>
		/// <param name="lookupTableLink">optional object lookupTableLink</param>
		/// <param name="onlyLeaves">optional object onlyLeaves</param>
		/// <param name="matchGeneric">optional object matchGeneric</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEdit(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes, object lookupTableLink, object onlyLeaves, object matchGeneric)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEdit", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes, lookupTableLink, onlyLeaves, matchGeneric });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultSaveFormat">optional object defaultSaveFormat</param>
		/// <param name="defaultProjectsPath">optional object defaultProjectsPath</param>
		/// <param name="defaultUserTemplatesPath">optional object defaultUserTemplatesPath</param>
		/// <param name="defaultWorkgroupTemplatesPath">optional object defaultWorkgroupTemplatesPath</param>
		/// <param name="expandDatabaseTimephasedData">optional object expandDatabaseTimephasedData</param>
		/// <param name="automaticSave">optional object automaticSave</param>
		/// <param name="automaticSaveInterval">optional object automaticSaveInterval</param>
		/// <param name="automaticSaveOptions">optional object automaticSaveOptions</param>
		/// <param name="automaticSavePrompt">optional object automaticSavePrompt</param>
		/// <param name="setDefaultsDatabase">optional object setDefaultsDatabase</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSave(object defaultSaveFormat, object defaultProjectsPath, object defaultUserTemplatesPath, object defaultWorkgroupTemplatesPath, object expandDatabaseTimephasedData, object automaticSave, object automaticSaveInterval, object automaticSaveOptions, object automaticSavePrompt, object setDefaultsDatabase)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSave", new object[]{ defaultSaveFormat, defaultProjectsPath, defaultUserTemplatesPath, defaultWorkgroupTemplatesPath, expandDatabaseTimephasedData, automaticSave, automaticSaveInterval, automaticSaveOptions, automaticSavePrompt, setDefaultsDatabase });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSave()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSave");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultSaveFormat">optional object defaultSaveFormat</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSave(object defaultSaveFormat)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSave", defaultSaveFormat);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultSaveFormat">optional object defaultSaveFormat</param>
		/// <param name="defaultProjectsPath">optional object defaultProjectsPath</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSave(object defaultSaveFormat, object defaultProjectsPath)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSave", defaultSaveFormat, defaultProjectsPath);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultSaveFormat">optional object defaultSaveFormat</param>
		/// <param name="defaultProjectsPath">optional object defaultProjectsPath</param>
		/// <param name="defaultUserTemplatesPath">optional object defaultUserTemplatesPath</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSave(object defaultSaveFormat, object defaultProjectsPath, object defaultUserTemplatesPath)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSave", defaultSaveFormat, defaultProjectsPath, defaultUserTemplatesPath);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultSaveFormat">optional object defaultSaveFormat</param>
		/// <param name="defaultProjectsPath">optional object defaultProjectsPath</param>
		/// <param name="defaultUserTemplatesPath">optional object defaultUserTemplatesPath</param>
		/// <param name="defaultWorkgroupTemplatesPath">optional object defaultWorkgroupTemplatesPath</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSave(object defaultSaveFormat, object defaultProjectsPath, object defaultUserTemplatesPath, object defaultWorkgroupTemplatesPath)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSave", defaultSaveFormat, defaultProjectsPath, defaultUserTemplatesPath, defaultWorkgroupTemplatesPath);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultSaveFormat">optional object defaultSaveFormat</param>
		/// <param name="defaultProjectsPath">optional object defaultProjectsPath</param>
		/// <param name="defaultUserTemplatesPath">optional object defaultUserTemplatesPath</param>
		/// <param name="defaultWorkgroupTemplatesPath">optional object defaultWorkgroupTemplatesPath</param>
		/// <param name="expandDatabaseTimephasedData">optional object expandDatabaseTimephasedData</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSave(object defaultSaveFormat, object defaultProjectsPath, object defaultUserTemplatesPath, object defaultWorkgroupTemplatesPath, object expandDatabaseTimephasedData)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSave", new object[]{ defaultSaveFormat, defaultProjectsPath, defaultUserTemplatesPath, defaultWorkgroupTemplatesPath, expandDatabaseTimephasedData });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultSaveFormat">optional object defaultSaveFormat</param>
		/// <param name="defaultProjectsPath">optional object defaultProjectsPath</param>
		/// <param name="defaultUserTemplatesPath">optional object defaultUserTemplatesPath</param>
		/// <param name="defaultWorkgroupTemplatesPath">optional object defaultWorkgroupTemplatesPath</param>
		/// <param name="expandDatabaseTimephasedData">optional object expandDatabaseTimephasedData</param>
		/// <param name="automaticSave">optional object automaticSave</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSave(object defaultSaveFormat, object defaultProjectsPath, object defaultUserTemplatesPath, object defaultWorkgroupTemplatesPath, object expandDatabaseTimephasedData, object automaticSave)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSave", new object[]{ defaultSaveFormat, defaultProjectsPath, defaultUserTemplatesPath, defaultWorkgroupTemplatesPath, expandDatabaseTimephasedData, automaticSave });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultSaveFormat">optional object defaultSaveFormat</param>
		/// <param name="defaultProjectsPath">optional object defaultProjectsPath</param>
		/// <param name="defaultUserTemplatesPath">optional object defaultUserTemplatesPath</param>
		/// <param name="defaultWorkgroupTemplatesPath">optional object defaultWorkgroupTemplatesPath</param>
		/// <param name="expandDatabaseTimephasedData">optional object expandDatabaseTimephasedData</param>
		/// <param name="automaticSave">optional object automaticSave</param>
		/// <param name="automaticSaveInterval">optional object automaticSaveInterval</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSave(object defaultSaveFormat, object defaultProjectsPath, object defaultUserTemplatesPath, object defaultWorkgroupTemplatesPath, object expandDatabaseTimephasedData, object automaticSave, object automaticSaveInterval)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSave", new object[]{ defaultSaveFormat, defaultProjectsPath, defaultUserTemplatesPath, defaultWorkgroupTemplatesPath, expandDatabaseTimephasedData, automaticSave, automaticSaveInterval });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultSaveFormat">optional object defaultSaveFormat</param>
		/// <param name="defaultProjectsPath">optional object defaultProjectsPath</param>
		/// <param name="defaultUserTemplatesPath">optional object defaultUserTemplatesPath</param>
		/// <param name="defaultWorkgroupTemplatesPath">optional object defaultWorkgroupTemplatesPath</param>
		/// <param name="expandDatabaseTimephasedData">optional object expandDatabaseTimephasedData</param>
		/// <param name="automaticSave">optional object automaticSave</param>
		/// <param name="automaticSaveInterval">optional object automaticSaveInterval</param>
		/// <param name="automaticSaveOptions">optional object automaticSaveOptions</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSave(object defaultSaveFormat, object defaultProjectsPath, object defaultUserTemplatesPath, object defaultWorkgroupTemplatesPath, object expandDatabaseTimephasedData, object automaticSave, object automaticSaveInterval, object automaticSaveOptions)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSave", new object[]{ defaultSaveFormat, defaultProjectsPath, defaultUserTemplatesPath, defaultWorkgroupTemplatesPath, expandDatabaseTimephasedData, automaticSave, automaticSaveInterval, automaticSaveOptions });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultSaveFormat">optional object defaultSaveFormat</param>
		/// <param name="defaultProjectsPath">optional object defaultProjectsPath</param>
		/// <param name="defaultUserTemplatesPath">optional object defaultUserTemplatesPath</param>
		/// <param name="defaultWorkgroupTemplatesPath">optional object defaultWorkgroupTemplatesPath</param>
		/// <param name="expandDatabaseTimephasedData">optional object expandDatabaseTimephasedData</param>
		/// <param name="automaticSave">optional object automaticSave</param>
		/// <param name="automaticSaveInterval">optional object automaticSaveInterval</param>
		/// <param name="automaticSaveOptions">optional object automaticSaveOptions</param>
		/// <param name="automaticSavePrompt">optional object automaticSavePrompt</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSave(object defaultSaveFormat, object defaultProjectsPath, object defaultUserTemplatesPath, object defaultWorkgroupTemplatesPath, object expandDatabaseTimephasedData, object automaticSave, object automaticSaveInterval, object automaticSaveOptions, object automaticSavePrompt)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSave", new object[]{ defaultSaveFormat, defaultProjectsPath, defaultUserTemplatesPath, defaultWorkgroupTemplatesPath, expandDatabaseTimephasedData, automaticSave, automaticSaveInterval, automaticSaveOptions, automaticSavePrompt });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OfficeOnTheWeb()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OfficeOnTheWeb");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FixMe()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FixMe");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowWorkAvailability()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowWorkAvailability");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ViewShowUnitAvailability()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewShowUnitAvailability");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		/// <param name="from">optional object from</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaselineClear(object all, object from)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaselineClear", all, from);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaselineClear()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaselineClear");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="all">optional object all</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BaselineClear(object all)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BaselineClear", all);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Groups()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Groups");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GroupApply(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GroupApply", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GroupApply()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GroupApply");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GroupBy()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GroupBy");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">optional object level</param>
		/// <param name="code">optional object code</param>
		/// <param name="description">optional object description</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LookUpTableAdd(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object code, object description)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LookUpTableAdd", fieldID, level, code, description);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LookUpTableAdd(NetOffice.MSProjectApi.Enums.PjCustomField fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LookUpTableAdd", fieldID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">optional object level</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LookUpTableAdd(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LookUpTableAdd", fieldID, level);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">optional object level</param>
		/// <param name="code">optional object code</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LookUpTableAdd(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object code)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LookUpTableAdd", fieldID, level, code);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="style">NetOffice.MSProjectApi.Enums.PjBoxStyle style</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">optional NetOffice.MSProjectApi.Enums.PjColor BorderColor = -1</param>
		/// <param name="borderWidth">object borderWidth</param>
		/// <param name="backgroundColor">optional NetOffice.MSProjectApi.Enums.PjColor BackgroundColor = -1</param>
		/// <param name="backgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern BackgroundPattern = -1</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxStylesEdit(NetOffice.MSProjectApi.Enums.PjBoxStyle style, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth, object backgroundColor, object backgroundPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxStylesEdit", new object[]{ style, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor, backgroundPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="style">NetOffice.MSProjectApi.Enums.PjBoxStyle style</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxStylesEdit(NetOffice.MSProjectApi.Enums.PjBoxStyle style, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxStylesEdit", new object[]{ style, dataTemplate, horizontalGridlines, verticalGridlines, borderShape });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="style">NetOffice.MSProjectApi.Enums.PjBoxStyle style</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">optional NetOffice.MSProjectApi.Enums.PjColor BorderColor = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxStylesEdit(NetOffice.MSProjectApi.Enums.PjBoxStyle style, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxStylesEdit", new object[]{ style, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="style">NetOffice.MSProjectApi.Enums.PjBoxStyle style</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">optional NetOffice.MSProjectApi.Enums.PjColor BorderColor = -1</param>
		/// <param name="borderWidth">object borderWidth</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxStylesEdit(NetOffice.MSProjectApi.Enums.PjBoxStyle style, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxStylesEdit", new object[]{ style, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="style">NetOffice.MSProjectApi.Enums.PjBoxStyle style</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">optional NetOffice.MSProjectApi.Enums.PjColor BorderColor = -1</param>
		/// <param name="borderWidth">object borderWidth</param>
		/// <param name="backgroundColor">optional NetOffice.MSProjectApi.Enums.PjColor BackgroundColor = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxStylesEdit(NetOffice.MSProjectApi.Enums.PjBoxStyle style, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth, object backgroundColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxStylesEdit", new object[]{ style, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">object projectName</param>
		/// <param name="taskID">object taskID</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">optional NetOffice.MSProjectApi.Enums.PjColor BorderColor = -1</param>
		/// <param name="borderWidth">object borderWidth</param>
		/// <param name="backgroundColor">optional NetOffice.MSProjectApi.Enums.PjColor BackgroundColor = -1</param>
		/// <param name="backgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern BackgroundPattern = -1</param>
		/// <param name="reset">optional object reset</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxFormat(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth, object backgroundColor, object backgroundPattern, object reset)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxFormat", new object[]{ projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor, backgroundPattern, reset });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">object projectName</param>
		/// <param name="taskID">object taskID</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxFormat(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxFormat", new object[]{ projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">object projectName</param>
		/// <param name="taskID">object taskID</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">optional NetOffice.MSProjectApi.Enums.PjColor BorderColor = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxFormat(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxFormat", new object[]{ projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">object projectName</param>
		/// <param name="taskID">object taskID</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">optional NetOffice.MSProjectApi.Enums.PjColor BorderColor = -1</param>
		/// <param name="borderWidth">object borderWidth</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxFormat(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxFormat", new object[]{ projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">object projectName</param>
		/// <param name="taskID">object taskID</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">optional NetOffice.MSProjectApi.Enums.PjColor BorderColor = -1</param>
		/// <param name="borderWidth">object borderWidth</param>
		/// <param name="backgroundColor">optional NetOffice.MSProjectApi.Enums.PjColor BackgroundColor = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxFormat(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth, object backgroundColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxFormat", new object[]{ projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">object projectName</param>
		/// <param name="taskID">object taskID</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">optional NetOffice.MSProjectApi.Enums.PjColor BorderColor = -1</param>
		/// <param name="borderWidth">object borderWidth</param>
		/// <param name="backgroundColor">optional NetOffice.MSProjectApi.Enums.PjColor BackgroundColor = -1</param>
		/// <param name="backgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern BackgroundPattern = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxFormat(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth, object backgroundColor, object backgroundPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxFormat", new object[]{ projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor, backgroundPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BarBoxFormat()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BarBoxFormat");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="serverURL">object serverURL</param>
		/// <param name="name">object name</param>
		/// <param name="authenticationType">optional NetOffice.MSProjectApi.Enums.PjAuthentication AuthenticationType = 0</param>
		/// <param name="accountType">optional NetOffice.MSProjectApi.Enums.PjAccountType AccountType = 0</param>
		/// <param name="showDialog">optional object showDialog</param>
		/// <param name="email">optional object email</param>
		/// <param name="windowsAccount">optional object windowsAccount</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CreateWebAccount(object serverURL, object name, object authenticationType, object accountType, object showDialog, object email, object windowsAccount)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateWebAccount", new object[]{ serverURL, name, authenticationType, accountType, showDialog, email, windowsAccount });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="serverURL">object serverURL</param>
		/// <param name="name">object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CreateWebAccount(object serverURL, object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateWebAccount", serverURL, name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="serverURL">object serverURL</param>
		/// <param name="name">object name</param>
		/// <param name="authenticationType">optional NetOffice.MSProjectApi.Enums.PjAuthentication AuthenticationType = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CreateWebAccount(object serverURL, object name, object authenticationType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateWebAccount", serverURL, name, authenticationType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="serverURL">object serverURL</param>
		/// <param name="name">object name</param>
		/// <param name="authenticationType">optional NetOffice.MSProjectApi.Enums.PjAuthentication AuthenticationType = 0</param>
		/// <param name="accountType">optional NetOffice.MSProjectApi.Enums.PjAccountType AccountType = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CreateWebAccount(object serverURL, object name, object authenticationType, object accountType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateWebAccount", serverURL, name, authenticationType, accountType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="serverURL">object serverURL</param>
		/// <param name="name">object name</param>
		/// <param name="authenticationType">optional NetOffice.MSProjectApi.Enums.PjAuthentication AuthenticationType = 0</param>
		/// <param name="accountType">optional NetOffice.MSProjectApi.Enums.PjAccountType AccountType = 0</param>
		/// <param name="showDialog">optional object showDialog</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CreateWebAccount(object serverURL, object name, object authenticationType, object accountType, object showDialog)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateWebAccount", new object[]{ serverURL, name, authenticationType, accountType, showDialog });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="serverURL">object serverURL</param>
		/// <param name="name">object name</param>
		/// <param name="authenticationType">optional NetOffice.MSProjectApi.Enums.PjAuthentication AuthenticationType = 0</param>
		/// <param name="accountType">optional NetOffice.MSProjectApi.Enums.PjAccountType AccountType = 0</param>
		/// <param name="showDialog">optional object showDialog</param>
		/// <param name="email">optional object email</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CreateWebAccount(object serverURL, object name, object authenticationType, object accountType, object showDialog, object email)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateWebAccount", new object[]{ serverURL, name, authenticationType, accountType, showDialog, email });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="action">NetOffice.MSProjectApi.Enums.PjDataTemplate action</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="overwrite">optional object overwrite</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxDataTemplate(string name, NetOffice.MSProjectApi.Enums.PjDataTemplate action, object newName, object overwrite)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxDataTemplate", name, action, newName, overwrite);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="action">NetOffice.MSProjectApi.Enums.PjDataTemplate action</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxDataTemplate(string name, NetOffice.MSProjectApi.Enums.PjDataTemplate action)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxDataTemplate", name, action);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="action">NetOffice.MSProjectApi.Enums.PjDataTemplate action</param>
		/// <param name="newName">optional object newName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxDataTemplate(string name, NetOffice.MSProjectApi.Enums.PjDataTemplate action, object newName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxDataTemplate", name, action, newName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cellRows">optional object cellRows</param>
		/// <param name="cellColumns">optional object cellColumns</param>
		/// <param name="cellWidth">optional object cellWidth</param>
		/// <param name="mergeCells">optional object mergeCells</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxCellLayout(string name, object cellRows, object cellColumns, object cellWidth, object mergeCells)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellLayout", new object[]{ name, cellRows, cellColumns, cellWidth, mergeCells });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxCellLayout(string name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellLayout", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cellRows">optional object cellRows</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxCellLayout(string name, object cellRows)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellLayout", name, cellRows);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cellRows">optional object cellRows</param>
		/// <param name="cellColumns">optional object cellColumns</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxCellLayout(string name, object cellRows, object cellColumns)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellLayout", name, cellRows, cellColumns);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cellRows">optional object cellRows</param>
		/// <param name="cellColumns">optional object cellColumns</param>
		/// <param name="cellWidth">optional object cellWidth</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxCellLayout(string name, object cellRows, object cellColumns, object cellWidth)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellLayout", name, cellRows, cellColumns, cellWidth);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cell">NetOffice.MSProjectApi.Enums.PjCell cell</param>
		/// <param name="fieldName">optional NetOffice.MSProjectApi.Enums.PjField FieldName = -1</param>
		/// <param name="font">object font</param>
		/// <param name="fontSize">object fontSize</param>
		/// <param name="fontColor">optional NetOffice.MSProjectApi.Enums.PjColor FontColor = -1</param>
		/// <param name="bold">object bold</param>
		/// <param name="italic">object italic</param>
		/// <param name="underline">object underline</param>
		/// <param name="horizontalAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment HorizontalAlignment = -1</param>
		/// <param name="verticalAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment VerticalAlignment = -1</param>
		/// <param name="textLineLimit">object textLineLimit</param>
		/// <param name="showLabel">object showLabel</param>
		/// <param name="label">object label</param>
		/// <param name="dateFormat">optional NetOffice.MSProjectApi.Enums.PjDateFormat DateFormat = -1</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxCellEdit(string name, NetOffice.MSProjectApi.Enums.PjCell cell, object fieldName, object font, object fontSize, object fontColor, object bold, object italic, object underline, object horizontalAlignment, object verticalAlignment, object textLineLimit, object showLabel, object label, object dateFormat)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellEdit", new object[]{ name, cell, fieldName, font, fontSize, fontColor, bold, italic, underline, horizontalAlignment, verticalAlignment, textLineLimit, showLabel, label, dateFormat });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cell">NetOffice.MSProjectApi.Enums.PjCell cell</param>
		/// <param name="fieldName">optional NetOffice.MSProjectApi.Enums.PjField FieldName = -1</param>
		/// <param name="font">object font</param>
		/// <param name="fontSize">object fontSize</param>
		/// <param name="fontColor">optional NetOffice.MSProjectApi.Enums.PjColor FontColor = -1</param>
		/// <param name="bold">object bold</param>
		/// <param name="italic">object italic</param>
		/// <param name="underline">object underline</param>
		/// <param name="horizontalAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment HorizontalAlignment = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxCellEdit(string name, NetOffice.MSProjectApi.Enums.PjCell cell, object fieldName, object font, object fontSize, object fontColor, object bold, object italic, object underline, object horizontalAlignment)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellEdit", new object[]{ name, cell, fieldName, font, fontSize, fontColor, bold, italic, underline, horizontalAlignment });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cell">NetOffice.MSProjectApi.Enums.PjCell cell</param>
		/// <param name="fieldName">optional NetOffice.MSProjectApi.Enums.PjField FieldName = -1</param>
		/// <param name="font">object font</param>
		/// <param name="fontSize">object fontSize</param>
		/// <param name="fontColor">optional NetOffice.MSProjectApi.Enums.PjColor FontColor = -1</param>
		/// <param name="bold">object bold</param>
		/// <param name="italic">object italic</param>
		/// <param name="underline">object underline</param>
		/// <param name="horizontalAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment HorizontalAlignment = -1</param>
		/// <param name="verticalAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment VerticalAlignment = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxCellEdit(string name, NetOffice.MSProjectApi.Enums.PjCell cell, object fieldName, object font, object fontSize, object fontColor, object bold, object italic, object underline, object horizontalAlignment, object verticalAlignment)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellEdit", new object[]{ name, cell, fieldName, font, fontSize, fontColor, bold, italic, underline, horizontalAlignment, verticalAlignment });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cell">NetOffice.MSProjectApi.Enums.PjCell cell</param>
		/// <param name="fieldName">optional NetOffice.MSProjectApi.Enums.PjField FieldName = -1</param>
		/// <param name="font">object font</param>
		/// <param name="fontSize">object fontSize</param>
		/// <param name="fontColor">optional NetOffice.MSProjectApi.Enums.PjColor FontColor = -1</param>
		/// <param name="bold">object bold</param>
		/// <param name="italic">object italic</param>
		/// <param name="underline">object underline</param>
		/// <param name="horizontalAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment HorizontalAlignment = -1</param>
		/// <param name="verticalAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment VerticalAlignment = -1</param>
		/// <param name="textLineLimit">object textLineLimit</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxCellEdit(string name, NetOffice.MSProjectApi.Enums.PjCell cell, object fieldName, object font, object fontSize, object fontColor, object bold, object italic, object underline, object horizontalAlignment, object verticalAlignment, object textLineLimit)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellEdit", new object[]{ name, cell, fieldName, font, fontSize, fontColor, bold, italic, underline, horizontalAlignment, verticalAlignment, textLineLimit });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cell">NetOffice.MSProjectApi.Enums.PjCell cell</param>
		/// <param name="fieldName">optional NetOffice.MSProjectApi.Enums.PjField FieldName = -1</param>
		/// <param name="font">object font</param>
		/// <param name="fontSize">object fontSize</param>
		/// <param name="fontColor">optional NetOffice.MSProjectApi.Enums.PjColor FontColor = -1</param>
		/// <param name="bold">object bold</param>
		/// <param name="italic">object italic</param>
		/// <param name="underline">object underline</param>
		/// <param name="horizontalAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment HorizontalAlignment = -1</param>
		/// <param name="verticalAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment VerticalAlignment = -1</param>
		/// <param name="textLineLimit">object textLineLimit</param>
		/// <param name="showLabel">object showLabel</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxCellEdit(string name, NetOffice.MSProjectApi.Enums.PjCell cell, object fieldName, object font, object fontSize, object fontColor, object bold, object italic, object underline, object horizontalAlignment, object verticalAlignment, object textLineLimit, object showLabel)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellEdit", new object[]{ name, cell, fieldName, font, fontSize, fontColor, bold, italic, underline, horizontalAlignment, verticalAlignment, textLineLimit, showLabel });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cell">NetOffice.MSProjectApi.Enums.PjCell cell</param>
		/// <param name="fieldName">optional NetOffice.MSProjectApi.Enums.PjField FieldName = -1</param>
		/// <param name="font">object font</param>
		/// <param name="fontSize">object fontSize</param>
		/// <param name="fontColor">optional NetOffice.MSProjectApi.Enums.PjColor FontColor = -1</param>
		/// <param name="bold">object bold</param>
		/// <param name="italic">object italic</param>
		/// <param name="underline">object underline</param>
		/// <param name="horizontalAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment HorizontalAlignment = -1</param>
		/// <param name="verticalAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment VerticalAlignment = -1</param>
		/// <param name="textLineLimit">object textLineLimit</param>
		/// <param name="showLabel">object showLabel</param>
		/// <param name="label">object label</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxCellEdit(string name, NetOffice.MSProjectApi.Enums.PjCell cell, object fieldName, object font, object fontSize, object fontColor, object bold, object italic, object underline, object horizontalAlignment, object verticalAlignment, object textLineLimit, object showLabel, object label)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellEdit", new object[]{ name, cell, fieldName, font, fontSize, fontColor, bold, italic, underline, horizontalAlignment, verticalAlignment, textLineLimit, showLabel, label });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="showDialog">optional object showDialog</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceWindowsAccount(object name, object showDialog)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceWindowsAccount", name, showDialog);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceWindowsAccount()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceWindowsAccount");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceWindowsAccount(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceWindowsAccount", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="unit">optional object unit</param>
		/// <param name="rows">optional object rows</param>
		/// <param name="useUniqueID">optional object useUniqueID</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetRowHeight(object unit, object rows, object useUniqueID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetRowHeight", unit, rows, useUniqueID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetRowHeight()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetRowHeight");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="unit">optional object unit</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetRowHeight(object unit)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetRowHeight", unit);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="unit">optional object unit</param>
		/// <param name="rows">optional object rows</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetRowHeight(object unit, object rows)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetRowHeight", unit, rows);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ComAddInsDialog()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ComAddInsDialog");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MacroSecurity()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MacroSecurity");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LayoutSelectionNow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LayoutSelectionNow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlign Alignment = -1</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxAlign(object alignment)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxAlign", alignment);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxAlign()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxAlign");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ConvertHangulToHanja()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ConvertHangulToHanja");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="embedProjectFile">optional object embedProjectFile</param>
		/// <param name="onlyRegisterProject">optional object onlyRegisterProject</param>
		/// <param name="waitForCompletion">optional object waitForCompletion</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateProjectToWeb(object serverURL, object embedProjectFile, object onlyRegisterProject, object waitForCompletion)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateProjectToWeb", serverURL, embedProjectFile, onlyRegisterProject, waitForCompletion);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateProjectToWeb()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateProjectToWeb");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="serverURL">optional object serverURL</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateProjectToWeb(object serverURL)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateProjectToWeb", serverURL);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="embedProjectFile">optional object embedProjectFile</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateProjectToWeb(object serverURL, object embedProjectFile)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateProjectToWeb", serverURL, embedProjectFile);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="serverURL">optional object serverURL</param>
		/// <param name="embedProjectFile">optional object embedProjectFile</param>
		/// <param name="onlyRegisterProject">optional object onlyRegisterProject</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool UpdateProjectToWeb(object serverURL, object embedProjectFile, object onlyRegisterProject)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UpdateProjectToWeb", serverURL, embedProjectFile, onlyRegisterProject);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="attribute">optional NetOffice.MSProjectApi.Enums.PjCustomFieldAttribute Attribute = -1</param>
		/// <param name="summaryCalc">optional NetOffice.MSProjectApi.Enums.PjSummaryCalc SummaryCalc = -1</param>
		/// <param name="graphicalIndicators">optional object graphicalIndicators</param>
		/// <param name="required">optional object required</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldProperties(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object attribute, object summaryCalc, object graphicalIndicators, object required)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldProperties", new object[]{ fieldID, attribute, summaryCalc, graphicalIndicators, required });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldProperties(NetOffice.MSProjectApi.Enums.PjCustomField fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldProperties", fieldID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="attribute">optional NetOffice.MSProjectApi.Enums.PjCustomFieldAttribute Attribute = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldProperties(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object attribute)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldProperties", fieldID, attribute);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="attribute">optional NetOffice.MSProjectApi.Enums.PjCustomFieldAttribute Attribute = -1</param>
		/// <param name="summaryCalc">optional NetOffice.MSProjectApi.Enums.PjSummaryCalc SummaryCalc = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldProperties(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object attribute, object summaryCalc)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldProperties", fieldID, attribute, summaryCalc);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="attribute">optional NetOffice.MSProjectApi.Enums.PjCustomFieldAttribute Attribute = -1</param>
		/// <param name="summaryCalc">optional NetOffice.MSProjectApi.Enums.PjSummaryCalc SummaryCalc = -1</param>
		/// <param name="graphicalIndicators">optional object graphicalIndicators</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldProperties(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object attribute, object summaryCalc, object graphicalIndicators)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldProperties", fieldID, attribute, summaryCalc, graphicalIndicators);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="formula">optional object formula</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldSetFormula(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object formula)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldSetFormula", fieldID, formula);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldSetFormula(NetOffice.MSProjectApi.Enums.PjCustomField fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldSetFormula", fieldID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="test">NetOffice.MSProjectApi.Enums.PjComparison test</param>
		/// <param name="value">string value</param>
		/// <param name="indicatorID">NetOffice.MSProjectApi.Enums.PjIndicator indicatorID</param>
		/// <param name="criteriaList">optional NetOffice.MSProjectApi.Enums.PjCriteriaList CriteriaList = 0</param>
		/// <param name="index">optional object index</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldIndicatorAdd(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, NetOffice.MSProjectApi.Enums.PjComparison test, string value, NetOffice.MSProjectApi.Enums.PjIndicator indicatorID, object criteriaList, object index)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldIndicatorAdd", new object[]{ fieldID, test, value, indicatorID, criteriaList, index });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="test">NetOffice.MSProjectApi.Enums.PjComparison test</param>
		/// <param name="value">string value</param>
		/// <param name="indicatorID">NetOffice.MSProjectApi.Enums.PjIndicator indicatorID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldIndicatorAdd(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, NetOffice.MSProjectApi.Enums.PjComparison test, string value, NetOffice.MSProjectApi.Enums.PjIndicator indicatorID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldIndicatorAdd", fieldID, test, value, indicatorID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="test">NetOffice.MSProjectApi.Enums.PjComparison test</param>
		/// <param name="value">string value</param>
		/// <param name="indicatorID">NetOffice.MSProjectApi.Enums.PjIndicator indicatorID</param>
		/// <param name="criteriaList">optional NetOffice.MSProjectApi.Enums.PjCriteriaList CriteriaList = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldIndicatorAdd(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, NetOffice.MSProjectApi.Enums.PjComparison test, string value, NetOffice.MSProjectApi.Enums.PjIndicator indicatorID, object criteriaList)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldIndicatorAdd", new object[]{ fieldID, test, value, indicatorID, criteriaList });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="summaryInheritsNonsummary">optional object summaryInheritsNonsummary</param>
		/// <param name="projectInheritsSummary">optional object projectInheritsSummary</param>
		/// <param name="showToolTips">optional object showToolTips</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldIndicators(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object summaryInheritsNonsummary, object projectInheritsSummary, object showToolTips)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldIndicators", fieldID, summaryInheritsNonsummary, projectInheritsSummary, showToolTips);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldIndicators(NetOffice.MSProjectApi.Enums.PjCustomField fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldIndicators", fieldID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="summaryInheritsNonsummary">optional object summaryInheritsNonsummary</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldIndicators(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object summaryInheritsNonsummary)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldIndicators", fieldID, summaryInheritsNonsummary);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="summaryInheritsNonsummary">optional object summaryInheritsNonsummary</param>
		/// <param name="projectInheritsSummary">optional object projectInheritsSummary</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldIndicators(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object summaryInheritsNonsummary, object projectInheritsSummary)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldIndicators", fieldID, summaryInheritsNonsummary, projectInheritsSummary);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="index">Int16 index</param>
		/// <param name="criteriaList">optional NetOffice.MSProjectApi.Enums.PjCriteriaList CriteriaList = 0</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldIndicatorDelete(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, Int16 index, object criteriaList)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldIndicatorDelete", fieldID, index, criteriaList);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="index">Int16 index</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldIndicatorDelete(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, Int16 index)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldIndicatorDelete", fieldID, index);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="listDefault">object listDefault</param>
		/// <param name="defaultValue">object defaultValue</param>
		/// <param name="restrictToList">object restrictToList</param>
		/// <param name="appendNew">object appendNew</param>
		/// <param name="promptOnNew">object promptOnNew</param>
		/// <param name="displayOrder">optional NetOffice.MSProjectApi.Enums.PjListOrder DisplayOrder = -1</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldValueList(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object listDefault, object defaultValue, object restrictToList, object appendNew, object promptOnNew, object displayOrder)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldValueList", new object[]{ fieldID, listDefault, defaultValue, restrictToList, appendNew, promptOnNew, displayOrder });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="listDefault">object listDefault</param>
		/// <param name="defaultValue">object defaultValue</param>
		/// <param name="restrictToList">object restrictToList</param>
		/// <param name="appendNew">object appendNew</param>
		/// <param name="promptOnNew">object promptOnNew</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldValueList(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object listDefault, object defaultValue, object restrictToList, object appendNew, object promptOnNew)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldValueList", new object[]{ fieldID, listDefault, defaultValue, restrictToList, appendNew, promptOnNew });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="value">optional object value</param>
		/// <param name="description">optional object description</param>
		/// <param name="phonetic">optional object phonetic</param>
		/// <param name="index">optional object index</param>
		/// <param name="fieldDefault">optional object fieldDefault</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldValueListAdd(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object value, object description, object phonetic, object index, object fieldDefault)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldValueListAdd", new object[]{ fieldID, value, description, phonetic, index, fieldDefault });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldValueListAdd(NetOffice.MSProjectApi.Enums.PjCustomField fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldValueListAdd", fieldID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="value">optional object value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldValueListAdd(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object value)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldValueListAdd", fieldID, value);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="value">optional object value</param>
		/// <param name="description">optional object description</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldValueListAdd(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object value, object description)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldValueListAdd", fieldID, value, description);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="value">optional object value</param>
		/// <param name="description">optional object description</param>
		/// <param name="phonetic">optional object phonetic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldValueListAdd(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object value, object description, object phonetic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldValueListAdd", fieldID, value, description, phonetic);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="value">optional object value</param>
		/// <param name="description">optional object description</param>
		/// <param name="phonetic">optional object phonetic</param>
		/// <param name="index">optional object index</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldValueListAdd(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object value, object description, object phonetic, object index)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldValueListAdd", new object[]{ fieldID, value, description, phonetic, index });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="index">Int16 index</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldValueListDelete(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, Int16 index)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldValueListDelete", fieldID, index);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		/// <param name="showSummaryTasks">object showSummaryTasks</param>
		/// <param name="viewBackgroundColor">optional NetOffice.MSProjectApi.Enums.PjColor ViewBackgroundColor = -1</param>
		/// <param name="viewBackgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern ViewBackgroundPattern = -1</param>
		/// <param name="showProgressMarks">optional object showProgressMarks</param>
		/// <param name="showPageBreaks">optional object showPageBreaks</param>
		/// <param name="showIDOnly">optional object showIDOnly</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLayout(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks, object showSummaryTasks, object viewBackgroundColor, object viewBackgroundPattern, object showProgressMarks, object showPageBreaks, object showIDOnly)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayout", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor, viewBackgroundPattern, showProgressMarks, showPageBreaks, showIDOnly });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLayout(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayout", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLayout(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayout", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLayout(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayout", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLayout(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayout", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLayout(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayout", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLayout(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayout", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		/// <param name="showSummaryTasks">object showSummaryTasks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLayout(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks, object showSummaryTasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayout", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		/// <param name="showSummaryTasks">object showSummaryTasks</param>
		/// <param name="viewBackgroundColor">optional NetOffice.MSProjectApi.Enums.PjColor ViewBackgroundColor = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLayout(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks, object showSummaryTasks, object viewBackgroundColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayout", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		/// <param name="showSummaryTasks">object showSummaryTasks</param>
		/// <param name="viewBackgroundColor">optional NetOffice.MSProjectApi.Enums.PjColor ViewBackgroundColor = -1</param>
		/// <param name="viewBackgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern ViewBackgroundPattern = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLayout(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks, object showSummaryTasks, object viewBackgroundColor, object viewBackgroundPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayout", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor, viewBackgroundPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		/// <param name="showSummaryTasks">object showSummaryTasks</param>
		/// <param name="viewBackgroundColor">optional NetOffice.MSProjectApi.Enums.PjColor ViewBackgroundColor = -1</param>
		/// <param name="viewBackgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern ViewBackgroundPattern = -1</param>
		/// <param name="showProgressMarks">optional object showProgressMarks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLayout(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks, object showSummaryTasks, object viewBackgroundColor, object viewBackgroundPattern, object showProgressMarks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayout", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor, viewBackgroundPattern, showProgressMarks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		/// <param name="showSummaryTasks">object showSummaryTasks</param>
		/// <param name="viewBackgroundColor">optional NetOffice.MSProjectApi.Enums.PjColor ViewBackgroundColor = -1</param>
		/// <param name="viewBackgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern ViewBackgroundPattern = -1</param>
		/// <param name="showProgressMarks">optional object showProgressMarks</param>
		/// <param name="showPageBreaks">optional object showPageBreaks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLayout(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks, object showSummaryTasks, object viewBackgroundColor, object viewBackgroundPattern, object showProgressMarks, object showPageBreaks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayout", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor, viewBackgroundPattern, showProgressMarks, showPageBreaks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="style">optional NetOffice.MSProjectApi.Enums.PjLinkStyle Style = -1</param>
		/// <param name="showArrows">object showArrows</param>
		/// <param name="showLabels">object showLabels</param>
		/// <param name="colorMode">optional NetOffice.MSProjectApi.Enums.PjLinkColorMode ColorMode = -1</param>
		/// <param name="criticalColor">optional NetOffice.MSProjectApi.Enums.PjColor CriticalColor = 1</param>
		/// <param name="noncriticalColor">optional NetOffice.MSProjectApi.Enums.PjColor NoncriticalColor = 0</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLinks(object style, object showArrows, object showLabels, object colorMode, object criticalColor, object noncriticalColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinks", new object[]{ style, showArrows, showLabels, colorMode, criticalColor, noncriticalColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="style">optional NetOffice.MSProjectApi.Enums.PjLinkStyle Style = -1</param>
		/// <param name="showArrows">object showArrows</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLinks(object style, object showArrows)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinks", style, showArrows);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="style">optional NetOffice.MSProjectApi.Enums.PjLinkStyle Style = -1</param>
		/// <param name="showArrows">object showArrows</param>
		/// <param name="showLabels">object showLabels</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLinks(object style, object showArrows, object showLabels)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinks", style, showArrows, showLabels);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="style">optional NetOffice.MSProjectApi.Enums.PjLinkStyle Style = -1</param>
		/// <param name="showArrows">object showArrows</param>
		/// <param name="showLabels">object showLabels</param>
		/// <param name="colorMode">optional NetOffice.MSProjectApi.Enums.PjLinkColorMode ColorMode = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLinks(object style, object showArrows, object showLabels, object colorMode)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinks", style, showArrows, showLabels, colorMode);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="style">optional NetOffice.MSProjectApi.Enums.PjLinkStyle Style = -1</param>
		/// <param name="showArrows">object showArrows</param>
		/// <param name="showLabels">object showLabels</param>
		/// <param name="colorMode">optional NetOffice.MSProjectApi.Enums.PjLinkColorMode ColorMode = -1</param>
		/// <param name="criticalColor">optional NetOffice.MSProjectApi.Enums.PjColor CriticalColor = 1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLinks(object style, object showArrows, object showLabels, object colorMode, object criticalColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinks", new object[]{ style, showArrows, showLabels, colorMode, criticalColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SummaryTasksShow(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SummaryTasksShow", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SummaryTasksShow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SummaryTasksShow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxProgressMarksShow(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxProgressMarksShow", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxProgressMarksShow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxProgressMarksShow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLinkLabelsShow(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinkLabelsShow", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLinkLabelsShow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinkLabelsShow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="straightLinks">optional object straightLinks</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLinkStyleToggle(object straightLinks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinkStyleToggle", straightLinks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxLinkStyleToggle()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinkStyleToggle");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LayoutRelatedNow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LayoutRelatedNow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional NetOffice.MSProjectApi.Enums.PjBoxSet Action = 4</param>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="xPosition">optional object xPosition</param>
		/// <param name="yPosition">optional object yPosition</param>
		/// <param name="projectName">optional object projectName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxSet(object action, object taskID, object xPosition, object yPosition, object projectName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxSet", new object[]{ action, taskID, xPosition, yPosition, projectName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxSet()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxSet");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional NetOffice.MSProjectApi.Enums.PjBoxSet Action = 4</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxSet(object action)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxSet", action);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional NetOffice.MSProjectApi.Enums.PjBoxSet Action = 4</param>
		/// <param name="taskID">optional object taskID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxSet(object action, object taskID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxSet", action, taskID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional NetOffice.MSProjectApi.Enums.PjBoxSet Action = 4</param>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="xPosition">optional object xPosition</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxSet(object action, object taskID, object xPosition)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxSet", action, taskID, xPosition);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="action">optional NetOffice.MSProjectApi.Enums.PjBoxSet Action = 4</param>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="xPosition">optional object xPosition</param>
		/// <param name="yPosition">optional object yPosition</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool BoxSet(object action, object taskID, object xPosition, object yPosition)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxSet", action, taskID, xPosition, yPosition);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showColumns">optional object showColumns</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetSplitBar(object showColumns)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetSplitBar", showColumns);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetSplitBar()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetSplitBar");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="titleHeight">optional object titleHeight</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetTitleRowHeight(object titleHeight)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTitleRowHeight", titleHeight);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SetTitleRowHeight()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTitleRowHeight");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="goalArea">Int16 goalArea</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool GoalAreaChange(Int16 goalArea)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GoalAreaChange", goalArea);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SidepaneToggle(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SidepaneToggle", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SidepaneToggle()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SidepaneToggle");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SearchFiles()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SearchFiles");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ImportOutlookTasks()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ImportOutlookTasks");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		/// <param name="displayProjectGuide">optional object displayProjectGuide</param>
		/// <param name="projectGuideUseDefaultFunctionalLayoutPage">optional object projectGuideUseDefaultFunctionalLayoutPage</param>
		/// <param name="projectGuideFunctionalLayoutPage">optional object projectGuideFunctionalLayoutPage</param>
		/// <param name="projectGuideUseDefaultContent">optional object projectGuideUseDefaultContent</param>
		/// <param name="projectGuideContent">optional object projectGuideContent</param>
		/// <param name="setAsDefaults">optional object setAsDefaults</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterface(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide, object projectGuideUseDefaultFunctionalLayoutPage, object projectGuideFunctionalLayoutPage, object projectGuideUseDefaultContent, object projectGuideContent, object setAsDefaults)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterface", new object[]{ showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide, projectGuideUseDefaultFunctionalLayoutPage, projectGuideFunctionalLayoutPage, projectGuideUseDefaultContent, projectGuideContent, setAsDefaults });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterface()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterface");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterface(object showResourceAssignmentIndicators)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterface", showResourceAssignmentIndicators);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterface(object showResourceAssignmentIndicators, object showEditToStartFinishDates)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterface", showResourceAssignmentIndicators, showEditToStartFinishDates);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterface(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterface", showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterface(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterface", showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		/// <param name="displayProjectGuide">optional object displayProjectGuide</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterface(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterface", new object[]{ showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		/// <param name="displayProjectGuide">optional object displayProjectGuide</param>
		/// <param name="projectGuideUseDefaultFunctionalLayoutPage">optional object projectGuideUseDefaultFunctionalLayoutPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterface(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide, object projectGuideUseDefaultFunctionalLayoutPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterface", new object[]{ showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide, projectGuideUseDefaultFunctionalLayoutPage });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		/// <param name="displayProjectGuide">optional object displayProjectGuide</param>
		/// <param name="projectGuideUseDefaultFunctionalLayoutPage">optional object projectGuideUseDefaultFunctionalLayoutPage</param>
		/// <param name="projectGuideFunctionalLayoutPage">optional object projectGuideFunctionalLayoutPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterface(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide, object projectGuideUseDefaultFunctionalLayoutPage, object projectGuideFunctionalLayoutPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterface", new object[]{ showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide, projectGuideUseDefaultFunctionalLayoutPage, projectGuideFunctionalLayoutPage });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		/// <param name="displayProjectGuide">optional object displayProjectGuide</param>
		/// <param name="projectGuideUseDefaultFunctionalLayoutPage">optional object projectGuideUseDefaultFunctionalLayoutPage</param>
		/// <param name="projectGuideFunctionalLayoutPage">optional object projectGuideFunctionalLayoutPage</param>
		/// <param name="projectGuideUseDefaultContent">optional object projectGuideUseDefaultContent</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterface(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide, object projectGuideUseDefaultFunctionalLayoutPage, object projectGuideFunctionalLayoutPage, object projectGuideUseDefaultContent)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterface", new object[]{ showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide, projectGuideUseDefaultFunctionalLayoutPage, projectGuideFunctionalLayoutPage, projectGuideUseDefaultContent });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		/// <param name="displayProjectGuide">optional object displayProjectGuide</param>
		/// <param name="projectGuideUseDefaultFunctionalLayoutPage">optional object projectGuideUseDefaultFunctionalLayoutPage</param>
		/// <param name="projectGuideFunctionalLayoutPage">optional object projectGuideFunctionalLayoutPage</param>
		/// <param name="projectGuideUseDefaultContent">optional object projectGuideUseDefaultContent</param>
		/// <param name="projectGuideContent">optional object projectGuideContent</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterface(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide, object projectGuideUseDefaultFunctionalLayoutPage, object projectGuideFunctionalLayoutPage, object projectGuideUseDefaultContent, object projectGuideContent)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterface", new object[]{ showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide, projectGuideUseDefaultFunctionalLayoutPage, projectGuideFunctionalLayoutPage, projectGuideUseDefaultContent, projectGuideContent });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="iD">Int16 iD</param>
		/// <param name="isGoalArea">optional object isGoalArea</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SidepaneTaskChange(Int16 iD, object isGoalArea)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SidepaneTaskChange", iD, isGoalArea);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="iD">Int16 iD</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SidepaneTaskChange(Int16 iD)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SidepaneTaskChange", iD);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="serverURL">optional object serverURL</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ImportResourceList(object serverURL)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ImportResourceList", serverURL);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ImportResourceList()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ImportResourceList");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectList">object projectList</param>
		/// <param name="poolOption">optional NetOffice.MSProjectApi.Enums.PjResSubstitutionPoolOption PoolOption = 0</param>
		/// <param name="rBSorResourceList">optional object rBSorResourceList</param>
		/// <param name="freezeHorizonDate">optional object freezeHorizonDate</param>
		/// <param name="updateProjects">optional object updateProjects</param>
		/// <param name="saveReport">optional object saveReport</param>
		/// <param name="path">optional object path</param>
		/// <param name="assignProposedResources">optional object assignProposedResources</param>
		/// <param name="levelProposedBookings">optional object levelProposedBookings</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResSubstitutionWizard(object projectList, object poolOption, object rBSorResourceList, object freezeHorizonDate, object updateProjects, object saveReport, object path, object assignProposedResources, object levelProposedBookings)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResSubstitutionWizard", new object[]{ projectList, poolOption, rBSorResourceList, freezeHorizonDate, updateProjects, saveReport, path, assignProposedResources, levelProposedBookings });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectList">object projectList</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResSubstitutionWizard(object projectList)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResSubstitutionWizard", projectList);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectList">object projectList</param>
		/// <param name="poolOption">optional NetOffice.MSProjectApi.Enums.PjResSubstitutionPoolOption PoolOption = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResSubstitutionWizard(object projectList, object poolOption)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResSubstitutionWizard", projectList, poolOption);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectList">object projectList</param>
		/// <param name="poolOption">optional NetOffice.MSProjectApi.Enums.PjResSubstitutionPoolOption PoolOption = 0</param>
		/// <param name="rBSorResourceList">optional object rBSorResourceList</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResSubstitutionWizard(object projectList, object poolOption, object rBSorResourceList)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResSubstitutionWizard", projectList, poolOption, rBSorResourceList);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectList">object projectList</param>
		/// <param name="poolOption">optional NetOffice.MSProjectApi.Enums.PjResSubstitutionPoolOption PoolOption = 0</param>
		/// <param name="rBSorResourceList">optional object rBSorResourceList</param>
		/// <param name="freezeHorizonDate">optional object freezeHorizonDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResSubstitutionWizard(object projectList, object poolOption, object rBSorResourceList, object freezeHorizonDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResSubstitutionWizard", projectList, poolOption, rBSorResourceList, freezeHorizonDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectList">object projectList</param>
		/// <param name="poolOption">optional NetOffice.MSProjectApi.Enums.PjResSubstitutionPoolOption PoolOption = 0</param>
		/// <param name="rBSorResourceList">optional object rBSorResourceList</param>
		/// <param name="freezeHorizonDate">optional object freezeHorizonDate</param>
		/// <param name="updateProjects">optional object updateProjects</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResSubstitutionWizard(object projectList, object poolOption, object rBSorResourceList, object freezeHorizonDate, object updateProjects)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResSubstitutionWizard", new object[]{ projectList, poolOption, rBSorResourceList, freezeHorizonDate, updateProjects });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectList">object projectList</param>
		/// <param name="poolOption">optional NetOffice.MSProjectApi.Enums.PjResSubstitutionPoolOption PoolOption = 0</param>
		/// <param name="rBSorResourceList">optional object rBSorResourceList</param>
		/// <param name="freezeHorizonDate">optional object freezeHorizonDate</param>
		/// <param name="updateProjects">optional object updateProjects</param>
		/// <param name="saveReport">optional object saveReport</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResSubstitutionWizard(object projectList, object poolOption, object rBSorResourceList, object freezeHorizonDate, object updateProjects, object saveReport)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResSubstitutionWizard", new object[]{ projectList, poolOption, rBSorResourceList, freezeHorizonDate, updateProjects, saveReport });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectList">object projectList</param>
		/// <param name="poolOption">optional NetOffice.MSProjectApi.Enums.PjResSubstitutionPoolOption PoolOption = 0</param>
		/// <param name="rBSorResourceList">optional object rBSorResourceList</param>
		/// <param name="freezeHorizonDate">optional object freezeHorizonDate</param>
		/// <param name="updateProjects">optional object updateProjects</param>
		/// <param name="saveReport">optional object saveReport</param>
		/// <param name="path">optional object path</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResSubstitutionWizard(object projectList, object poolOption, object rBSorResourceList, object freezeHorizonDate, object updateProjects, object saveReport, object path)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResSubstitutionWizard", new object[]{ projectList, poolOption, rBSorResourceList, freezeHorizonDate, updateProjects, saveReport, path });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectList">object projectList</param>
		/// <param name="poolOption">optional NetOffice.MSProjectApi.Enums.PjResSubstitutionPoolOption PoolOption = 0</param>
		/// <param name="rBSorResourceList">optional object rBSorResourceList</param>
		/// <param name="freezeHorizonDate">optional object freezeHorizonDate</param>
		/// <param name="updateProjects">optional object updateProjects</param>
		/// <param name="saveReport">optional object saveReport</param>
		/// <param name="path">optional object path</param>
		/// <param name="assignProposedResources">optional object assignProposedResources</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResSubstitutionWizard(object projectList, object poolOption, object rBSorResourceList, object freezeHorizonDate, object updateProjects, object saveReport, object path, object assignProposedResources)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResSubstitutionWizard", new object[]{ projectList, poolOption, rBSorResourceList, freezeHorizonDate, updateProjects, saveReport, path, assignProposedResources });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="eUID">object eUID</param>
		/// <param name="openType">optional NetOffice.MSProjectApi.Enums.PjCheckOutType OpenType = 1</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResourcesOpen(object eUID, object openType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResourcesOpen", eUID, openType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="eUID">object eUID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResourcesOpen(object eUID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResourcesOpen", eUID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="localRUIDs">optional object localRUIDs</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResourcesImport(object localRUIDs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResourcesImport", localRUIDs);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResourcesImport()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResourcesImport");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="eUID">optional object eUID</param>
		/// <param name="rUID">optional object rUID</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResourceGet(object eUID, object rUID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResourceGet", eUID, rUID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResourceGet()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResourceGet");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="eUID">optional object eUID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResourceGet(object eUID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResourceGet", eUID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseProjectImportWizard(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseProjectImportWizard", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseProjectImportWizard()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseProjectImportWizard");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseTeamBuilder()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseTeamBuilder");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="linkFrom">Int32 linkFrom</param>
		/// <param name="linkTo">optional object linkTo</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseCustomOutlineCodeShare(Int32 linkFrom, object linkTo)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseCustomOutlineCodeShare", linkFrom, linkTo);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="linkFrom">Int32 linkFrom</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseCustomOutlineCodeShare(Int32 linkFrom)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseCustomOutlineCodeShare", linkFrom);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseCustomizeFields()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseCustomizeFields");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseGlobalCheckOut()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseGlobalCheckOut");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseProjectProfiles()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseProjectProfiles");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceListOptions">object showResourceListOptions</param>
		/// <param name="resourceListFields">optional NetOffice.MSProjectApi.Enums.PjAssignResourcesListFields ResourceListFields = 2</param>
		/// <param name="useNamedFilter">optional object useNamedFilter</param>
		/// <param name="filterName">optional object filterName</param>
		/// <param name="useAvailableToWorkFilter">optional object useAvailableToWorkFilter</param>
		/// <param name="availableToWork">optional object availableToWork</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceAssignmentDialog(object showResourceListOptions, object resourceListFields, object useNamedFilter, object filterName, object useAvailableToWorkFilter, object availableToWork)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceAssignmentDialog", new object[]{ showResourceListOptions, resourceListFields, useNamedFilter, filterName, useAvailableToWorkFilter, availableToWork });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceListOptions">object showResourceListOptions</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceAssignmentDialog(object showResourceListOptions)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceAssignmentDialog", showResourceListOptions);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceListOptions">object showResourceListOptions</param>
		/// <param name="resourceListFields">optional NetOffice.MSProjectApi.Enums.PjAssignResourcesListFields ResourceListFields = 2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceAssignmentDialog(object showResourceListOptions, object resourceListFields)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceAssignmentDialog", showResourceListOptions, resourceListFields);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceListOptions">object showResourceListOptions</param>
		/// <param name="resourceListFields">optional NetOffice.MSProjectApi.Enums.PjAssignResourcesListFields ResourceListFields = 2</param>
		/// <param name="useNamedFilter">optional object useNamedFilter</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceAssignmentDialog(object showResourceListOptions, object resourceListFields, object useNamedFilter)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceAssignmentDialog", showResourceListOptions, resourceListFields, useNamedFilter);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceListOptions">object showResourceListOptions</param>
		/// <param name="resourceListFields">optional NetOffice.MSProjectApi.Enums.PjAssignResourcesListFields ResourceListFields = 2</param>
		/// <param name="useNamedFilter">optional object useNamedFilter</param>
		/// <param name="filterName">optional object filterName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceAssignmentDialog(object showResourceListOptions, object resourceListFields, object useNamedFilter, object filterName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceAssignmentDialog", showResourceListOptions, resourceListFields, useNamedFilter, filterName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceListOptions">object showResourceListOptions</param>
		/// <param name="resourceListFields">optional NetOffice.MSProjectApi.Enums.PjAssignResourcesListFields ResourceListFields = 2</param>
		/// <param name="useNamedFilter">optional object useNamedFilter</param>
		/// <param name="filterName">optional object filterName</param>
		/// <param name="useAvailableToWorkFilter">optional object useAvailableToWorkFilter</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceAssignmentDialog(object showResourceListOptions, object resourceListFields, object useNamedFilter, object filterName, object useAvailableToWorkFilter)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceAssignmentDialog", new object[]{ showResourceListOptions, resourceListFields, useNamedFilter, filterName, useAvailableToWorkFilter });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="targetPage">string targetPage</param>
		/// <param name="wrapperPage">optional object wrapperPage</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LoadWebBrowserControl(string targetPage, object wrapperPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LoadWebBrowserControl", targetPage, wrapperPage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="targetPage">string targetPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LoadWebBrowserControl(string targetPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LoadWebBrowserControl", targetPage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="save">optional NetOffice.MSProjectApi.Enums.PjSaveType Save = 2</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveOffline(object save)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveOffline", save);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileSaveOffline()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileSaveOffline");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpReference()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpReference");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool HelpWhatsNew()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HelpWhatsNew");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool StopWebBrowserControlNavigation()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "StopWebBrowserControlNavigation");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="backupFileName">optional object backupFileName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseGlobalBackup(object backupFileName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseGlobalBackup", backupFileName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseGlobalBackup()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseGlobalBackup");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="profileName">optional object profileName</param>
		/// <param name="restoreFileName">optional object restoreFileName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseGlobalRestore(object profileName, object restoreFileName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseGlobalRestore", profileName, restoreFileName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseGlobalRestore()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseGlobalRestore");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="profileName">optional object profileName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseGlobalRestore(object profileName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseGlobalRestore", profileName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldName">optional NetOffice.MSProjectApi.Enums.PjSpellingField FieldName = -1</param>
		/// <param name="enableSpellCheck">optional object enableSpellCheck</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SpellCheckField(object fieldName, object enableSpellCheck)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SpellCheckField", fieldName, enableSpellCheck);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SpellCheckField()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SpellCheckField");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldName">optional NetOffice.MSProjectApi.Enums.PjSpellingField FieldName = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SpellCheckField(object fieldName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SpellCheckField", fieldName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool AddResourcesFromProjectServer()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AddResourcesFromProjectServer");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResetTrackingMethod()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResetTrackingMethod");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ServiceOptionsDialog()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ServiceOptionsDialog");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseProjectDelete(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseProjectDelete", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseProjectDelete()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseProjectDelete");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fSaveChanges">optional object fSaveChanges</param>
		/// <param name="comments">optional object comments</param>
		/// <param name="fMakePublic">optional object fMakePublic</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CheckIn(object fSaveChanges, object comments, object fMakePublic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CheckIn", fSaveChanges, comments, fMakePublic);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CheckIn()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CheckIn");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fSaveChanges">optional object fSaveChanges</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CheckIn(object fSaveChanges)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CheckIn", fSaveChanges);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fSaveChanges">optional object fSaveChanges</param>
		/// <param name="comments">optional object comments</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CheckIn(object fSaveChanges, object comments)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CheckIn", fSaveChanges, comments);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CheckOut()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CheckOut");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DocumentLibraryVersionsDialog()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocumentLibraryVersionsDialog");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DisplaySharedWorkspace()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DisplaySharedWorkspace");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="projectName">optional object projectName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseSynchActuals(object projectName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseSynchActuals", projectName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseSynchActuals()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseSynchActuals");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="removeFileProperties">optional object removeFileProperties</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSecurity(object removeFileProperties)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSecurity", removeFileProperties);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSecurity()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSecurity");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SaveSheetSelection()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SaveSheetSelection");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool RestoreSheetSelection()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "RestoreSheetSelection");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="field">Int32 field</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldDelete(Int32 field)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldDelete", field);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="commitmentDate">optional object commitmentDate</param>
		/// <param name="commitmentGuid">optional object commitmentGuid</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ImportCommitment(object commitmentDate, object commitmentGuid)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ImportCommitment", commitmentDate, commitmentGuid);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ImportCommitment()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ImportCommitment");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="commitmentDate">optional object commitmentDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ImportCommitment(object commitmentDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ImportCommitment", commitmentDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SummaryResourceAssignmentsRefresh()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SummaryResourceAssignmentsRefresh");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="uniqueID">optional object uniqueID</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditEnterpriseCalendar(object uniqueID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditEnterpriseCalendar", uniqueID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditEnterpriseCalendar()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditEnterpriseCalendar");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CreateEnterpriseCalendar()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateEnterpriseCalendar");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="targetPage">string targetPage</param>
		/// <param name="wrapperPage">optional object wrapperPage</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LoadWebPaneControl(string targetPage, object wrapperPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LoadWebPaneControl", targetPage, wrapperPage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="targetPage">string targetPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LoadWebPaneControl(string targetPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LoadWebPaneControl", targetPage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ResourceMappingDialog()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceMappingDialog");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="oldName">optional object oldName</param>
		/// <param name="newName">optional object newName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MakeLocalCalendarEnterprise(object oldName, object newName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MakeLocalCalendarEnterprise", oldName, newName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MakeLocalCalendarEnterprise()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MakeLocalCalendarEnterprise");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="oldName">optional object oldName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MakeLocalCalendarEnterprise(object oldName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MakeLocalCalendarEnterprise", oldName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskCustomFields">optional object taskCustomFields</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldMappingDialog(object taskCustomFields)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldMappingDialog", taskCustomFields);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldMappingDialog()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldMappingDialog");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CheckTaskErrors(object taskID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CheckTaskErrors", taskID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CheckTaskErrors()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CheckTaskErrors");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="localRUID">optional object localRUID</param>
		/// <param name="resetImport">optional object resetImport</param>
		/// <param name="checkEnterprise">optional object checkEnterprise</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CheckResourceErrors(object localRUID, object resetImport, object checkEnterprise)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CheckResourceErrors", localRUID, resetImport, checkEnterprise);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CheckResourceErrors()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CheckResourceErrors");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="localRUID">optional object localRUID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CheckResourceErrors(object localRUID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CheckResourceErrors", localRUID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="localRUID">optional object localRUID</param>
		/// <param name="resetImport">optional object resetImport</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CheckResourceErrors(object localRUID, object resetImport)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CheckResourceErrors", localRUID, resetImport);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EditRedo()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditRedo");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="republish">optional object republish</param>
		/// <param name="wssUrl">optional object wssUrl</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Publish(object republish, object wssUrl)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Publish", republish, wssUrl);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Publish()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Publish");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="republish">optional object republish</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Publish(object republish)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Publish", republish);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">optional object fieldID</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="lookupTableName">optional object lookupTableName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MakeFieldEnterprise(object fieldID, object fieldName, object lookupTableName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MakeFieldEnterprise", fieldID, fieldName, lookupTableName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MakeFieldEnterprise()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MakeFieldEnterprise");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">optional object fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MakeFieldEnterprise(object fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MakeFieldEnterprise", fieldID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">optional object fieldID</param>
		/// <param name="fieldName">optional object fieldName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool MakeFieldEnterprise(object fieldID, object fieldName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "MakeFieldEnterprise", fieldID, fieldName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fileName">optional object fileName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SaveForSharing(object fileName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SaveForSharing", fileName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool SaveForSharing()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SaveForSharing");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CacheSettings()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CacheSettings");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CleanupCache()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CleanupCache");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CacheStatus()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CacheStatus");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fOffline">optional object fOffline</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WorkOffline(object fOffline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WorkOffline", fOffline);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool WorkOffline()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WorkOffline");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TaskDrivers()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskDrivers");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ToggleChangeHighlighting()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToggleChangeHighlighting");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="pjVisualReportsTab">optional NetOffice.MSProjectApi.Enums.PjVisualReportsTab PjVisualReportsTab = 0</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReports(object pjVisualReportsTab)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReports", pjVisualReportsTab);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReports()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReports");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="strNamePath">object strNamePath</param>
		/// <param name="pjVisualReportsDataLevel">optional NetOffice.MSProjectApi.Enums.PjVisualReportsDataLevel PjVisualReportsDataLevel = 5</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReportsSaveDatabase(object strNamePath, object pjVisualReportsDataLevel)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReportsSaveDatabase", strNamePath, pjVisualReportsDataLevel);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="strNamePath">object strNamePath</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReportsSaveDatabase(object strNamePath)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReportsSaveDatabase", strNamePath);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="strNamePath">object strNamePath</param>
		/// <param name="pjVisualReportsCubeType">optional NetOffice.MSProjectApi.Enums.PjVisualReportsCubeType PjVisualReportsCubeType = 1</param>
		/// <param name="reportAllFields">object reportAllFields</param>
		/// <param name="pjVisualReportsDataLevel">optional NetOffice.MSProjectApi.Enums.PjVisualReportsDataLevel PjVisualReportsDataLevel = 5</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReportsSaveCube(object strNamePath, object pjVisualReportsCubeType, object reportAllFields, object pjVisualReportsDataLevel)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReportsSaveCube", strNamePath, pjVisualReportsCubeType, reportAllFields, pjVisualReportsDataLevel);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="strNamePath">object strNamePath</param>
		/// <param name="pjVisualReportsCubeType">optional NetOffice.MSProjectApi.Enums.PjVisualReportsCubeType PjVisualReportsCubeType = 1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReportsSaveCube(object strNamePath, object pjVisualReportsCubeType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReportsSaveCube", strNamePath, pjVisualReportsCubeType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="strNamePath">object strNamePath</param>
		/// <param name="pjVisualReportsCubeType">optional NetOffice.MSProjectApi.Enums.PjVisualReportsCubeType PjVisualReportsCubeType = 1</param>
		/// <param name="reportAllFields">object reportAllFields</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReportsSaveCube(object strNamePath, object pjVisualReportsCubeType, object reportAllFields)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReportsSaveCube", strNamePath, pjVisualReportsCubeType, reportAllFields);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="pjVisualReportsTemplateType">optional NetOffice.MSProjectApi.Enums.PjVisualReportsTemplateType PjVisualReportsTemplateType = 1</param>
		/// <param name="pjVisualReportsCubeType">optional NetOffice.MSProjectApi.Enums.PjVisualReportsCubeType PjVisualReportsCubeType = 1</param>
		/// <param name="reportAllFields">object reportAllFields</param>
		/// <param name="pjVisualReportsDataLevel">optional NetOffice.MSProjectApi.Enums.PjVisualReportsDataLevel PjVisualReportsDataLevel = 5</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReportsNewTemplate(object pjVisualReportsTemplateType, object pjVisualReportsCubeType, object reportAllFields, object pjVisualReportsDataLevel)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReportsNewTemplate", pjVisualReportsTemplateType, pjVisualReportsCubeType, reportAllFields, pjVisualReportsDataLevel);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="pjVisualReportsTemplateType">optional NetOffice.MSProjectApi.Enums.PjVisualReportsTemplateType PjVisualReportsTemplateType = 1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReportsNewTemplate(object pjVisualReportsTemplateType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReportsNewTemplate", pjVisualReportsTemplateType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="pjVisualReportsTemplateType">optional NetOffice.MSProjectApi.Enums.PjVisualReportsTemplateType PjVisualReportsTemplateType = 1</param>
		/// <param name="pjVisualReportsCubeType">optional NetOffice.MSProjectApi.Enums.PjVisualReportsCubeType PjVisualReportsCubeType = 1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReportsNewTemplate(object pjVisualReportsTemplateType, object pjVisualReportsCubeType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReportsNewTemplate", pjVisualReportsTemplateType, pjVisualReportsCubeType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="pjVisualReportsTemplateType">optional NetOffice.MSProjectApi.Enums.PjVisualReportsTemplateType PjVisualReportsTemplateType = 1</param>
		/// <param name="pjVisualReportsCubeType">optional NetOffice.MSProjectApi.Enums.PjVisualReportsCubeType PjVisualReportsCubeType = 1</param>
		/// <param name="reportAllFields">object reportAllFields</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReportsNewTemplate(object pjVisualReportsTemplateType, object pjVisualReportsCubeType, object reportAllFields)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReportsNewTemplate", pjVisualReportsTemplateType, pjVisualReportsCubeType, reportAllFields);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="strVisualReportTemplateFile">object strVisualReportTemplateFile</param>
		/// <param name="pjVisualReportsDataLevel">optional NetOffice.MSProjectApi.Enums.PjVisualReportsDataLevel PjVisualReportsDataLevel = 5</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReportsView(object strVisualReportTemplateFile, object pjVisualReportsDataLevel)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReportsView", strVisualReportTemplateFile, pjVisualReportsDataLevel);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="strVisualReportTemplateFile">object strVisualReportTemplateFile</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReportsView(object strVisualReportTemplateFile)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReportsView", strVisualReportTemplateFile);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CommitmentsPane()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CommitmentsPane");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool DependenciesPane()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DependenciesPane");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="strVisualReportTemplateFile">object strVisualReportTemplateFile</param>
		/// <param name="pjVisualReportsDataLevel">optional NetOffice.MSProjectApi.Enums.PjVisualReportsDataLevel PjVisualReportsDataLevel = 5</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReportsEdit(object strVisualReportTemplateFile, object pjVisualReportsDataLevel)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReportsEdit", strVisualReportTemplateFile, pjVisualReportsDataLevel);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="strVisualReportTemplateFile">object strVisualReportTemplateFile</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool VisualReportsEdit(object strVisualReportTemplateFile)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "VisualReportsEdit", strVisualReportTemplateFile);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="readOnly">object readOnly</param>
		/// <param name="merge">object merge</param>
		/// <param name="taskInformation">object taskInformation</param>
		/// <param name="table">object table</param>
		/// <param name="sheet">object sheet</param>
		/// <param name="noAuto">object noAuto</param>
		/// <param name="userID">object userID</param>
		/// <param name="databasePassWord">object databasePassWord</param>
		/// <param name="formatID">object formatID</param>
		/// <param name="map">object map</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		/// <param name="ignoreReadOnlyRecommended">optional object ignoreReadOnlyRecommended</param>
		/// <param name="xMLName">optional object xMLName</param>
		/// <param name="doNotLoadFromEnterprise">optional object doNotLoadFromEnterprise</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileOpenEx(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, object openPool, object password, object writeResPassword, object ignoreReadOnlyRecommended, object xMLName, object doNotLoadFromEnterprise)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpenEx", new object[]{ name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool, password, writeResPassword, ignoreReadOnlyRecommended, xMLName, doNotLoadFromEnterprise });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="readOnly">object readOnly</param>
		/// <param name="merge">object merge</param>
		/// <param name="taskInformation">object taskInformation</param>
		/// <param name="table">object table</param>
		/// <param name="sheet">object sheet</param>
		/// <param name="noAuto">object noAuto</param>
		/// <param name="userID">object userID</param>
		/// <param name="databasePassWord">object databasePassWord</param>
		/// <param name="formatID">object formatID</param>
		/// <param name="map">object map</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileOpenEx(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpenEx", new object[]{ name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="readOnly">object readOnly</param>
		/// <param name="merge">object merge</param>
		/// <param name="taskInformation">object taskInformation</param>
		/// <param name="table">object table</param>
		/// <param name="sheet">object sheet</param>
		/// <param name="noAuto">object noAuto</param>
		/// <param name="userID">object userID</param>
		/// <param name="databasePassWord">object databasePassWord</param>
		/// <param name="formatID">object formatID</param>
		/// <param name="map">object map</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileOpenEx(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, object openPool)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpenEx", new object[]{ name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="readOnly">object readOnly</param>
		/// <param name="merge">object merge</param>
		/// <param name="taskInformation">object taskInformation</param>
		/// <param name="table">object table</param>
		/// <param name="sheet">object sheet</param>
		/// <param name="noAuto">object noAuto</param>
		/// <param name="userID">object userID</param>
		/// <param name="databasePassWord">object databasePassWord</param>
		/// <param name="formatID">object formatID</param>
		/// <param name="map">object map</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		/// <param name="password">optional object password</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileOpenEx(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, object openPool, object password)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpenEx", new object[]{ name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool, password });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="readOnly">object readOnly</param>
		/// <param name="merge">object merge</param>
		/// <param name="taskInformation">object taskInformation</param>
		/// <param name="table">object table</param>
		/// <param name="sheet">object sheet</param>
		/// <param name="noAuto">object noAuto</param>
		/// <param name="userID">object userID</param>
		/// <param name="databasePassWord">object databasePassWord</param>
		/// <param name="formatID">object formatID</param>
		/// <param name="map">object map</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileOpenEx(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, object openPool, object password, object writeResPassword)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpenEx", new object[]{ name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool, password, writeResPassword });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="readOnly">object readOnly</param>
		/// <param name="merge">object merge</param>
		/// <param name="taskInformation">object taskInformation</param>
		/// <param name="table">object table</param>
		/// <param name="sheet">object sheet</param>
		/// <param name="noAuto">object noAuto</param>
		/// <param name="userID">object userID</param>
		/// <param name="databasePassWord">object databasePassWord</param>
		/// <param name="formatID">object formatID</param>
		/// <param name="map">object map</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		/// <param name="ignoreReadOnlyRecommended">optional object ignoreReadOnlyRecommended</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileOpenEx(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, object openPool, object password, object writeResPassword, object ignoreReadOnlyRecommended)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpenEx", new object[]{ name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool, password, writeResPassword, ignoreReadOnlyRecommended });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="readOnly">object readOnly</param>
		/// <param name="merge">object merge</param>
		/// <param name="taskInformation">object taskInformation</param>
		/// <param name="table">object table</param>
		/// <param name="sheet">object sheet</param>
		/// <param name="noAuto">object noAuto</param>
		/// <param name="userID">object userID</param>
		/// <param name="databasePassWord">object databasePassWord</param>
		/// <param name="formatID">object formatID</param>
		/// <param name="map">object map</param>
		/// <param name="openPool">optional NetOffice.MSProjectApi.Enums.PjPoolOpen openPool = 0</param>
		/// <param name="password">optional object password</param>
		/// <param name="writeResPassword">optional object writeResPassword</param>
		/// <param name="ignoreReadOnlyRecommended">optional object ignoreReadOnlyRecommended</param>
		/// <param name="xMLName">optional object xMLName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileOpenEx(object name, object readOnly, object merge, object taskInformation, object table, object sheet, object noAuto, object userID, object databasePassWord, object formatID, object map, object openPool, object password, object writeResPassword, object ignoreReadOnlyRecommended, object xMLName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpenEx", new object[]{ name, readOnly, merge, taskInformation, table, sheet, noAuto, userID, databasePassWord, formatID, map, openPool, password, writeResPassword, ignoreReadOnlyRecommended, xMLName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="save">optional NetOffice.MSProjectApi.Enums.PjSaveType Save = 2</param>
		/// <param name="noAuto">optional object noAuto</param>
		/// <param name="checkIn">optional object checkIn</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileCloseEx(object save, object noAuto, object checkIn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileCloseEx", save, noAuto, checkIn);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileCloseEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileCloseEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="save">optional NetOffice.MSProjectApi.Enums.PjSaveType Save = 2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileCloseEx(object save)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileCloseEx", save);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="save">optional NetOffice.MSProjectApi.Enums.PjSaveType Save = 2</param>
		/// <param name="noAuto">optional object noAuto</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileCloseEx(object save, object noAuto)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileCloseEx", save, noAuto);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="save">optional NetOffice.MSProjectApi.Enums.PjSaveType Save = 2</param>
		/// <param name="checkIn">optional object checkIn</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileCloseAllEx(object save, object checkIn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileCloseAllEx", save, checkIn);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileCloseAllEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileCloseAllEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="save">optional NetOffice.MSProjectApi.Enums.PjSaveType Save = 2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FileCloseAllEx(object save)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileCloseAllEx", save);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		/// <param name="autoFilter">optional object autoFilter</param>
		/// <param name="macroVirusProtection">optional object macroVirusProtection</param>
		/// <param name="displayRecentFiles">optional object displayRecentFiles</param>
		/// <param name="recentFilesMaximum">optional object recentFilesMaximum</param>
		/// <param name="fontConversion">optional object fontConversion</param>
		/// <param name="showStartupWorkpane">optional object showStartupWorkpane</param>
		/// <param name="maxUndoRecords">optional object maxUndoRecords</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter, object macroVirusProtection, object displayRecentFiles, object recentFilesMaximum, object fontConversion, object showStartupWorkpane, object maxUndoRecords)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter, macroVirusProtection, displayRecentFiles, recentFilesMaximum, fontConversion, showStartupWorkpane, maxUndoRecords });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", planningWizard);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", planningWizard, wizardUsage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", planningWizard, wizardUsage, wizardErrors);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", planningWizard, wizardUsage, wizardErrors, wizardScheduling);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		/// <param name="autoFilter">optional object autoFilter</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		/// <param name="autoFilter">optional object autoFilter</param>
		/// <param name="macroVirusProtection">optional object macroVirusProtection</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter, object macroVirusProtection)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter, macroVirusProtection });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		/// <param name="autoFilter">optional object autoFilter</param>
		/// <param name="macroVirusProtection">optional object macroVirusProtection</param>
		/// <param name="displayRecentFiles">optional object displayRecentFiles</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter, object macroVirusProtection, object displayRecentFiles)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter, macroVirusProtection, displayRecentFiles });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		/// <param name="autoFilter">optional object autoFilter</param>
		/// <param name="macroVirusProtection">optional object macroVirusProtection</param>
		/// <param name="displayRecentFiles">optional object displayRecentFiles</param>
		/// <param name="recentFilesMaximum">optional object recentFilesMaximum</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter, object macroVirusProtection, object displayRecentFiles, object recentFilesMaximum)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter, macroVirusProtection, displayRecentFiles, recentFilesMaximum });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		/// <param name="autoFilter">optional object autoFilter</param>
		/// <param name="macroVirusProtection">optional object macroVirusProtection</param>
		/// <param name="displayRecentFiles">optional object displayRecentFiles</param>
		/// <param name="recentFilesMaximum">optional object recentFilesMaximum</param>
		/// <param name="fontConversion">optional object fontConversion</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter, object macroVirusProtection, object displayRecentFiles, object recentFilesMaximum, object fontConversion)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter, macroVirusProtection, displayRecentFiles, recentFilesMaximum, fontConversion });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="planningWizard">optional object planningWizard</param>
		/// <param name="wizardUsage">optional object wizardUsage</param>
		/// <param name="wizardErrors">optional object wizardErrors</param>
		/// <param name="wizardScheduling">optional object wizardScheduling</param>
		/// <param name="showTipOfDay">optional object showTipOfDay</param>
		/// <param name="autoAddResources">optional object autoAddResources</param>
		/// <param name="standardRate">optional object standardRate</param>
		/// <param name="overtimeRate">optional object overtimeRate</param>
		/// <param name="lastFile">optional object lastFile</param>
		/// <param name="summaryInfo">optional object summaryInfo</param>
		/// <param name="userName">optional object userName</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="showWelcome">optional object showWelcome</param>
		/// <param name="autoFilter">optional object autoFilter</param>
		/// <param name="macroVirusProtection">optional object macroVirusProtection</param>
		/// <param name="displayRecentFiles">optional object displayRecentFiles</param>
		/// <param name="recentFilesMaximum">optional object recentFilesMaximum</param>
		/// <param name="fontConversion">optional object fontConversion</param>
		/// <param name="showStartupWorkpane">optional object showStartupWorkpane</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsGeneralEx(object planningWizard, object wizardUsage, object wizardErrors, object wizardScheduling, object showTipOfDay, object autoAddResources, object standardRate, object overtimeRate, object lastFile, object summaryInfo, object userName, object setDefaults, object showWelcome, object autoFilter, object macroVirusProtection, object displayRecentFiles, object recentFilesMaximum, object fontConversion, object showStartupWorkpane)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsGeneralEx", new object[]{ planningWizard, wizardUsage, wizardErrors, wizardScheduling, showTipOfDay, autoAddResources, standardRate, overtimeRate, lastFile, summaryInfo, userName, setDefaults, showWelcome, autoFilter, macroVirusProtection, displayRecentFiles, recentFilesMaximum, fontConversion, showStartupWorkpane });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		/// <param name="displayExternalPredecessors">optional object displayExternalPredecessors</param>
		/// <param name="crossProjectLinksInfo">optional object crossProjectLinksInfo</param>
		/// <param name="acceptNewExternalData">optional object acceptNewExternalData</param>
		/// <param name="displayWindowsInTaskbar">optional object displayWindowsInTaskbar</param>
		/// <param name="displayScreentips">optional object displayScreentips</param>
		/// <param name="calendarType">optional object calendarType</param>
		/// <param name="use3DLook">optional object use3DLook</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors, object crossProjectLinksInfo, object acceptNewExternalData, object displayWindowsInTaskbar, object displayScreentips, object calendarType, object use3DLook)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors, crossProjectLinksInfo, acceptNewExternalData, displayWindowsInTaskbar, displayScreentips, calendarType, use3DLook });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", defaultView);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", defaultView, dateFormat);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", defaultView, dateFormat, projectSummary);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", defaultView, dateFormat, projectSummary, displayStatusBar);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols, displayNameIndent });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		/// <param name="displayExternalPredecessors">optional object displayExternalPredecessors</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		/// <param name="displayExternalPredecessors">optional object displayExternalPredecessors</param>
		/// <param name="crossProjectLinksInfo">optional object crossProjectLinksInfo</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors, object crossProjectLinksInfo)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors, crossProjectLinksInfo });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		/// <param name="displayExternalPredecessors">optional object displayExternalPredecessors</param>
		/// <param name="crossProjectLinksInfo">optional object crossProjectLinksInfo</param>
		/// <param name="acceptNewExternalData">optional object acceptNewExternalData</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors, object crossProjectLinksInfo, object acceptNewExternalData)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors, crossProjectLinksInfo, acceptNewExternalData });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		/// <param name="displayExternalPredecessors">optional object displayExternalPredecessors</param>
		/// <param name="crossProjectLinksInfo">optional object crossProjectLinksInfo</param>
		/// <param name="acceptNewExternalData">optional object acceptNewExternalData</param>
		/// <param name="displayWindowsInTaskbar">optional object displayWindowsInTaskbar</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors, object crossProjectLinksInfo, object acceptNewExternalData, object displayWindowsInTaskbar)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors, crossProjectLinksInfo, acceptNewExternalData, displayWindowsInTaskbar });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		/// <param name="displayExternalPredecessors">optional object displayExternalPredecessors</param>
		/// <param name="crossProjectLinksInfo">optional object crossProjectLinksInfo</param>
		/// <param name="acceptNewExternalData">optional object acceptNewExternalData</param>
		/// <param name="displayWindowsInTaskbar">optional object displayWindowsInTaskbar</param>
		/// <param name="displayScreentips">optional object displayScreentips</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors, object crossProjectLinksInfo, object acceptNewExternalData, object displayWindowsInTaskbar, object displayScreentips)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors, crossProjectLinksInfo, acceptNewExternalData, displayWindowsInTaskbar, displayScreentips });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="defaultView">optional object defaultView</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="projectSummary">optional object projectSummary</param>
		/// <param name="displayStatusBar">optional object displayStatusBar</param>
		/// <param name="displayEntryBar">optional object displayEntryBar</param>
		/// <param name="displayScrollBars">optional object displayScrollBars</param>
		/// <param name="currencySymbol">optional object currencySymbol</param>
		/// <param name="symbolPlacement">optional object symbolPlacement</param>
		/// <param name="currencyDigits">optional object currencyDigits</param>
		/// <param name="projectCurrency">optional object projectCurrency</param>
		/// <param name="displayOutlineNumber">optional object displayOutlineNumber</param>
		/// <param name="displayOutlineSymbols">optional object displayOutlineSymbols</param>
		/// <param name="displayNameIndent">optional object displayNameIndent</param>
		/// <param name="displaySummaryTasks">optional object displaySummaryTasks</param>
		/// <param name="displayOLEIndicator">optional object displayOLEIndicator</param>
		/// <param name="displayExternalSuccessors">optional object displayExternalSuccessors</param>
		/// <param name="displayExternalPredecessors">optional object displayExternalPredecessors</param>
		/// <param name="crossProjectLinksInfo">optional object crossProjectLinksInfo</param>
		/// <param name="acceptNewExternalData">optional object acceptNewExternalData</param>
		/// <param name="displayWindowsInTaskbar">optional object displayWindowsInTaskbar</param>
		/// <param name="displayScreentips">optional object displayScreentips</param>
		/// <param name="calendarType">optional object calendarType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsViewEx(object defaultView, object dateFormat, object projectSummary, object displayStatusBar, object displayEntryBar, object displayScrollBars, object currencySymbol, object symbolPlacement, object currencyDigits, object projectCurrency, object displayOutlineNumber, object displayOutlineSymbols, object displayNameIndent, object displaySummaryTasks, object displayOLEIndicator, object displayExternalSuccessors, object displayExternalPredecessors, object crossProjectLinksInfo, object acceptNewExternalData, object displayWindowsInTaskbar, object displayScreentips, object calendarType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsViewEx", new object[]{ defaultView, dateFormat, projectSummary, displayStatusBar, displayEntryBar, displayScrollBars, currencySymbol, symbolPlacement, currencyDigits, projectCurrency, displayOutlineNumber, displayOutlineSymbols, displayNameIndent, displaySummaryTasks, displayOLEIndicator, displayExternalSuccessors, displayExternalPredecessors, crossProjectLinksInfo, acceptNewExternalData, displayWindowsInTaskbar, displayScreentips, calendarType });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="calendarName">optional object calendarName</param>
		/// <param name="locked">optional object locked</param>
		/// <param name="selectedDate">optional object selectedDate</param>
		/// <param name="projectName">optional object projectName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ChangeWorkingTimeEx(object calendarName, object locked, object selectedDate, object projectName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ChangeWorkingTimeEx", calendarName, locked, selectedDate, projectName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ChangeWorkingTimeEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ChangeWorkingTimeEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="calendarName">optional object calendarName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ChangeWorkingTimeEx(object calendarName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ChangeWorkingTimeEx", calendarName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="calendarName">optional object calendarName</param>
		/// <param name="locked">optional object locked</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ChangeWorkingTimeEx(object calendarName, object locked)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ChangeWorkingTimeEx", calendarName, locked);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="calendarName">optional object calendarName</param>
		/// <param name="locked">optional object locked</param>
		/// <param name="selectedDate">optional object selectedDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool ChangeWorkingTimeEx(object calendarName, object locked, object selectedDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ChangeWorkingTimeEx", calendarName, locked, selectedDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="cellColor">optional object cellColor</param>
		/// <param name="pattern">optional object pattern</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStylesEx(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor, object pattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStylesEx", new object[]{ item, font, size, bold, italic, underline, color, cellColor, pattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStylesEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStylesEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStylesEx(object item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStylesEx", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStylesEx(object item, object font)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStylesEx", item, font);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStylesEx(object item, object font, object size)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStylesEx", item, font, size);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStylesEx(object item, object font, object size, object bold)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStylesEx", item, font, size, bold);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStylesEx(object item, object font, object size, object bold, object italic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStylesEx", new object[]{ item, font, size, bold, italic });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStylesEx(object item, object font, object size, object bold, object italic, object underline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStylesEx", new object[]{ item, font, size, bold, italic, underline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStylesEx(object item, object font, object size, object bold, object italic, object underline, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStylesEx", new object[]{ item, font, size, bold, italic, underline, color });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="cellColor">optional object cellColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool TextStylesEx(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStylesEx", new object[]{ item, font, size, bold, italic, underline, color, cellColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="reset">optional object reset</param>
		/// <param name="cellColor">optional object cellColor</param>
		/// <param name="pattern">optional object pattern</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontEx(object name, object size, object bold, object italic, object underline, object color, object reset, object cellColor, object pattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontEx", new object[]{ name, size, bold, italic, underline, color, reset, cellColor, pattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontEx(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontEx", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontEx(object name, object size)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontEx", name, size);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontEx(object name, object size, object bold)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontEx", name, size, bold);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontEx(object name, object size, object bold, object italic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontEx", name, size, bold, italic);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontEx(object name, object size, object bold, object italic, object underline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontEx", new object[]{ name, size, bold, italic, underline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontEx(object name, object size, object bold, object italic, object underline, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontEx", new object[]{ name, size, bold, italic, underline, color });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="reset">optional object reset</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontEx(object name, object size, object bold, object italic, object underline, object color, object reset)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontEx", new object[]{ name, size, bold, italic, underline, color, reset });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="reset">optional object reset</param>
		/// <param name="cellColor">optional object cellColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool FontEx(object name, object size, object bold, object italic, object underline, object color, object reset, object cellColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontEx", new object[]{ name, size, bold, italic, underline, color, reset, cellColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="monthTitle">optional object monthTitle</param>
		/// <param name="weekTitle">optional object weekTitle</param>
		/// <param name="dayTitle">optional object dayTitle</param>
		/// <param name="showPreview">optional object showPreview</param>
		/// <param name="daysPerWeek">optional object daysPerWeek</param>
		/// <param name="showTitleBeginningEndDates">optional object showTitleBeginningEndDates</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarWeekHeadingsEx(object monthTitle, object weekTitle, object dayTitle, object showPreview, object daysPerWeek, object showTitleBeginningEndDates)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarWeekHeadingsEx", new object[]{ monthTitle, weekTitle, dayTitle, showPreview, daysPerWeek, showTitleBeginningEndDates });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarWeekHeadingsEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarWeekHeadingsEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="monthTitle">optional object monthTitle</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarWeekHeadingsEx(object monthTitle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarWeekHeadingsEx", monthTitle);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="monthTitle">optional object monthTitle</param>
		/// <param name="weekTitle">optional object weekTitle</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarWeekHeadingsEx(object monthTitle, object weekTitle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarWeekHeadingsEx", monthTitle, weekTitle);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="monthTitle">optional object monthTitle</param>
		/// <param name="weekTitle">optional object weekTitle</param>
		/// <param name="dayTitle">optional object dayTitle</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarWeekHeadingsEx(object monthTitle, object weekTitle, object dayTitle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarWeekHeadingsEx", monthTitle, weekTitle, dayTitle);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="monthTitle">optional object monthTitle</param>
		/// <param name="weekTitle">optional object weekTitle</param>
		/// <param name="dayTitle">optional object dayTitle</param>
		/// <param name="showPreview">optional object showPreview</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarWeekHeadingsEx(object monthTitle, object weekTitle, object dayTitle, object showPreview)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarWeekHeadingsEx", monthTitle, weekTitle, dayTitle, showPreview);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="monthTitle">optional object monthTitle</param>
		/// <param name="weekTitle">optional object weekTitle</param>
		/// <param name="dayTitle">optional object dayTitle</param>
		/// <param name="showPreview">optional object showPreview</param>
		/// <param name="daysPerWeek">optional object daysPerWeek</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CalendarWeekHeadingsEx(object monthTitle, object weekTitle, object dayTitle, object showPreview, object daysPerWeek)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarWeekHeadingsEx", new object[]{ monthTitle, weekTitle, dayTitle, showPreview, daysPerWeek });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		/// <param name="onlyCompleteCodes">optional object onlyCompleteCodes</param>
		/// <param name="lookupTableLink">optional object lookupTableLink</param>
		/// <param name="onlyLeaves">optional object onlyLeaves</param>
		/// <param name="matchGeneric">optional object matchGeneric</param>
		/// <param name="requiredCode">optional object requiredCode</param>
		/// <param name="lookupDefault">optional object lookupDefault</param>
		/// <param name="defaultValue">optional object defaultValue</param>
		/// <param name="sortOrder">optional object sortOrder</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEditEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes, object lookupTableLink, object onlyLeaves, object matchGeneric, object requiredCode, object lookupDefault, object defaultValue, object sortOrder)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEditEx", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes, lookupTableLink, onlyLeaves, matchGeneric, requiredCode, lookupDefault, defaultValue, sortOrder });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEditEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEditEx", fieldID, level);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEditEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEditEx", fieldID, level, sequence);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEditEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEditEx", fieldID, level, sequence, length);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEditEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEditEx", new object[]{ fieldID, level, sequence, length, separator });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEditEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEditEx", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		/// <param name="onlyCompleteCodes">optional object onlyCompleteCodes</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEditEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEditEx", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		/// <param name="onlyCompleteCodes">optional object onlyCompleteCodes</param>
		/// <param name="lookupTableLink">optional object lookupTableLink</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEditEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes, object lookupTableLink)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEditEx", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes, lookupTableLink });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		/// <param name="onlyCompleteCodes">optional object onlyCompleteCodes</param>
		/// <param name="lookupTableLink">optional object lookupTableLink</param>
		/// <param name="onlyLeaves">optional object onlyLeaves</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEditEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes, object lookupTableLink, object onlyLeaves)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEditEx", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes, lookupTableLink, onlyLeaves });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		/// <param name="onlyCompleteCodes">optional object onlyCompleteCodes</param>
		/// <param name="lookupTableLink">optional object lookupTableLink</param>
		/// <param name="onlyLeaves">optional object onlyLeaves</param>
		/// <param name="matchGeneric">optional object matchGeneric</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEditEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes, object lookupTableLink, object onlyLeaves, object matchGeneric)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEditEx", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes, lookupTableLink, onlyLeaves, matchGeneric });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		/// <param name="onlyCompleteCodes">optional object onlyCompleteCodes</param>
		/// <param name="lookupTableLink">optional object lookupTableLink</param>
		/// <param name="onlyLeaves">optional object onlyLeaves</param>
		/// <param name="matchGeneric">optional object matchGeneric</param>
		/// <param name="requiredCode">optional object requiredCode</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEditEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes, object lookupTableLink, object onlyLeaves, object matchGeneric, object requiredCode)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEditEx", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes, lookupTableLink, onlyLeaves, matchGeneric, requiredCode });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		/// <param name="onlyCompleteCodes">optional object onlyCompleteCodes</param>
		/// <param name="lookupTableLink">optional object lookupTableLink</param>
		/// <param name="onlyLeaves">optional object onlyLeaves</param>
		/// <param name="matchGeneric">optional object matchGeneric</param>
		/// <param name="requiredCode">optional object requiredCode</param>
		/// <param name="lookupDefault">optional object lookupDefault</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEditEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes, object lookupTableLink, object onlyLeaves, object matchGeneric, object requiredCode, object lookupDefault)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEditEx", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes, lookupTableLink, onlyLeaves, matchGeneric, requiredCode, lookupDefault });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">object level</param>
		/// <param name="sequence">optional NetOffice.MSProjectApi.Enums.PjCustomOutlineCodeSequence Sequence = -1</param>
		/// <param name="length">optional object length</param>
		/// <param name="separator">optional object separator</param>
		/// <param name="onlyLookUpTableCodes">optional object onlyLookUpTableCodes</param>
		/// <param name="onlyCompleteCodes">optional object onlyCompleteCodes</param>
		/// <param name="lookupTableLink">optional object lookupTableLink</param>
		/// <param name="onlyLeaves">optional object onlyLeaves</param>
		/// <param name="matchGeneric">optional object matchGeneric</param>
		/// <param name="requiredCode">optional object requiredCode</param>
		/// <param name="lookupDefault">optional object lookupDefault</param>
		/// <param name="defaultValue">optional object defaultValue</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomOutlineCodeEditEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object sequence, object length, object separator, object onlyLookUpTableCodes, object onlyCompleteCodes, object lookupTableLink, object onlyLeaves, object matchGeneric, object requiredCode, object lookupDefault, object defaultValue)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomOutlineCodeEditEx", new object[]{ fieldID, level, sequence, length, separator, onlyLookUpTableCodes, onlyCompleteCodes, lookupTableLink, onlyLeaves, matchGeneric, requiredCode, lookupDefault, defaultValue });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">optional object level</param>
		/// <param name="code">optional object code</param>
		/// <param name="description">optional object description</param>
		/// <param name="phonetic">optional object phonetic</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LookUpTableAddEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object code, object description, object phonetic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LookUpTableAddEx", new object[]{ fieldID, level, code, description, phonetic });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LookUpTableAddEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LookUpTableAddEx", fieldID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">optional object level</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LookUpTableAddEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LookUpTableAddEx", fieldID, level);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">optional object level</param>
		/// <param name="code">optional object code</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LookUpTableAddEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object code)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LookUpTableAddEx", fieldID, level, code);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="level">optional object level</param>
		/// <param name="code">optional object code</param>
		/// <param name="description">optional object description</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LookUpTableAddEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object level, object code, object description)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LookUpTableAddEx", fieldID, level, code, description);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="attribute">optional NetOffice.MSProjectApi.Enums.PjCustomFieldAttribute Attribute = -1</param>
		/// <param name="summaryCalc">optional NetOffice.MSProjectApi.Enums.PjSummaryCalc SummaryCalc = -1</param>
		/// <param name="graphicalIndicators">optional object graphicalIndicators</param>
		/// <param name="required">optional object required</param>
		/// <param name="automaticallyRolldownToAssn">optional object automaticallyRolldownToAssn</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldPropertiesEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object attribute, object summaryCalc, object graphicalIndicators, object required, object automaticallyRolldownToAssn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldPropertiesEx", new object[]{ fieldID, attribute, summaryCalc, graphicalIndicators, required, automaticallyRolldownToAssn });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldPropertiesEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldPropertiesEx", fieldID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="attribute">optional NetOffice.MSProjectApi.Enums.PjCustomFieldAttribute Attribute = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldPropertiesEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object attribute)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldPropertiesEx", fieldID, attribute);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="attribute">optional NetOffice.MSProjectApi.Enums.PjCustomFieldAttribute Attribute = -1</param>
		/// <param name="summaryCalc">optional NetOffice.MSProjectApi.Enums.PjSummaryCalc SummaryCalc = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldPropertiesEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object attribute, object summaryCalc)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldPropertiesEx", fieldID, attribute, summaryCalc);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="attribute">optional NetOffice.MSProjectApi.Enums.PjCustomFieldAttribute Attribute = -1</param>
		/// <param name="summaryCalc">optional NetOffice.MSProjectApi.Enums.PjSummaryCalc SummaryCalc = -1</param>
		/// <param name="graphicalIndicators">optional object graphicalIndicators</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldPropertiesEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object attribute, object summaryCalc, object graphicalIndicators)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldPropertiesEx", fieldID, attribute, summaryCalc, graphicalIndicators);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjCustomField fieldID</param>
		/// <param name="attribute">optional NetOffice.MSProjectApi.Enums.PjCustomFieldAttribute Attribute = -1</param>
		/// <param name="summaryCalc">optional NetOffice.MSProjectApi.Enums.PjSummaryCalc SummaryCalc = -1</param>
		/// <param name="graphicalIndicators">optional object graphicalIndicators</param>
		/// <param name="required">optional object required</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool CustomFieldPropertiesEx(NetOffice.MSProjectApi.Enums.PjCustomField fieldID, object attribute, object summaryCalc, object graphicalIndicators, object required)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CustomFieldPropertiesEx", new object[]{ fieldID, attribute, summaryCalc, graphicalIndicators, required });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		/// <param name="displayProjectGuide">optional object displayProjectGuide</param>
		/// <param name="projectGuideUseDefaultFunctionalLayoutPage">optional object projectGuideUseDefaultFunctionalLayoutPage</param>
		/// <param name="projectGuideFunctionalLayoutPage">optional object projectGuideFunctionalLayoutPage</param>
		/// <param name="projectGuideUseDefaultContent">optional object projectGuideUseDefaultContent</param>
		/// <param name="projectGuideContent">optional object projectGuideContent</param>
		/// <param name="setAsDefaults">optional object setAsDefaults</param>
		/// <param name="useOMIDs">optional object useOMIDs</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterfaceEx(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide, object projectGuideUseDefaultFunctionalLayoutPage, object projectGuideFunctionalLayoutPage, object projectGuideUseDefaultContent, object projectGuideContent, object setAsDefaults, object useOMIDs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterfaceEx", new object[]{ showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide, projectGuideUseDefaultFunctionalLayoutPage, projectGuideFunctionalLayoutPage, projectGuideUseDefaultContent, projectGuideContent, setAsDefaults, useOMIDs });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterfaceEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterfaceEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterfaceEx(object showResourceAssignmentIndicators)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterfaceEx", showResourceAssignmentIndicators);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterfaceEx(object showResourceAssignmentIndicators, object showEditToStartFinishDates)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterfaceEx", showResourceAssignmentIndicators, showEditToStartFinishDates);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterfaceEx(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterfaceEx", showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterfaceEx(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterfaceEx", showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		/// <param name="displayProjectGuide">optional object displayProjectGuide</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterfaceEx(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterfaceEx", new object[]{ showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		/// <param name="displayProjectGuide">optional object displayProjectGuide</param>
		/// <param name="projectGuideUseDefaultFunctionalLayoutPage">optional object projectGuideUseDefaultFunctionalLayoutPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterfaceEx(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide, object projectGuideUseDefaultFunctionalLayoutPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterfaceEx", new object[]{ showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide, projectGuideUseDefaultFunctionalLayoutPage });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		/// <param name="displayProjectGuide">optional object displayProjectGuide</param>
		/// <param name="projectGuideUseDefaultFunctionalLayoutPage">optional object projectGuideUseDefaultFunctionalLayoutPage</param>
		/// <param name="projectGuideFunctionalLayoutPage">optional object projectGuideFunctionalLayoutPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterfaceEx(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide, object projectGuideUseDefaultFunctionalLayoutPage, object projectGuideFunctionalLayoutPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterfaceEx", new object[]{ showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide, projectGuideUseDefaultFunctionalLayoutPage, projectGuideFunctionalLayoutPage });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		/// <param name="displayProjectGuide">optional object displayProjectGuide</param>
		/// <param name="projectGuideUseDefaultFunctionalLayoutPage">optional object projectGuideUseDefaultFunctionalLayoutPage</param>
		/// <param name="projectGuideFunctionalLayoutPage">optional object projectGuideFunctionalLayoutPage</param>
		/// <param name="projectGuideUseDefaultContent">optional object projectGuideUseDefaultContent</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterfaceEx(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide, object projectGuideUseDefaultFunctionalLayoutPage, object projectGuideFunctionalLayoutPage, object projectGuideUseDefaultContent)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterfaceEx", new object[]{ showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide, projectGuideUseDefaultFunctionalLayoutPage, projectGuideFunctionalLayoutPage, projectGuideUseDefaultContent });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		/// <param name="displayProjectGuide">optional object displayProjectGuide</param>
		/// <param name="projectGuideUseDefaultFunctionalLayoutPage">optional object projectGuideUseDefaultFunctionalLayoutPage</param>
		/// <param name="projectGuideFunctionalLayoutPage">optional object projectGuideFunctionalLayoutPage</param>
		/// <param name="projectGuideUseDefaultContent">optional object projectGuideUseDefaultContent</param>
		/// <param name="projectGuideContent">optional object projectGuideContent</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterfaceEx(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide, object projectGuideUseDefaultFunctionalLayoutPage, object projectGuideFunctionalLayoutPage, object projectGuideUseDefaultContent, object projectGuideContent)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterfaceEx", new object[]{ showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide, projectGuideUseDefaultFunctionalLayoutPage, projectGuideFunctionalLayoutPage, projectGuideUseDefaultContent, projectGuideContent });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="showResourceAssignmentIndicators">optional object showResourceAssignmentIndicators</param>
		/// <param name="showEditToStartFinishDates">optional object showEditToStartFinishDates</param>
		/// <param name="showEditsToWorkUnitsDurationIndicators">optional object showEditsToWorkUnitsDurationIndicators</param>
		/// <param name="showDeletionInNameColumn">optional object showDeletionInNameColumn</param>
		/// <param name="displayProjectGuide">optional object displayProjectGuide</param>
		/// <param name="projectGuideUseDefaultFunctionalLayoutPage">optional object projectGuideUseDefaultFunctionalLayoutPage</param>
		/// <param name="projectGuideFunctionalLayoutPage">optional object projectGuideFunctionalLayoutPage</param>
		/// <param name="projectGuideUseDefaultContent">optional object projectGuideUseDefaultContent</param>
		/// <param name="projectGuideContent">optional object projectGuideContent</param>
		/// <param name="setAsDefaults">optional object setAsDefaults</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsInterfaceEx(object showResourceAssignmentIndicators, object showEditToStartFinishDates, object showEditsToWorkUnitsDurationIndicators, object showDeletionInNameColumn, object displayProjectGuide, object projectGuideUseDefaultFunctionalLayoutPage, object projectGuideFunctionalLayoutPage, object projectGuideUseDefaultContent, object projectGuideContent, object setAsDefaults)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsInterfaceEx", new object[]{ showResourceAssignmentIndicators, showEditToStartFinishDates, showEditsToWorkUnitsDurationIndicators, showDeletionInNameColumn, displayProjectGuide, projectGuideUseDefaultFunctionalLayoutPage, projectGuideFunctionalLayoutPage, projectGuideUseDefaultContent, projectGuideContent, setAsDefaults });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="localRUIDs">optional object localRUIDs</param>
		/// <param name="useImportColumn">optional object useImportColumn</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResourcesImportEx(object localRUIDs, object useImportColumn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResourcesImportEx", localRUIDs, useImportColumn);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResourcesImportEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResourcesImportEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="localRUIDs">optional object localRUIDs</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool EnterpriseResourcesImportEx(object localRUIDs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EnterpriseResourcesImportEx", localRUIDs);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="targetPage">string targetPage</param>
		/// <param name="wrapperPage">optional object wrapperPage</param>
		/// <param name="functionalityName">optional object functionalityName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LoadWebBrowserControlEx(string targetPage, object wrapperPage, object functionalityName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LoadWebBrowserControlEx", targetPage, wrapperPage, functionalityName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="targetPage">string targetPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LoadWebBrowserControlEx(string targetPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LoadWebBrowserControlEx", targetPage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="targetPage">string targetPage</param>
		/// <param name="wrapperPage">optional object wrapperPage</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool LoadWebBrowserControlEx(string targetPage, object wrapperPage)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LoadWebBrowserControlEx", targetPage, wrapperPage);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="removeFileProperties">optional object removeFileProperties</param>
		/// <param name="trustWSS">optional object trustWSS</param>
		/// <param name="legacyFileFormats">optional object legacyFileFormats</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSecurityEx(object removeFileProperties, object trustWSS, object legacyFileFormats)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSecurityEx", removeFileProperties, trustWSS, legacyFileFormats);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSecurityEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSecurityEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="removeFileProperties">optional object removeFileProperties</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSecurityEx(object removeFileProperties)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSecurityEx", removeFileProperties);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="removeFileProperties">optional object removeFileProperties</param>
		/// <param name="trustWSS">optional object trustWSS</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool OptionsSecurityEx(object removeFileProperties, object trustWSS)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSecurityEx", removeFileProperties, trustWSS);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool IsUndoingOrRedoing()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "IsUndoingOrRedoing");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="propertyID">Int32 propertyID</param>
		/// <param name="strFormula">string strFormula</param>
		/// <param name="localized">optional bool Localized = false</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string ValidateEnterpriseFormula(Int32 propertyID, string strFormula, object localized)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "ValidateEnterpriseFormula", propertyID, strFormula, localized);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="propertyID">Int32 propertyID</param>
		/// <param name="strFormula">string strFormula</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string ValidateEnterpriseFormula(Int32 propertyID, string strFormula)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "ValidateEnterpriseFormula", propertyID, strFormula);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void UndoClear()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "UndoClear");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="howManyUndos">optional Int32 HowManyUndos = 1</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Undo(object howManyUndos)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Undo", howManyUndos);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Undo()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Undo");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="howManyRedos">optional Int32 HowManyRedos = 1</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Redo(object howManyRedos)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Redo", howManyRedos);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool Redo()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Redo");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="label">string label</param>
		/// <param name="guid">optional object guid</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void OpenUndoTransaction(string label, object guid)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "OpenUndoTransaction", label, guid);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="label">string label</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void OpenUndoTransaction(string label)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "OpenUndoTransaction", label);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void CloseUndoTransaction()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "CloseUndoTransaction");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="propertyID">Int32 propertyID</param>
		/// <param name="strGraphicalIndicators">string strGraphicalIndicators</param>
		/// <param name="localized">optional bool Localized = false</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string ValidateGraphicalIndicators(Int32 propertyID, string strGraphicalIndicators, object localized)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "ValidateGraphicalIndicators", propertyID, strGraphicalIndicators, localized);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="propertyID">Int32 propertyID</param>
		/// <param name="strGraphicalIndicators">string strGraphicalIndicators</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string ValidateGraphicalIndicators(Int32 propertyID, string strGraphicalIndicators)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "ValidateGraphicalIndicators", propertyID, strGraphicalIndicators);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 GetUndoListCount()
		{
			return InvokerService.InvokeInternal.ExecuteInt32MethodGet(this, "GetUndoListCount");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 GetRedoListCount()
		{
			return InvokerService.InvokeInternal.ExecuteInt32MethodGet(this, "GetRedoListCount");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="itemIndex">Int32 itemIndex</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string GetUndoListItem(Int32 itemIndex)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "GetUndoListItem", itemIndex);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="itemIndex">Int32 itemIndex</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string GetRedoListItem(Int32 itemIndex)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "GetRedoListItem", itemIndex);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="x">Int32 x</param>
		/// <param name="y">Int32 y</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual NetOffice.MSProjectApi.Cell GetCellInfo(Int32 x, Int32 y)
		{
			return InvokerService.InvokeInternal.ExecuteKnownReferenceMethodGet<NetOffice.MSProjectApi.Cell>(this, "GetCellInfo", typeof(NetOffice.MSProjectApi.Cell), x, y);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string GetProjectServerSettingsEx()
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "GetProjectServerSettingsEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual void AfterUnloadWebBrowserControl()
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "AfterUnloadWebBrowserControl");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool IsOffline()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "IsOffline");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual bool IsReducedFunctionalityMode()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "IsReducedFunctionalityMode");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="elementType">NetOffice.MSProjectApi.Enums.PjThemeElement elementType</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual string GetThemedColor(NetOffice.MSProjectApi.Enums.PjThemeElement elementType)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "GetThemedColor", elementType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 12, 14
		/// </summary>
		/// <param name="commandName">string commandName</param>
		[SupportByVersion("MSProject", 11,12,14)]
		public virtual Int32 IsCommandEnabled(string commandName)
		{
			return InvokerService.InvokeInternal.ExecuteInt32MethodGet(this, "IsCommandEnabled", commandName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="strURL">string strURL</param>
		/// <param name="strListGuid">string strListGuid</param>
		/// <param name="strListName">string strListName</param>
		/// <param name="bstrViewGUID">string bstrViewGUID</param>
		/// <param name="bstrViewName">string bstrViewName</param>
		/// <param name="iListID">Int32 iListID</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,14)]
		public virtual string LoadTasksFromServer(string strURL, string strListGuid, string strListName, string bstrViewGUID, string bstrViewName, Int32 iListID)
		{
			return InvokerService.InvokeInternal.ExecuteStringMethodGet(this, "LoadTasksFromServer", new object[]{ strURL, strListGuid, strListName, bstrViewGUID, bstrViewName, iListID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="start">object start</param>
		/// <param name="finish">object finish</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual void PanZoomZoomTo(object start, object finish)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "PanZoomZoomTo", start, finish);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="start">object start</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual void PanZoomPanTo(object start)
		{
			 InvokerService.InvokeInternal.ExecuteMethod(this, "PanZoomPanTo", start);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="applyTo">optional object applyTo</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ViewCopy(object name, object applyTo)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewCopy", name, applyTo);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ViewCopy()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewCopy");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ViewCopy(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewCopy", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ViewReset()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewReset");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableCopy(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableCopy", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableCopy()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableCopy");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableReset()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableReset");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="onOff">optional object onOff</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool AutoSaveToGlobal(object onOff)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AutoSaveToGlobal", onOff);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool AutoSaveToGlobal()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AutoSaveToGlobal");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="applyTo">optional object applyTo</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ViewsEx(object applyTo)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewsEx", applyTo);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ViewsEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewsEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="singlePane">object singlePane</param>
		/// <param name="toggle">object toggle</param>
		/// <param name="applyTo">object applyTo</param>
		/// <param name="builtInView">optional NetOffice.MSProjectApi.Enums.PjViewType BuiltInView = -1</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ViewApplyEx(object name, object singlePane, object toggle, object applyTo, object builtInView)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewApplyEx", new object[]{ name, singlePane, toggle, applyTo, builtInView });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="singlePane">object singlePane</param>
		/// <param name="toggle">object toggle</param>
		/// <param name="applyTo">object applyTo</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ViewApplyEx(object name, object singlePane, object toggle, object applyTo)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ViewApplyEx", name, singlePane, toggle, applyTo);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool WrapText(object column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WrapText", column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool WrapText()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "WrapText");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ShowAddNewColumn(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ShowAddNewColumn", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ShowAddNewColumn()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ShowAddNewColumn");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="type">optional NetOffice.MSProjectApi.Enums.PjFieldTypes Type = 0</param>
		/// <param name="column">optional object column</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ChangeColumnDataType(object type, object column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ChangeColumnDataType", type, column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ChangeColumnDataType()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ChangeColumnDataType");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="type">optional NetOffice.MSProjectApi.Enums.PjFieldTypes Type = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ChangeColumnDataType(object type)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ChangeColumnDataType", type);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="column">optional object column</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool AddNewColumn(object column)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AddNewColumn", column);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool AddNewColumn()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AddNewColumn");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="rowHeight">optional object rowHeight</param>
		/// <param name="columnPosition">optional object columnPosition</param>
		/// <param name="alignTitle">optional object alignTitle</param>
		/// <param name="headerAutoRowHeightAdjustment">optional object headerAutoRowHeightAdjustment</param>
		/// <param name="headerTextWrap">optional object headerTextWrap</param>
		/// <param name="wrapText">optional object wrapText</param>
		/// <param name="showAddNewColumn">optional object showAddNewColumn</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight, object columnPosition, object alignTitle, object headerAutoRowHeightAdjustment, object headerTextWrap, object wrapText, object showAddNewColumn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight, columnPosition, alignTitle, headerAutoRowHeightAdjustment, headerTextWrap, wrapText, showAddNewColumn });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", name, taskTable);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", name, taskTable, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", name, taskTable, create, overwriteExisting);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="rowHeight">optional object rowHeight</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="rowHeight">optional object rowHeight</param>
		/// <param name="columnPosition">optional object columnPosition</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight, object columnPosition)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight, columnPosition });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="rowHeight">optional object rowHeight</param>
		/// <param name="columnPosition">optional object columnPosition</param>
		/// <param name="alignTitle">optional object alignTitle</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight, object columnPosition, object alignTitle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight, columnPosition, alignTitle });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="rowHeight">optional object rowHeight</param>
		/// <param name="columnPosition">optional object columnPosition</param>
		/// <param name="alignTitle">optional object alignTitle</param>
		/// <param name="headerAutoRowHeightAdjustment">optional object headerAutoRowHeightAdjustment</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight, object columnPosition, object alignTitle, object headerAutoRowHeightAdjustment)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight, columnPosition, alignTitle, headerAutoRowHeightAdjustment });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="rowHeight">optional object rowHeight</param>
		/// <param name="columnPosition">optional object columnPosition</param>
		/// <param name="alignTitle">optional object alignTitle</param>
		/// <param name="headerAutoRowHeightAdjustment">optional object headerAutoRowHeightAdjustment</param>
		/// <param name="headerTextWrap">optional object headerTextWrap</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight, object columnPosition, object alignTitle, object headerAutoRowHeightAdjustment, object headerTextWrap)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight, columnPosition, alignTitle, headerAutoRowHeightAdjustment, headerTextWrap });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="taskTable">bool taskTable</param>
		/// <param name="create">optional object create</param>
		/// <param name="overwriteExisting">optional object overwriteExisting</param>
		/// <param name="newName">optional object newName</param>
		/// <param name="fieldName">optional object fieldName</param>
		/// <param name="newFieldName">optional object newFieldName</param>
		/// <param name="title">optional object title</param>
		/// <param name="width">optional object width</param>
		/// <param name="align">optional object align</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="lockFirstColumn">optional object lockFirstColumn</param>
		/// <param name="dateFormat">optional object dateFormat</param>
		/// <param name="rowHeight">optional object rowHeight</param>
		/// <param name="columnPosition">optional object columnPosition</param>
		/// <param name="alignTitle">optional object alignTitle</param>
		/// <param name="headerAutoRowHeightAdjustment">optional object headerAutoRowHeightAdjustment</param>
		/// <param name="headerTextWrap">optional object headerTextWrap</param>
		/// <param name="wrapText">optional object wrapText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TableEditEx(string name, bool taskTable, object create, object overwriteExisting, object newName, object fieldName, object newFieldName, object title, object width, object align, object showInMenu, object lockFirstColumn, object dateFormat, object rowHeight, object columnPosition, object alignTitle, object headerAutoRowHeightAdjustment, object headerTextWrap, object wrapText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TableEditEx", new object[]{ name, taskTable, create, overwriteExisting, newName, fieldName, newFieldName, title, width, align, showInMenu, lockFirstColumn, dateFormat, rowHeight, columnPosition, alignTitle, headerAutoRowHeightAdjustment, headerTextWrap, wrapText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="siteURL">optional object siteURL</param>
		/// <param name="listName">optional object listName</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SynchronizeWithSite(object siteURL, object listName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SynchronizeWithSite", siteURL, listName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SynchronizeWithSite()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SynchronizeWithSite");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="siteURL">optional object siteURL</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SynchronizeWithSite(object siteURL)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SynchronizeWithSite", siteURL);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ManageSiteColumns()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ManageSiteColumns");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="siteURL">optional object siteURL</param>
		/// <param name="listName">optional object listName</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OpenFromSharePoint(object siteURL, object listName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OpenFromSharePoint", siteURL, listName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OpenFromSharePoint()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OpenFromSharePoint");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="siteURL">optional object siteURL</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OpenFromSharePoint(object siteURL)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OpenFromSharePoint", siteURL);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		/// <param name="to">optional object to</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		/// <param name="insideText">optional object insideText</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to, object bottomText, object topText, object leftText, object rightText, object insideText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to, bottomText, topText, leftText, rightText, insideText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", item, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", item, create, name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", item, create, name, startShape);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		/// <param name="to">optional object to</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		/// <param name="to">optional object to</param>
		/// <param name="bottomText">optional object bottomText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to, object bottomText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to, bottomText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		/// <param name="to">optional object to</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="topText">optional object topText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to, object bottomText, object topText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to, bottomText, topText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		/// <param name="to">optional object to</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="leftText">optional object leftText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to, object bottomText, object topText, object leftText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to, bottomText, topText, leftText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">string item</param>
		/// <param name="create">optional object create</param>
		/// <param name="name">optional object name</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="showFor">optional object showFor</param>
		/// <param name="row">optional object row</param>
		/// <param name="from">optional object from</param>
		/// <param name="to">optional object to</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarEditEx(string item, object create, object name, object startShape, object startType, object startColor, object middleShape, object middleColor, object middlePattern, object endShape, object endType, object endColor, object showFor, object row, object from, object to, object bottomText, object topText, object leftText, object rightText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarEditEx", new object[]{ item, create, name, startShape, startType, startColor, middleShape, middleColor, middlePattern, endShape, endType, endColor, showFor, row, from, to, bottomText, topText, leftText, rightText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		/// <param name="field3">optional object field3</param>
		/// <param name="field4">optional object field4</param>
		/// <param name="field5">optional object field5</param>
		/// <param name="splitPattern">optional object splitPattern</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarBarStylesEditEx(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1, object field2, object field3, object field4, object field5, object splitPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEditEx", new object[]{ item, bar, pattern, color, align, wrap, shadow, field1, field2, field3, field4, field5, splitPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarBarStylesEditEx(NetOffice.MSProjectApi.Enums.PjBarItem item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEditEx", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarBarStylesEditEx(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEditEx", item, bar);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarBarStylesEditEx(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEditEx", item, bar, pattern);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarBarStylesEditEx(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEditEx", item, bar, pattern, color);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarBarStylesEditEx(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEditEx", new object[]{ item, bar, pattern, color, align });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarBarStylesEditEx(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEditEx", new object[]{ item, bar, pattern, color, align, wrap });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarBarStylesEditEx(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEditEx", new object[]{ item, bar, pattern, color, align, wrap, shadow });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		/// <param name="field1">optional object field1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarBarStylesEditEx(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEditEx", new object[]{ item, bar, pattern, color, align, wrap, shadow, field1 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarBarStylesEditEx(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1, object field2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEditEx", new object[]{ item, bar, pattern, color, align, wrap, shadow, field1, field2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		/// <param name="field3">optional object field3</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarBarStylesEditEx(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1, object field2, object field3)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEditEx", new object[]{ item, bar, pattern, color, align, wrap, shadow, field1, field2, field3 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		/// <param name="field3">optional object field3</param>
		/// <param name="field4">optional object field4</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarBarStylesEditEx(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1, object field2, object field3, object field4)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEditEx", new object[]{ item, bar, pattern, color, align, wrap, shadow, field1, field2, field3, field4 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjBarItem item</param>
		/// <param name="bar">optional object bar</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		/// <param name="align">optional object align</param>
		/// <param name="wrap">optional object wrap</param>
		/// <param name="shadow">optional object shadow</param>
		/// <param name="field1">optional object field1</param>
		/// <param name="field2">optional object field2</param>
		/// <param name="field3">optional object field3</param>
		/// <param name="field4">optional object field4</param>
		/// <param name="field5">optional object field5</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarBarStylesEditEx(NetOffice.MSProjectApi.Enums.PjBarItem item, object bar, object pattern, object color, object align, object wrap, object shadow, object field1, object field2, object field3, object field4, object field5)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarBarStylesEditEx", new object[]{ item, bar, pattern, color, align, wrap, shadow, field1, field2, field3, field4, field5 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjCalendarShading item</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="color">optional object color</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarDateShadingEditEx(NetOffice.MSProjectApi.Enums.PjCalendarShading item, object pattern, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateShadingEditEx", item, pattern, color);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjCalendarShading item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarDateShadingEditEx(NetOffice.MSProjectApi.Enums.PjCalendarShading item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateShadingEditEx", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjCalendarShading item</param>
		/// <param name="pattern">optional object pattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarDateShadingEditEx(NetOffice.MSProjectApi.Enums.PjCalendarShading item, object pattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateShadingEditEx", item, pattern);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		/// <param name="bottomLeft">optional object bottomLeft</param>
		/// <param name="bottomRight">optional object bottomRight</param>
		/// <param name="topColor">optional object topColor</param>
		/// <param name="bottomColor">optional object bottomColor</param>
		/// <param name="topPattern">optional object topPattern</param>
		/// <param name="bottomPattern">optional object bottomPattern</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarDateBoxesEx(object topLeft, object topRight, object bottomLeft, object bottomRight, object topColor, object bottomColor, object topPattern, object bottomPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxesEx", new object[]{ topLeft, topRight, bottomLeft, bottomRight, topColor, bottomColor, topPattern, bottomPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarDateBoxesEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxesEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarDateBoxesEx(object topLeft)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxesEx", topLeft);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarDateBoxesEx(object topLeft, object topRight)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxesEx", topLeft, topRight);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		/// <param name="bottomLeft">optional object bottomLeft</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarDateBoxesEx(object topLeft, object topRight, object bottomLeft)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxesEx", topLeft, topRight, bottomLeft);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		/// <param name="bottomLeft">optional object bottomLeft</param>
		/// <param name="bottomRight">optional object bottomRight</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarDateBoxesEx(object topLeft, object topRight, object bottomLeft, object bottomRight)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxesEx", topLeft, topRight, bottomLeft, bottomRight);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		/// <param name="bottomLeft">optional object bottomLeft</param>
		/// <param name="bottomRight">optional object bottomRight</param>
		/// <param name="topColor">optional object topColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarDateBoxesEx(object topLeft, object topRight, object bottomLeft, object bottomRight, object topColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxesEx", new object[]{ topLeft, topRight, bottomLeft, bottomRight, topColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		/// <param name="bottomLeft">optional object bottomLeft</param>
		/// <param name="bottomRight">optional object bottomRight</param>
		/// <param name="topColor">optional object topColor</param>
		/// <param name="bottomColor">optional object bottomColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarDateBoxesEx(object topLeft, object topRight, object bottomLeft, object bottomRight, object topColor, object bottomColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxesEx", new object[]{ topLeft, topRight, bottomLeft, bottomRight, topColor, bottomColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeft">optional object topLeft</param>
		/// <param name="topRight">optional object topRight</param>
		/// <param name="bottomLeft">optional object bottomLeft</param>
		/// <param name="bottomRight">optional object bottomRight</param>
		/// <param name="topColor">optional object topColor</param>
		/// <param name="bottomColor">optional object bottomColor</param>
		/// <param name="topPattern">optional object topPattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CalendarDateBoxesEx(object topLeft, object topRight, object bottomLeft, object bottomRight, object topColor, object bottomColor, object topPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CalendarDateBoxesEx", new object[]{ topLeft, topRight, bottomLeft, bottomRight, topColor, bottomColor, topPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="reset">optional object reset</param>
		/// <param name="cellColor">optional object cellColor</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="strikethrough">optional object strikethrough</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool Font32Ex(object name, object size, object bold, object italic, object underline, object color, object reset, object cellColor, object pattern, object strikethrough)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font32Ex", new object[]{ name, size, bold, italic, underline, color, reset, cellColor, pattern, strikethrough });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool Font32Ex()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font32Ex");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool Font32Ex(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font32Ex", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool Font32Ex(object name, object size)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font32Ex", name, size);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool Font32Ex(object name, object size, object bold)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font32Ex", name, size, bold);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool Font32Ex(object name, object size, object bold, object italic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font32Ex", name, size, bold, italic);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool Font32Ex(object name, object size, object bold, object italic, object underline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font32Ex", new object[]{ name, size, bold, italic, underline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool Font32Ex(object name, object size, object bold, object italic, object underline, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font32Ex", new object[]{ name, size, bold, italic, underline, color });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="reset">optional object reset</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool Font32Ex(object name, object size, object bold, object italic, object underline, object color, object reset)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font32Ex", new object[]{ name, size, bold, italic, underline, color, reset });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="reset">optional object reset</param>
		/// <param name="cellColor">optional object cellColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool Font32Ex(object name, object size, object bold, object italic, object underline, object color, object reset, object cellColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font32Ex", new object[]{ name, size, bold, italic, underline, color, reset, cellColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="reset">optional object reset</param>
		/// <param name="cellColor">optional object cellColor</param>
		/// <param name="pattern">optional object pattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool Font32Ex(object name, object size, object bold, object italic, object underline, object color, object reset, object cellColor, object pattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Font32Ex", new object[]{ name, size, bold, italic, underline, color, reset, cellColor, pattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="cellColor">optional object cellColor</param>
		/// <param name="pattern">optional object pattern</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TextStyles32Ex(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor, object pattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles32Ex", new object[]{ item, font, size, bold, italic, underline, color, cellColor, pattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TextStyles32Ex()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles32Ex");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TextStyles32Ex(object item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles32Ex", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TextStyles32Ex(object item, object font)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles32Ex", item, font);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TextStyles32Ex(object item, object font, object size)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles32Ex", item, font, size);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TextStyles32Ex(object item, object font, object size, object bold)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles32Ex", item, font, size, bold);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TextStyles32Ex(object item, object font, object size, object bold, object italic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles32Ex", new object[]{ item, font, size, bold, italic });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TextStyles32Ex(object item, object font, object size, object bold, object italic, object underline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles32Ex", new object[]{ item, font, size, bold, italic, underline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TextStyles32Ex(object item, object font, object size, object bold, object italic, object underline, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles32Ex", new object[]{ item, font, size, bold, italic, underline, color });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="cellColor">optional object cellColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TextStyles32Ex(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TextStyles32Ex", new object[]{ item, font, size, bold, italic, underline, color, cellColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="draw">optional object draw</param>
		/// <param name="calendar">optional object calendar</param>
		/// <param name="color">optional object color</param>
		/// <param name="pattern">optional object pattern</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimescaleNonWorkingEx(object draw, object calendar, object color, object pattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleNonWorkingEx", draw, calendar, color, pattern);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimescaleNonWorkingEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleNonWorkingEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="draw">optional object draw</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimescaleNonWorkingEx(object draw)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleNonWorkingEx", draw);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="draw">optional object draw</param>
		/// <param name="calendar">optional object calendar</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimescaleNonWorkingEx(object draw, object calendar)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleNonWorkingEx", draw, calendar);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="draw">optional object draw</param>
		/// <param name="calendar">optional object calendar</param>
		/// <param name="color">optional object color</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimescaleNonWorkingEx(object draw, object calendar, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimescaleNonWorkingEx", draw, calendar, color);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjGridline item</param>
		/// <param name="normalType">optional object normalType</param>
		/// <param name="normalColor">optional object normalColor</param>
		/// <param name="interval">optional object interval</param>
		/// <param name="intervalType">optional object intervalType</param>
		/// <param name="intervalColor">optional object intervalColor</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GridlinesEditEx(NetOffice.MSProjectApi.Enums.PjGridline item, object normalType, object normalColor, object interval, object intervalType, object intervalColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GridlinesEditEx", new object[]{ item, normalType, normalColor, interval, intervalType, intervalColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjGridline item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GridlinesEditEx(NetOffice.MSProjectApi.Enums.PjGridline item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GridlinesEditEx", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjGridline item</param>
		/// <param name="normalType">optional object normalType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GridlinesEditEx(NetOffice.MSProjectApi.Enums.PjGridline item, object normalType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GridlinesEditEx", item, normalType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjGridline item</param>
		/// <param name="normalType">optional object normalType</param>
		/// <param name="normalColor">optional object normalColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GridlinesEditEx(NetOffice.MSProjectApi.Enums.PjGridline item, object normalType, object normalColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GridlinesEditEx", item, normalType, normalColor);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjGridline item</param>
		/// <param name="normalType">optional object normalType</param>
		/// <param name="normalColor">optional object normalColor</param>
		/// <param name="interval">optional object interval</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GridlinesEditEx(NetOffice.MSProjectApi.Enums.PjGridline item, object normalType, object normalColor, object interval)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GridlinesEditEx", item, normalType, normalColor, interval);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjGridline item</param>
		/// <param name="normalType">optional object normalType</param>
		/// <param name="normalColor">optional object normalColor</param>
		/// <param name="interval">optional object interval</param>
		/// <param name="intervalType">optional object intervalType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GridlinesEditEx(NetOffice.MSProjectApi.Enums.PjGridline item, object normalType, object normalColor, object interval, object intervalType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GridlinesEditEx", new object[]{ item, normalType, normalColor, interval, intervalType });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		/// <param name="proposedLeftShowAs">optional object proposedLeftShowAs</param>
		/// <param name="proposedLeftColor">optional object proposedLeftColor</param>
		/// <param name="proposedLeftPattern">optional object proposedLeftPattern</param>
		/// <param name="proposedRightShowAs">optional object proposedRightShowAs</param>
		/// <param name="proposedRightColor">optional object proposedRightColor</param>
		/// <param name="proposedRightPattern">optional object proposedRightPattern</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs, object proposedLeftColor, object proposedLeftPattern, object proposedRightShowAs, object proposedRightColor, object proposedRightPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs, proposedLeftColor, proposedLeftPattern, proposedRightShowAs, proposedRightColor, proposedRightPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", topLeftShowAs);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", topLeftShowAs, topLeftColor);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", topLeftShowAs, topLeftColor, topLeftPattern);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		/// <param name="proposedLeftShowAs">optional object proposedLeftShowAs</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		/// <param name="proposedLeftShowAs">optional object proposedLeftShowAs</param>
		/// <param name="proposedLeftColor">optional object proposedLeftColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs, object proposedLeftColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs, proposedLeftColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		/// <param name="proposedLeftShowAs">optional object proposedLeftShowAs</param>
		/// <param name="proposedLeftColor">optional object proposedLeftColor</param>
		/// <param name="proposedLeftPattern">optional object proposedLeftPattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs, object proposedLeftColor, object proposedLeftPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs, proposedLeftColor, proposedLeftPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		/// <param name="proposedLeftShowAs">optional object proposedLeftShowAs</param>
		/// <param name="proposedLeftColor">optional object proposedLeftColor</param>
		/// <param name="proposedLeftPattern">optional object proposedLeftPattern</param>
		/// <param name="proposedRightShowAs">optional object proposedRightShowAs</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs, object proposedLeftColor, object proposedLeftPattern, object proposedRightShowAs)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs, proposedLeftColor, proposedLeftPattern, proposedRightShowAs });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="topLeftShowAs">optional object topLeftShowAs</param>
		/// <param name="topLeftColor">optional object topLeftColor</param>
		/// <param name="topLeftPattern">optional object topLeftPattern</param>
		/// <param name="bottomLeftShowAs">optional object bottomLeftShowAs</param>
		/// <param name="bottomLeftColor">optional object bottomLeftColor</param>
		/// <param name="bottomLeftPattern">optional object bottomLeftPattern</param>
		/// <param name="topRightShowAs">optional object topRightShowAs</param>
		/// <param name="topRightColor">optional object topRightColor</param>
		/// <param name="topRightPattern">optional object topRightPattern</param>
		/// <param name="bottomRightShowAs">optional object bottomRightShowAs</param>
		/// <param name="bottomRightColor">optional object bottomRightColor</param>
		/// <param name="bottomRightPattern">optional object bottomRightPattern</param>
		/// <param name="showValues">optional object showValues</param>
		/// <param name="showAvailabilityLine">optional object showAvailabilityLine</param>
		/// <param name="percentBarOverlap">optional object percentBarOverlap</param>
		/// <param name="proposedLeftShowAs">optional object proposedLeftShowAs</param>
		/// <param name="proposedLeftColor">optional object proposedLeftColor</param>
		/// <param name="proposedLeftPattern">optional object proposedLeftPattern</param>
		/// <param name="proposedRightShowAs">optional object proposedRightShowAs</param>
		/// <param name="proposedRightColor">optional object proposedRightColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceGraphBarStylesEx(object topLeftShowAs, object topLeftColor, object topLeftPattern, object bottomLeftShowAs, object bottomLeftColor, object bottomLeftPattern, object topRightShowAs, object topRightColor, object topRightPattern, object bottomRightShowAs, object bottomRightColor, object bottomRightPattern, object showValues, object showAvailabilityLine, object percentBarOverlap, object proposedLeftShowAs, object proposedLeftColor, object proposedLeftPattern, object proposedRightShowAs, object proposedRightColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceGraphBarStylesEx", new object[]{ topLeftShowAs, topLeftColor, topLeftPattern, bottomLeftShowAs, bottomLeftColor, bottomLeftPattern, topRightShowAs, topRightColor, topRightPattern, bottomRightShowAs, bottomRightColor, bottomRightPattern, showValues, showAvailabilityLine, percentBarOverlap, proposedLeftShowAs, proposedLeftColor, proposedLeftPattern, proposedRightShowAs, proposedRightColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="style">NetOffice.MSProjectApi.Enums.PjBoxStyle style</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">object borderColor</param>
		/// <param name="borderWidth">object borderWidth</param>
		/// <param name="backgroundColor">object backgroundColor</param>
		/// <param name="backgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern BackgroundPattern = -1</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxStylesEditEx(NetOffice.MSProjectApi.Enums.PjBoxStyle style, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth, object backgroundColor, object backgroundPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxStylesEditEx", new object[]{ style, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor, backgroundPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="style">NetOffice.MSProjectApi.Enums.PjBoxStyle style</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">object borderColor</param>
		/// <param name="borderWidth">object borderWidth</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxStylesEditEx(NetOffice.MSProjectApi.Enums.PjBoxStyle style, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxStylesEditEx", new object[]{ style, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="style">NetOffice.MSProjectApi.Enums.PjBoxStyle style</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">object borderColor</param>
		/// <param name="borderWidth">object borderWidth</param>
		/// <param name="backgroundColor">object backgroundColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxStylesEditEx(NetOffice.MSProjectApi.Enums.PjBoxStyle style, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth, object backgroundColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxStylesEditEx", new object[]{ style, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="projectName">object projectName</param>
		/// <param name="taskID">object taskID</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">object borderColor</param>
		/// <param name="borderWidth">object borderWidth</param>
		/// <param name="backgroundColor">object backgroundColor</param>
		/// <param name="backgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern BackgroundPattern = -1</param>
		/// <param name="reset">optional object reset</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxFormatEx(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth, object backgroundColor, object backgroundPattern, object reset)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxFormatEx", new object[]{ projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor, backgroundPattern, reset });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="projectName">object projectName</param>
		/// <param name="taskID">object taskID</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">object borderColor</param>
		/// <param name="borderWidth">object borderWidth</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxFormatEx(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxFormatEx", new object[]{ projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="projectName">object projectName</param>
		/// <param name="taskID">object taskID</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">object borderColor</param>
		/// <param name="borderWidth">object borderWidth</param>
		/// <param name="backgroundColor">object backgroundColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxFormatEx(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth, object backgroundColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxFormatEx", new object[]{ projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="projectName">object projectName</param>
		/// <param name="taskID">object taskID</param>
		/// <param name="dataTemplate">object dataTemplate</param>
		/// <param name="horizontalGridlines">object horizontalGridlines</param>
		/// <param name="verticalGridlines">object verticalGridlines</param>
		/// <param name="borderShape">optional NetOffice.MSProjectApi.Enums.PjBoxShape BorderShape = -1</param>
		/// <param name="borderColor">object borderColor</param>
		/// <param name="borderWidth">object borderWidth</param>
		/// <param name="backgroundColor">object backgroundColor</param>
		/// <param name="backgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern BackgroundPattern = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxFormatEx(object projectName, object taskID, object dataTemplate, object horizontalGridlines, object verticalGridlines, object borderShape, object borderColor, object borderWidth, object backgroundColor, object backgroundPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxFormatEx", new object[]{ projectName, taskID, dataTemplate, horizontalGridlines, verticalGridlines, borderShape, borderColor, borderWidth, backgroundColor, backgroundPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cell">NetOffice.MSProjectApi.Enums.PjCell cell</param>
		/// <param name="fieldName">optional NetOffice.MSProjectApi.Enums.PjField FieldName = -1</param>
		/// <param name="font">object font</param>
		/// <param name="fontSize">object fontSize</param>
		/// <param name="fontColor">object fontColor</param>
		/// <param name="bold">object bold</param>
		/// <param name="italic">object italic</param>
		/// <param name="underline">object underline</param>
		/// <param name="horizontalAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment HorizontalAlignment = -1</param>
		/// <param name="verticalAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment VerticalAlignment = -1</param>
		/// <param name="textLineLimit">object textLineLimit</param>
		/// <param name="showLabel">object showLabel</param>
		/// <param name="label">object label</param>
		/// <param name="dateFormat">optional NetOffice.MSProjectApi.Enums.PjDateFormat DateFormat = -1</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxCellEditEx(string name, NetOffice.MSProjectApi.Enums.PjCell cell, object fieldName, object font, object fontSize, object fontColor, object bold, object italic, object underline, object horizontalAlignment, object verticalAlignment, object textLineLimit, object showLabel, object label, object dateFormat)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellEditEx", new object[]{ name, cell, fieldName, font, fontSize, fontColor, bold, italic, underline, horizontalAlignment, verticalAlignment, textLineLimit, showLabel, label, dateFormat });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cell">NetOffice.MSProjectApi.Enums.PjCell cell</param>
		/// <param name="fieldName">optional NetOffice.MSProjectApi.Enums.PjField FieldName = -1</param>
		/// <param name="font">object font</param>
		/// <param name="fontSize">object fontSize</param>
		/// <param name="fontColor">object fontColor</param>
		/// <param name="bold">object bold</param>
		/// <param name="italic">object italic</param>
		/// <param name="underline">object underline</param>
		/// <param name="horizontalAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment HorizontalAlignment = -1</param>
		/// <param name="verticalAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment VerticalAlignment = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxCellEditEx(string name, NetOffice.MSProjectApi.Enums.PjCell cell, object fieldName, object font, object fontSize, object fontColor, object bold, object italic, object underline, object horizontalAlignment, object verticalAlignment)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellEditEx", new object[]{ name, cell, fieldName, font, fontSize, fontColor, bold, italic, underline, horizontalAlignment, verticalAlignment });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cell">NetOffice.MSProjectApi.Enums.PjCell cell</param>
		/// <param name="fieldName">optional NetOffice.MSProjectApi.Enums.PjField FieldName = -1</param>
		/// <param name="font">object font</param>
		/// <param name="fontSize">object fontSize</param>
		/// <param name="fontColor">object fontColor</param>
		/// <param name="bold">object bold</param>
		/// <param name="italic">object italic</param>
		/// <param name="underline">object underline</param>
		/// <param name="horizontalAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment HorizontalAlignment = -1</param>
		/// <param name="verticalAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment VerticalAlignment = -1</param>
		/// <param name="textLineLimit">object textLineLimit</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxCellEditEx(string name, NetOffice.MSProjectApi.Enums.PjCell cell, object fieldName, object font, object fontSize, object fontColor, object bold, object italic, object underline, object horizontalAlignment, object verticalAlignment, object textLineLimit)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellEditEx", new object[]{ name, cell, fieldName, font, fontSize, fontColor, bold, italic, underline, horizontalAlignment, verticalAlignment, textLineLimit });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cell">NetOffice.MSProjectApi.Enums.PjCell cell</param>
		/// <param name="fieldName">optional NetOffice.MSProjectApi.Enums.PjField FieldName = -1</param>
		/// <param name="font">object font</param>
		/// <param name="fontSize">object fontSize</param>
		/// <param name="fontColor">object fontColor</param>
		/// <param name="bold">object bold</param>
		/// <param name="italic">object italic</param>
		/// <param name="underline">object underline</param>
		/// <param name="horizontalAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment HorizontalAlignment = -1</param>
		/// <param name="verticalAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment VerticalAlignment = -1</param>
		/// <param name="textLineLimit">object textLineLimit</param>
		/// <param name="showLabel">object showLabel</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxCellEditEx(string name, NetOffice.MSProjectApi.Enums.PjCell cell, object fieldName, object font, object fontSize, object fontColor, object bold, object italic, object underline, object horizontalAlignment, object verticalAlignment, object textLineLimit, object showLabel)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellEditEx", new object[]{ name, cell, fieldName, font, fontSize, fontColor, bold, italic, underline, horizontalAlignment, verticalAlignment, textLineLimit, showLabel });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">string name</param>
		/// <param name="cell">NetOffice.MSProjectApi.Enums.PjCell cell</param>
		/// <param name="fieldName">optional NetOffice.MSProjectApi.Enums.PjField FieldName = -1</param>
		/// <param name="font">object font</param>
		/// <param name="fontSize">object fontSize</param>
		/// <param name="fontColor">object fontColor</param>
		/// <param name="bold">object bold</param>
		/// <param name="italic">object italic</param>
		/// <param name="underline">object underline</param>
		/// <param name="horizontalAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment HorizontalAlignment = -1</param>
		/// <param name="verticalAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment VerticalAlignment = -1</param>
		/// <param name="textLineLimit">object textLineLimit</param>
		/// <param name="showLabel">object showLabel</param>
		/// <param name="label">object label</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxCellEditEx(string name, NetOffice.MSProjectApi.Enums.PjCell cell, object fieldName, object font, object fontSize, object fontColor, object bold, object italic, object underline, object horizontalAlignment, object verticalAlignment, object textLineLimit, object showLabel, object label)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxCellEditEx", new object[]{ name, cell, fieldName, font, fontSize, fontColor, bold, italic, underline, horizontalAlignment, verticalAlignment, textLineLimit, showLabel, label });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		/// <param name="showSummaryTasks">object showSummaryTasks</param>
		/// <param name="viewBackgroundColor">object viewBackgroundColor</param>
		/// <param name="viewBackgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern ViewBackgroundPattern = -1</param>
		/// <param name="showProgressMarks">optional object showProgressMarks</param>
		/// <param name="showPageBreaks">optional object showPageBreaks</param>
		/// <param name="showIDOnly">optional object showIDOnly</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLayoutEx(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks, object showSummaryTasks, object viewBackgroundColor, object viewBackgroundPattern, object showProgressMarks, object showPageBreaks, object showIDOnly)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayoutEx", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor, viewBackgroundPattern, showProgressMarks, showPageBreaks, showIDOnly });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLayoutEx(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayoutEx", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLayoutEx(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayoutEx", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLayoutEx(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayoutEx", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLayoutEx(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayoutEx", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLayoutEx(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayoutEx", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		/// <param name="showSummaryTasks">object showSummaryTasks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLayoutEx(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks, object showSummaryTasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayoutEx", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		/// <param name="showSummaryTasks">object showSummaryTasks</param>
		/// <param name="viewBackgroundColor">object viewBackgroundColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLayoutEx(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks, object showSummaryTasks, object viewBackgroundColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayoutEx", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		/// <param name="showSummaryTasks">object showSummaryTasks</param>
		/// <param name="viewBackgroundColor">object viewBackgroundColor</param>
		/// <param name="viewBackgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern ViewBackgroundPattern = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLayoutEx(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks, object showSummaryTasks, object viewBackgroundColor, object viewBackgroundPattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayoutEx", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor, viewBackgroundPattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		/// <param name="showSummaryTasks">object showSummaryTasks</param>
		/// <param name="viewBackgroundColor">object viewBackgroundColor</param>
		/// <param name="viewBackgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern ViewBackgroundPattern = -1</param>
		/// <param name="showProgressMarks">optional object showProgressMarks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLayoutEx(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks, object showSummaryTasks, object viewBackgroundColor, object viewBackgroundPattern, object showProgressMarks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayoutEx", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor, viewBackgroundPattern, showProgressMarks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="layoutMode">optional NetOffice.MSProjectApi.Enums.PjLayoutMode LayoutMode = -1</param>
		/// <param name="layoutScheme">optional NetOffice.MSProjectApi.Enums.PjLayoutScheme LayoutScheme = -1</param>
		/// <param name="summaryPrecedence">object summaryPrecedence</param>
		/// <param name="rowAlignment">optional NetOffice.MSProjectApi.Enums.PjVerticalAlignment RowAlignment = -1</param>
		/// <param name="columnAlignment">optional NetOffice.MSProjectApi.Enums.PjAlignment ColumnAlignment = -1</param>
		/// <param name="rowSpacing">object rowSpacing</param>
		/// <param name="columnSpacing">object columnSpacing</param>
		/// <param name="rowHeight">optional NetOffice.MSProjectApi.Enums.PjRowColSize RowHeight = -1</param>
		/// <param name="columnWidth">optional NetOffice.MSProjectApi.Enums.PjRowColSize ColumnWidth = -1</param>
		/// <param name="adjustForPageBreaks">object adjustForPageBreaks</param>
		/// <param name="showSummaryTasks">object showSummaryTasks</param>
		/// <param name="viewBackgroundColor">object viewBackgroundColor</param>
		/// <param name="viewBackgroundPattern">optional NetOffice.MSProjectApi.Enums.PjBackgroundPattern ViewBackgroundPattern = -1</param>
		/// <param name="showProgressMarks">optional object showProgressMarks</param>
		/// <param name="showPageBreaks">optional object showPageBreaks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLayoutEx(object layoutMode, object layoutScheme, object summaryPrecedence, object rowAlignment, object columnAlignment, object rowSpacing, object columnSpacing, object rowHeight, object columnWidth, object adjustForPageBreaks, object showSummaryTasks, object viewBackgroundColor, object viewBackgroundPattern, object showProgressMarks, object showPageBreaks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLayoutEx", new object[]{ layoutMode, layoutScheme, summaryPrecedence, rowAlignment, columnAlignment, rowSpacing, columnSpacing, rowHeight, columnWidth, adjustForPageBreaks, showSummaryTasks, viewBackgroundColor, viewBackgroundPattern, showProgressMarks, showPageBreaks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="style">optional NetOffice.MSProjectApi.Enums.PjLinkStyle Style = -1</param>
		/// <param name="showArrows">object showArrows</param>
		/// <param name="showLabels">object showLabels</param>
		/// <param name="colorMode">optional NetOffice.MSProjectApi.Enums.PjLinkColorMode ColorMode = -1</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		/// <param name="noncriticalColor">optional object noncriticalColor</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLinksEx(object style, object showArrows, object showLabels, object colorMode, object criticalColor, object noncriticalColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinksEx", new object[]{ style, showArrows, showLabels, colorMode, criticalColor, noncriticalColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="style">optional NetOffice.MSProjectApi.Enums.PjLinkStyle Style = -1</param>
		/// <param name="showArrows">object showArrows</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLinksEx(object style, object showArrows)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinksEx", style, showArrows);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="style">optional NetOffice.MSProjectApi.Enums.PjLinkStyle Style = -1</param>
		/// <param name="showArrows">object showArrows</param>
		/// <param name="showLabels">object showLabels</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLinksEx(object style, object showArrows, object showLabels)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinksEx", style, showArrows, showLabels);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="style">optional NetOffice.MSProjectApi.Enums.PjLinkStyle Style = -1</param>
		/// <param name="showArrows">object showArrows</param>
		/// <param name="showLabels">object showLabels</param>
		/// <param name="colorMode">optional NetOffice.MSProjectApi.Enums.PjLinkColorMode ColorMode = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLinksEx(object style, object showArrows, object showLabels, object colorMode)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinksEx", style, showArrows, showLabels, colorMode);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="style">optional NetOffice.MSProjectApi.Enums.PjLinkStyle Style = -1</param>
		/// <param name="showArrows">object showArrows</param>
		/// <param name="showLabels">object showLabels</param>
		/// <param name="colorMode">optional NetOffice.MSProjectApi.Enums.PjLinkColorMode ColorMode = -1</param>
		/// <param name="criticalColor">optional object criticalColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool BoxLinksEx(object style, object showArrows, object showLabels, object colorMode, object criticalColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "BoxLinksEx", new object[]{ style, showArrows, showLabels, colorMode, criticalColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		/// <param name="setDefaultsTimeUnits">optional object setDefaultsTimeUnits</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaultsHyperlink">optional object setDefaultsHyperlink</param>
		/// <param name="inCellEditing">optional object inCellEditing</param>
		/// <param name="allowTaskDelegation">optional object allowTaskDelegation</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaultsHyperlink, object inCellEditing, object allowTaskDelegation)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaultsHyperlink, inCellEditing, allowTaskDelegation });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", moveAfterReturn);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", moveAfterReturn, dragAndDrop);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", moveAfterReturn, dragAndDrop, updateLinks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		/// <param name="setDefaultsTimeUnits">optional object setDefaultsTimeUnits</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		/// <param name="setDefaultsTimeUnits">optional object setDefaultsTimeUnits</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits, object hyperlinkColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits, hyperlinkColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		/// <param name="setDefaultsTimeUnits">optional object setDefaultsTimeUnits</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits, object hyperlinkColor, object followedHyperlinkColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits, hyperlinkColor, followedHyperlinkColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		/// <param name="setDefaultsTimeUnits">optional object setDefaultsTimeUnits</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		/// <param name="setDefaultsTimeUnits">optional object setDefaultsTimeUnits</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaultsHyperlink">optional object setDefaultsHyperlink</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaultsHyperlink)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaultsHyperlink });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveAfterReturn">optional object moveAfterReturn</param>
		/// <param name="dragAndDrop">optional object dragAndDrop</param>
		/// <param name="updateLinks">optional object updateLinks</param>
		/// <param name="copyResourceUsageHeader">optional object copyResourceUsageHeader</param>
		/// <param name="phoneticInfo">optional object phoneticInfo</param>
		/// <param name="phoneticType">optional object phoneticType</param>
		/// <param name="minuteLabelDisplay">optional object minuteLabelDisplay</param>
		/// <param name="hourLabelDisplay">optional object hourLabelDisplay</param>
		/// <param name="dayLabelDisplay">optional object dayLabelDisplay</param>
		/// <param name="weekLabelDisplay">optional object weekLabelDisplay</param>
		/// <param name="yearLabelDisplay">optional object yearLabelDisplay</param>
		/// <param name="spaceBeforeTimeLabel">optional object spaceBeforeTimeLabel</param>
		/// <param name="setDefaults">optional object setDefaults</param>
		/// <param name="monthLabelDisplay">optional object monthLabelDisplay</param>
		/// <param name="setDefaultsTimeUnits">optional object setDefaultsTimeUnits</param>
		/// <param name="hyperlinkColor">optional object hyperlinkColor</param>
		/// <param name="followedHyperlinkColor">optional object followedHyperlinkColor</param>
		/// <param name="underlineHyperlinks">optional object underlineHyperlinks</param>
		/// <param name="setDefaultsHyperlink">optional object setDefaultsHyperlink</param>
		/// <param name="inCellEditing">optional object inCellEditing</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsEditEx(object moveAfterReturn, object dragAndDrop, object updateLinks, object copyResourceUsageHeader, object phoneticInfo, object phoneticType, object minuteLabelDisplay, object hourLabelDisplay, object dayLabelDisplay, object weekLabelDisplay, object yearLabelDisplay, object spaceBeforeTimeLabel, object setDefaults, object monthLabelDisplay, object setDefaultsTimeUnits, object hyperlinkColor, object followedHyperlinkColor, object underlineHyperlinks, object setDefaultsHyperlink, object inCellEditing)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsEditEx", new object[]{ moveAfterReturn, dragAndDrop, updateLinks, copyResourceUsageHeader, phoneticInfo, phoneticType, minuteLabelDisplay, hourLabelDisplay, dayLabelDisplay, weekLabelDisplay, yearLabelDisplay, spaceBeforeTimeLabel, setDefaults, monthLabelDisplay, setDefaultsTimeUnits, hyperlinkColor, followedHyperlinkColor, underlineHyperlinks, setDefaultsHyperlink, inCellEditing });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="textWidth">object textWidth</param>
		/// <param name="legendOn">object legendOn</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		/// <param name="text">optional object text</param>
		/// <param name="labelFontName">optional object labelFontName</param>
		/// <param name="labelFontSize">optional object labelFontSize</param>
		/// <param name="labelFontBold">optional object labelFontBold</param>
		/// <param name="labelFontItalic">optional object labelFontItalic</param>
		/// <param name="labelFontUnderline">optional object labelFontUnderline</param>
		/// <param name="labelFontColor">optional object labelFontColor</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupLegendEx(object name, object textWidth, object legendOn, object alignment, object text, object labelFontName, object labelFontSize, object labelFontBold, object labelFontItalic, object labelFontUnderline, object labelFontColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupLegendEx", new object[]{ name, textWidth, legendOn, alignment, text, labelFontName, labelFontSize, labelFontBold, labelFontItalic, labelFontUnderline, labelFontColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="textWidth">object textWidth</param>
		/// <param name="legendOn">object legendOn</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupLegendEx(object name, object textWidth, object legendOn)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupLegendEx", name, textWidth, legendOn);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="textWidth">object textWidth</param>
		/// <param name="legendOn">object legendOn</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupLegendEx(object name, object textWidth, object legendOn, object alignment)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupLegendEx", name, textWidth, legendOn, alignment);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="textWidth">object textWidth</param>
		/// <param name="legendOn">object legendOn</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		/// <param name="text">optional object text</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupLegendEx(object name, object textWidth, object legendOn, object alignment, object text)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupLegendEx", new object[]{ name, textWidth, legendOn, alignment, text });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="textWidth">object textWidth</param>
		/// <param name="legendOn">object legendOn</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		/// <param name="text">optional object text</param>
		/// <param name="labelFontName">optional object labelFontName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupLegendEx(object name, object textWidth, object legendOn, object alignment, object text, object labelFontName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupLegendEx", new object[]{ name, textWidth, legendOn, alignment, text, labelFontName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="textWidth">object textWidth</param>
		/// <param name="legendOn">object legendOn</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		/// <param name="text">optional object text</param>
		/// <param name="labelFontName">optional object labelFontName</param>
		/// <param name="labelFontSize">optional object labelFontSize</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupLegendEx(object name, object textWidth, object legendOn, object alignment, object text, object labelFontName, object labelFontSize)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupLegendEx", new object[]{ name, textWidth, legendOn, alignment, text, labelFontName, labelFontSize });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="textWidth">object textWidth</param>
		/// <param name="legendOn">object legendOn</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		/// <param name="text">optional object text</param>
		/// <param name="labelFontName">optional object labelFontName</param>
		/// <param name="labelFontSize">optional object labelFontSize</param>
		/// <param name="labelFontBold">optional object labelFontBold</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupLegendEx(object name, object textWidth, object legendOn, object alignment, object text, object labelFontName, object labelFontSize, object labelFontBold)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupLegendEx", new object[]{ name, textWidth, legendOn, alignment, text, labelFontName, labelFontSize, labelFontBold });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="textWidth">object textWidth</param>
		/// <param name="legendOn">object legendOn</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		/// <param name="text">optional object text</param>
		/// <param name="labelFontName">optional object labelFontName</param>
		/// <param name="labelFontSize">optional object labelFontSize</param>
		/// <param name="labelFontBold">optional object labelFontBold</param>
		/// <param name="labelFontItalic">optional object labelFontItalic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupLegendEx(object name, object textWidth, object legendOn, object alignment, object text, object labelFontName, object labelFontSize, object labelFontBold, object labelFontItalic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupLegendEx", new object[]{ name, textWidth, legendOn, alignment, text, labelFontName, labelFontSize, labelFontBold, labelFontItalic });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">object name</param>
		/// <param name="textWidth">object textWidth</param>
		/// <param name="legendOn">object legendOn</param>
		/// <param name="alignment">optional NetOffice.MSProjectApi.Enums.PjAlignment Alignment = 1</param>
		/// <param name="text">optional object text</param>
		/// <param name="labelFontName">optional object labelFontName</param>
		/// <param name="labelFontSize">optional object labelFontSize</param>
		/// <param name="labelFontBold">optional object labelFontBold</param>
		/// <param name="labelFontItalic">optional object labelFontItalic</param>
		/// <param name="labelFontUnderline">optional object labelFontUnderline</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupLegendEx(object name, object textWidth, object legendOn, object alignment, object text, object labelFontName, object labelFontSize, object labelFontBold, object labelFontItalic, object labelFontUnderline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupLegendEx", new object[]{ name, textWidth, legendOn, alignment, text, labelFontName, labelFontSize, labelFontBold, labelFontItalic, labelFontUnderline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupCalendarTextEx(object name, object item, object font, object size, object bold, object italic, object underline, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarTextEx", new object[]{ name, item, font, size, bold, italic, underline, color });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupCalendarTextEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarTextEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupCalendarTextEx(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarTextEx", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupCalendarTextEx(object name, object item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarTextEx", name, item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupCalendarTextEx(object name, object item, object font)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarTextEx", name, item, font);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupCalendarTextEx(object name, object item, object font, object size)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarTextEx", name, item, font, size);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupCalendarTextEx(object name, object item, object font, object size, object bold)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarTextEx", new object[]{ name, item, font, size, bold });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupCalendarTextEx(object name, object item, object font, object size, object bold, object italic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarTextEx", new object[]{ name, item, font, size, bold, italic });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilePageSetupCalendarTextEx(object name, object item, object font, object size, object bold, object italic, object underline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilePageSetupCalendarTextEx", new object[]{ name, item, font, size, bold, italic, underline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="curIndex">optional object curIndex</param>
		/// <param name="order">optional object order</param>
		/// <param name="fontWord">optional object fontWord</param>
		/// <param name="cellBackground">optional object cellBackground</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="shortcut">optional object shortcut</param>
		/// <param name="displayField">optional object displayField</param>
		/// <param name="fontColor">optional object fontColor</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool UsageViewEntryEx(object curIndex, object order, object fontWord, object cellBackground, object pattern, object shortcut, object displayField, object fontColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UsageViewEntryEx", new object[]{ curIndex, order, fontWord, cellBackground, pattern, shortcut, displayField, fontColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool UsageViewEntryEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UsageViewEntryEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="curIndex">optional object curIndex</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool UsageViewEntryEx(object curIndex)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UsageViewEntryEx", curIndex);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="curIndex">optional object curIndex</param>
		/// <param name="order">optional object order</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool UsageViewEntryEx(object curIndex, object order)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UsageViewEntryEx", curIndex, order);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="curIndex">optional object curIndex</param>
		/// <param name="order">optional object order</param>
		/// <param name="fontWord">optional object fontWord</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool UsageViewEntryEx(object curIndex, object order, object fontWord)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UsageViewEntryEx", curIndex, order, fontWord);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="curIndex">optional object curIndex</param>
		/// <param name="order">optional object order</param>
		/// <param name="fontWord">optional object fontWord</param>
		/// <param name="cellBackground">optional object cellBackground</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool UsageViewEntryEx(object curIndex, object order, object fontWord, object cellBackground)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UsageViewEntryEx", curIndex, order, fontWord, cellBackground);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="curIndex">optional object curIndex</param>
		/// <param name="order">optional object order</param>
		/// <param name="fontWord">optional object fontWord</param>
		/// <param name="cellBackground">optional object cellBackground</param>
		/// <param name="pattern">optional object pattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool UsageViewEntryEx(object curIndex, object order, object fontWord, object cellBackground, object pattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UsageViewEntryEx", new object[]{ curIndex, order, fontWord, cellBackground, pattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="curIndex">optional object curIndex</param>
		/// <param name="order">optional object order</param>
		/// <param name="fontWord">optional object fontWord</param>
		/// <param name="cellBackground">optional object cellBackground</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="shortcut">optional object shortcut</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool UsageViewEntryEx(object curIndex, object order, object fontWord, object cellBackground, object pattern, object shortcut)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UsageViewEntryEx", new object[]{ curIndex, order, fontWord, cellBackground, pattern, shortcut });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="curIndex">optional object curIndex</param>
		/// <param name="order">optional object order</param>
		/// <param name="fontWord">optional object fontWord</param>
		/// <param name="cellBackground">optional object cellBackground</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="shortcut">optional object shortcut</param>
		/// <param name="displayField">optional object displayField</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool UsageViewEntryEx(object curIndex, object order, object fontWord, object cellBackground, object pattern, object shortcut, object displayField)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "UsageViewEntryEx", new object[]{ curIndex, order, fontWord, cellBackground, pattern, shortcut, displayField });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="cellColor">optional object cellColor</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		/// <param name="strikethrough">optional object strikethrough</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailStylesFormatEx(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor, object pattern, object showInMenu, object strikethrough)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormatEx", new object[]{ item, font, size, bold, italic, underline, color, cellColor, pattern, showInMenu, strikethrough });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailStylesFormatEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormatEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailStylesFormatEx(object item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormatEx", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailStylesFormatEx(object item, object font)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormatEx", item, font);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailStylesFormatEx(object item, object font, object size)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormatEx", item, font, size);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailStylesFormatEx(object item, object font, object size, object bold)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormatEx", item, font, size, bold);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailStylesFormatEx(object item, object font, object size, object bold, object italic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormatEx", new object[]{ item, font, size, bold, italic });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailStylesFormatEx(object item, object font, object size, object bold, object italic, object underline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormatEx", new object[]{ item, font, size, bold, italic, underline });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailStylesFormatEx(object item, object font, object size, object bold, object italic, object underline, object color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormatEx", new object[]{ item, font, size, bold, italic, underline, color });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="cellColor">optional object cellColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailStylesFormatEx(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormatEx", new object[]{ item, font, size, bold, italic, underline, color, cellColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="cellColor">optional object cellColor</param>
		/// <param name="pattern">optional object pattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailStylesFormatEx(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor, object pattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormatEx", new object[]{ item, font, size, bold, italic, underline, color, cellColor, pattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">optional object item</param>
		/// <param name="font">optional object font</param>
		/// <param name="size">optional object size</param>
		/// <param name="bold">optional object bold</param>
		/// <param name="italic">optional object italic</param>
		/// <param name="underline">optional object underline</param>
		/// <param name="color">optional object color</param>
		/// <param name="cellColor">optional object cellColor</param>
		/// <param name="pattern">optional object pattern</param>
		/// <param name="showInMenu">optional object showInMenu</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailStylesFormatEx(object item, object font, object size, object bold, object italic, object underline, object color, object cellColor, object pattern, object showInMenu)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailStylesFormatEx", new object[]{ item, font, size, bold, italic, underline, color, cellColor, pattern, showInMenu });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="insideText">optional object insideText</param>
		/// <param name="reset">optional object reset</param>
		/// <param name="projectName">optional object projectName</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText, object topText, object bottomText, object insideText, object reset, object projectName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText, topText, bottomText, insideText, reset, projectName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", taskID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", taskID, ganttStyle);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", taskID, ganttStyle, startShape);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", taskID, ganttStyle, startShape, startType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		/// <param name="topText">optional object topText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText, object topText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText, topText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="bottomText">optional object bottomText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText, object topText, object bottomText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText, topText, bottomText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="insideText">optional object insideText</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText, object topText, object bottomText, object insideText)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText, topText, bottomText, insideText });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="ganttStyle">optional object ganttStyle</param>
		/// <param name="startShape">optional object startShape</param>
		/// <param name="startType">optional object startType</param>
		/// <param name="startColor">optional object startColor</param>
		/// <param name="middleShape">optional object middleShape</param>
		/// <param name="middlePattern">optional object middlePattern</param>
		/// <param name="middleColor">optional object middleColor</param>
		/// <param name="endShape">optional object endShape</param>
		/// <param name="endType">optional object endType</param>
		/// <param name="endColor">optional object endColor</param>
		/// <param name="leftText">optional object leftText</param>
		/// <param name="rightText">optional object rightText</param>
		/// <param name="topText">optional object topText</param>
		/// <param name="bottomText">optional object bottomText</param>
		/// <param name="insideText">optional object insideText</param>
		/// <param name="reset">optional object reset</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarFormatEx(object taskID, object ganttStyle, object startShape, object startType, object startColor, object middleShape, object middlePattern, object middleColor, object endShape, object endType, object endColor, object leftText, object rightText, object topText, object bottomText, object insideText, object reset)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarFormatEx", new object[]{ taskID, ganttStyle, startShape, startType, startColor, middleShape, middlePattern, middleColor, endShape, endType, endColor, leftText, rightText, topText, bottomText, insideText, reset });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="remove">optional object remove</param>
		/// <param name="timelineViewName">optional object timelineViewName</param>
		/// <param name="showDialog">optional object showDialog</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskOnTimeline(object taskID, object remove, object timelineViewName, object showDialog)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskOnTimeline", taskID, remove, timelineViewName, showDialog);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskOnTimeline()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskOnTimeline");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskOnTimeline(object taskID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskOnTimeline", taskID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="remove">optional object remove</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskOnTimeline(object taskID, object remove)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskOnTimeline", taskID, remove);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="remove">optional object remove</param>
		/// <param name="timelineViewName">optional object timelineViewName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskOnTimeline(object taskID, object remove, object timelineViewName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskOnTimeline", taskID, remove, timelineViewName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveForward">optional object moveForward</param>
		/// <param name="isWorkingDuration">optional object isWorkingDuration</param>
		/// <param name="moveDays">optional object moveDays</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskMove(object moveForward, object isWorkingDuration, object moveDays)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskMove", moveForward, isWorkingDuration, moveDays);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskMove()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskMove");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveForward">optional object moveForward</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskMove(object moveForward)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskMove", moveForward);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveForward">optional object moveForward</param>
		/// <param name="isWorkingDuration">optional object isWorkingDuration</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskMove(object moveForward, object isWorkingDuration)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskMove", moveForward, isWorkingDuration);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveCompleted">optional object moveCompleted</param>
		/// <param name="moveIncomplete">optional object moveIncomplete</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskMoveToStatusDate(object moveCompleted, object moveIncomplete)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskMoveToStatusDate", moveCompleted, moveIncomplete);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskMoveToStatusDate()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskMoveToStatusDate");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="moveCompleted">optional object moveCompleted</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskMoveToStatusDate(object moveCompleted)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskMoveToStatusDate", moveCompleted);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="date">optional object date</param>
		/// <param name="moveDeadline">optional object moveDeadline</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ProjectMove(object date, object moveDeadline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectMove", date, moveDeadline);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ProjectMove()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectMove");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="date">optional object date</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ProjectMove(object date)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectMove", date);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="resolveMethod">optional NetOffice.MSProjectApi.Enums.PjLevelSelectedOption ResolveMethod = 0</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelSelected(object resolveMethod)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelSelected", resolveMethod);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelSelected()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelSelected");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="style">NetOffice.MSProjectApi.Enums.PjTeamPlannerStyle style</param>
		/// <param name="fillColor">optional object fillColor</param>
		/// <param name="borderColor">optional object borderColor</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool EditTPStyle(NetOffice.MSProjectApi.Enums.PjTeamPlannerStyle style, object fillColor, object borderColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditTPStyle", style, fillColor, borderColor);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="style">NetOffice.MSProjectApi.Enums.PjTeamPlannerStyle style</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool EditTPStyle(NetOffice.MSProjectApi.Enums.PjTeamPlannerStyle style)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditTPStyle", style);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="style">NetOffice.MSProjectApi.Enums.PjTeamPlannerStyle style</param>
		/// <param name="fillColor">optional object fillColor</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool EditTPStyle(NetOffice.MSProjectApi.Enums.PjTeamPlannerStyle style, object fillColor)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "EditTPStyle", style, fillColor);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="style">NetOffice.MSProjectApi.Enums.PjTeamPlannerStyle style</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResetTPStyle(NetOffice.MSProjectApi.Enums.PjTeamPlannerStyle style)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResetTPStyle", style);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="lineMultiple">Int16 lineMultiple</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SelectTPLineHeight(Int16 lineMultiple)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTPLineHeight", lineMultiple);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjTimelineShowHide item</param>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimelineShowHide(NetOffice.MSProjectApi.Enums.PjTimelineShowHide item, object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimelineShowHide", item, show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="item">NetOffice.MSProjectApi.Enums.PjTimelineShowHide item</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimelineShowHide(NetOffice.MSProjectApi.Enums.PjTimelineShowHide item)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimelineShowHide", item);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="textOnBar">optional object textOnBar</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimelineTextOnBar(object textOnBar)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimelineTextOnBar", textOnBar);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimelineTextOnBar()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimelineTextOnBar");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="type">NetOffice.MSProjectApi.Enums.PjTimelineInsertTaskType type</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimelineInsertTask(NetOffice.MSProjectApi.Enums.PjTimelineInsertTaskType type)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimelineInsertTask", type);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="selectionOnly">optional object selectionOnly</param>
		/// <param name="exportWidth">optional object exportWidth</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimelineExport(object selectionOnly, object exportWidth)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimelineExport", selectionOnly, exportWidth);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimelineExport()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimelineExport");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="selectionOnly">optional object selectionOnly</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimelineExport(object selectionOnly)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimelineExport", selectionOnly);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="set">optional object set</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FontStrikethrough(object set)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontStrikethrough", set);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FontStrikethrough()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FontStrikethrough");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldName">object fieldName</param>
		/// <param name="filterType">optional NetOffice.MSProjectApi.Enums.PjAutoFilterType FilterType = 0</param>
		/// <param name="test1">optional object test1</param>
		/// <param name="criteria1">optional object criteria1</param>
		/// <param name="operation">optional object operation</param>
		/// <param name="test2">optional object test2</param>
		/// <param name="criteria2">optional object criteria2</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetAutoFilter(object fieldName, object filterType, object test1, object criteria1, object operation, object test2, object criteria2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetAutoFilter", new object[]{ fieldName, filterType, test1, criteria1, operation, test2, criteria2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldName">object fieldName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetAutoFilter(object fieldName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetAutoFilter", fieldName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldName">object fieldName</param>
		/// <param name="filterType">optional NetOffice.MSProjectApi.Enums.PjAutoFilterType FilterType = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetAutoFilter(object fieldName, object filterType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetAutoFilter", fieldName, filterType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldName">object fieldName</param>
		/// <param name="filterType">optional NetOffice.MSProjectApi.Enums.PjAutoFilterType FilterType = 0</param>
		/// <param name="test1">optional object test1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetAutoFilter(object fieldName, object filterType, object test1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetAutoFilter", fieldName, filterType, test1);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldName">object fieldName</param>
		/// <param name="filterType">optional NetOffice.MSProjectApi.Enums.PjAutoFilterType FilterType = 0</param>
		/// <param name="test1">optional object test1</param>
		/// <param name="criteria1">optional object criteria1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetAutoFilter(object fieldName, object filterType, object test1, object criteria1)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetAutoFilter", fieldName, filterType, test1, criteria1);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldName">object fieldName</param>
		/// <param name="filterType">optional NetOffice.MSProjectApi.Enums.PjAutoFilterType FilterType = 0</param>
		/// <param name="test1">optional object test1</param>
		/// <param name="criteria1">optional object criteria1</param>
		/// <param name="operation">optional object operation</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetAutoFilter(object fieldName, object filterType, object test1, object criteria1, object operation)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetAutoFilter", new object[]{ fieldName, filterType, test1, criteria1, operation });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldName">object fieldName</param>
		/// <param name="filterType">optional NetOffice.MSProjectApi.Enums.PjAutoFilterType FilterType = 0</param>
		/// <param name="test1">optional object test1</param>
		/// <param name="criteria1">optional object criteria1</param>
		/// <param name="operation">optional object operation</param>
		/// <param name="test2">optional object test2</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetAutoFilter(object fieldName, object filterType, object test1, object criteria1, object operation, object test2)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetAutoFilter", new object[]{ fieldName, filterType, test1, criteria1, operation, test2 });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="filterType">optional NetOffice.MSProjectApi.Enums.PjFilterViewType FilterType = 65535</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilterNew(object filterType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterNew", filterType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilterNew()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterNew");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilterClear()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterClear");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GroupNew()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GroupNew");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GroupClear()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GroupClear");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool InsertTask()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertTask");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool InsertScheduledTask()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertScheduledTask");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool InsertManualTask()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertManualTask");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool InsertMilestoneTask()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertMilestoneTask");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool InsertBlankRow()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertBlankRow");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="startOnDate">optional NetOffice.MSProjectApi.Enums.PjNewTasksStartOnDate StartOnDate = 0</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool NewTasksStartOn(object startOnDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "NewTasksStartOn", startOnDate);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool NewTasksStartOn()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "NewTasksStartOn");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="on">bool on</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GroupMaintainHierarchy(bool on)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GroupMaintainHierarchy", on);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="on">bool on</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FilterShowSummaryRows(bool on)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FilterShowSummaryRows", on);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ToggleTaskDetails()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToggleTaskDetails");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ToggleResourceDetails()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToggleResourceDetails");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarStyleCritical(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleCritical", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarStyleCritical()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleCritical");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarStyleSlack(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleSlack", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarStyleSlack()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleSlack");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarStyleLate(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleLate", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarStyleLate()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleLate");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="baseline">Int16 baseline</param>
		/// <param name="show">bool show</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarStyleBaseline(Int16 baseline, bool show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleBaseline", baseline, show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="baseline">Int16 baseline</param>
		/// <param name="show">bool show</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GanttBarStyleSlippage(Int16 baseline, bool show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GanttBarStyleSlippage", baseline, show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TogglePreventResOveralloc()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TogglePreventResOveralloc");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ToggleTPAutoExpand()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToggleTPAutoExpand");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ToggleTPUnassigned()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToggleTPUnassigned");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ToggleTPUnscheduled()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToggleTPUnscheduled");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="manual">optional object manual</param>
		/// <param name="isStickyDates">optional object isStickyDates</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetTaskMode(object manual, object isStickyDates)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTaskMode", manual, isStickyDates);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetTaskMode()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTaskMode");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="manual">optional object manual</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetTaskMode(object manual)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTaskMode", manual);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="makeActive">optional object makeActive</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool InactivateTaskToggle(object makeActive)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InactivateTaskToggle", makeActive);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool InactivateTaskToggle()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InactivateTaskToggle");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjField fieldID</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedTasks">optional object allSelectedTasks</param>
		/// <param name="create">optional object create</param>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="projectName">optional object projectName</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetTaskFieldByID(NetOffice.MSProjectApi.Enums.PjField fieldID, string value, object allSelectedTasks, object create, object taskID, object projectName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTaskFieldByID", new object[]{ fieldID, value, allSelectedTasks, create, taskID, projectName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjField fieldID</param>
		/// <param name="value">string value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetTaskFieldByID(NetOffice.MSProjectApi.Enums.PjField fieldID, string value)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTaskFieldByID", fieldID, value);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjField fieldID</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedTasks">optional object allSelectedTasks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetTaskFieldByID(NetOffice.MSProjectApi.Enums.PjField fieldID, string value, object allSelectedTasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTaskFieldByID", fieldID, value, allSelectedTasks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjField fieldID</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedTasks">optional object allSelectedTasks</param>
		/// <param name="create">optional object create</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetTaskFieldByID(NetOffice.MSProjectApi.Enums.PjField fieldID, string value, object allSelectedTasks, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTaskFieldByID", fieldID, value, allSelectedTasks, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjField fieldID</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedTasks">optional object allSelectedTasks</param>
		/// <param name="create">optional object create</param>
		/// <param name="taskID">optional object taskID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetTaskFieldByID(NetOffice.MSProjectApi.Enums.PjField fieldID, string value, object allSelectedTasks, object create, object taskID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTaskFieldByID", new object[]{ fieldID, value, allSelectedTasks, create, taskID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjField fieldID</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedResources">optional object allSelectedResources</param>
		/// <param name="create">optional object create</param>
		/// <param name="resourceID">optional object resourceID</param>
		/// <param name="projectName">optional object projectName</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetResourceFieldByID(NetOffice.MSProjectApi.Enums.PjField fieldID, string value, object allSelectedResources, object create, object resourceID, object projectName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetResourceFieldByID", new object[]{ fieldID, value, allSelectedResources, create, resourceID, projectName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjField fieldID</param>
		/// <param name="value">string value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetResourceFieldByID(NetOffice.MSProjectApi.Enums.PjField fieldID, string value)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetResourceFieldByID", fieldID, value);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjField fieldID</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedResources">optional object allSelectedResources</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetResourceFieldByID(NetOffice.MSProjectApi.Enums.PjField fieldID, string value, object allSelectedResources)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetResourceFieldByID", fieldID, value, allSelectedResources);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjField fieldID</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedResources">optional object allSelectedResources</param>
		/// <param name="create">optional object create</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetResourceFieldByID(NetOffice.MSProjectApi.Enums.PjField fieldID, string value, object allSelectedResources, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetResourceFieldByID", fieldID, value, allSelectedResources, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="fieldID">NetOffice.MSProjectApi.Enums.PjField fieldID</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedResources">optional object allSelectedResources</param>
		/// <param name="create">optional object create</param>
		/// <param name="resourceID">optional object resourceID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetResourceFieldByID(NetOffice.MSProjectApi.Enums.PjField fieldID, string value, object allSelectedResources, object create, object resourceID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetResourceFieldByID", new object[]{ fieldID, value, allSelectedResources, create, resourceID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="timeline">optional object timeline</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailsPaneToggle(object timeline)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailsPaneToggle", timeline);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DetailsPaneToggle()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DetailsPaneToggle");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		/// <param name="fieldID">optional object fieldID</param>
		/// <param name="testID">optional object testID</param>
		/// <param name="searchAllFields">optional object searchAllFields</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FindEx(object field, object test, object value, object next, object matchCase, object fieldID, object testID, object searchAllFields)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FindEx", new object[]{ field, test, value, next, matchCase, fieldID, testID, searchAllFields });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FindEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FindEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FindEx(object field)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FindEx", field);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FindEx(object field, object test)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FindEx", field, test);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FindEx(object field, object test, object value)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FindEx", field, test, value);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="next">optional object next</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FindEx(object field, object test, object value, object next)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FindEx", field, test, value, next);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FindEx(object field, object test, object value, object next, object matchCase)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FindEx", new object[]{ field, test, value, next, matchCase });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		/// <param name="fieldID">optional object fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FindEx(object field, object test, object value, object next, object matchCase, object fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FindEx", new object[]{ field, test, value, next, matchCase, fieldID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		/// <param name="fieldID">optional object fieldID</param>
		/// <param name="testID">optional object testID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool FindEx(object field, object test, object value, object next, object matchCase, object fieldID, object testID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FindEx", new object[]{ field, test, value, next, matchCase, fieldID, testID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="replacement">optional object replacement</param>
		/// <param name="replaceAll">optional object replaceAll</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		/// <param name="fieldID">optional object fieldID</param>
		/// <param name="testID">optional object testID</param>
		/// <param name="searchAllFields">optional object searchAllFields</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReplaceEx(object field, object test, object value, object replacement, object replaceAll, object next, object matchCase, object fieldID, object testID, object searchAllFields)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReplaceEx", new object[]{ field, test, value, replacement, replaceAll, next, matchCase, fieldID, testID, searchAllFields });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReplaceEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReplaceEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReplaceEx(object field)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReplaceEx", field);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReplaceEx(object field, object test)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReplaceEx", field, test);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReplaceEx(object field, object test, object value)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReplaceEx", field, test, value);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="replacement">optional object replacement</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReplaceEx(object field, object test, object value, object replacement)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReplaceEx", field, test, value, replacement);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="replacement">optional object replacement</param>
		/// <param name="replaceAll">optional object replaceAll</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReplaceEx(object field, object test, object value, object replacement, object replaceAll)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReplaceEx", new object[]{ field, test, value, replacement, replaceAll });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="replacement">optional object replacement</param>
		/// <param name="replaceAll">optional object replaceAll</param>
		/// <param name="next">optional object next</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReplaceEx(object field, object test, object value, object replacement, object replaceAll, object next)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReplaceEx", new object[]{ field, test, value, replacement, replaceAll, next });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="replacement">optional object replacement</param>
		/// <param name="replaceAll">optional object replaceAll</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReplaceEx(object field, object test, object value, object replacement, object replaceAll, object next, object matchCase)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReplaceEx", new object[]{ field, test, value, replacement, replaceAll, next, matchCase });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="replacement">optional object replacement</param>
		/// <param name="replaceAll">optional object replaceAll</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		/// <param name="fieldID">optional object fieldID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReplaceEx(object field, object test, object value, object replacement, object replaceAll, object next, object matchCase, object fieldID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReplaceEx", new object[]{ field, test, value, replacement, replaceAll, next, matchCase, fieldID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">optional object field</param>
		/// <param name="test">optional object test</param>
		/// <param name="value">optional object value</param>
		/// <param name="replacement">optional object replacement</param>
		/// <param name="replaceAll">optional object replaceAll</param>
		/// <param name="next">optional object next</param>
		/// <param name="matchCase">optional object matchCase</param>
		/// <param name="fieldID">optional object fieldID</param>
		/// <param name="testID">optional object testID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReplaceEx(object field, object test, object value, object replacement, object replaceAll, object next, object matchCase, object fieldID, object testID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReplaceEx", new object[]{ field, test, value, replacement, replaceAll, next, matchCase, fieldID, testID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SelectToEnd()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectToEnd");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SelectTaskAssns()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTaskAssns");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="resourceUniqueID">optional object resourceUniqueID</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReassignSelectedAssns(object resourceUniqueID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReassignSelectedAssns", resourceUniqueID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReassignSelectedAssns()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReassignSelectedAssns");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedTasks">optional object allSelectedTasks</param>
		/// <param name="create">optional object create</param>
		/// <param name="taskID">optional object taskID</param>
		/// <param name="projectName">optional object projectName</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetTPField(string field, string value, object allSelectedTasks, object create, object taskID, object projectName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTPField", new object[]{ field, value, allSelectedTasks, create, taskID, projectName });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetTPField(string field, string value)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTPField", field, value);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedTasks">optional object allSelectedTasks</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetTPField(string field, string value, object allSelectedTasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTPField", field, value, allSelectedTasks);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedTasks">optional object allSelectedTasks</param>
		/// <param name="create">optional object create</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetTPField(string field, string value, object allSelectedTasks, object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTPField", field, value, allSelectedTasks, create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="field">string field</param>
		/// <param name="value">string value</param>
		/// <param name="allSelectedTasks">optional object allSelectedTasks</param>
		/// <param name="create">optional object create</param>
		/// <param name="taskID">optional object taskID</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetTPField(string field, string value, object allSelectedTasks, object create, object taskID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetTPField", new object[]{ field, value, allSelectedTasks, create, taskID });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="filename">object filename</param>
		/// <param name="fileType">optional NetOffice.MSProjectApi.Enums.PjDocExportType FileType = 0</param>
		/// <param name="includeDocumentProperties">optional object includeDocumentProperties</param>
		/// <param name="includeDocumentMarkup">optional object includeDocumentMarkup</param>
		/// <param name="archiveFormat">optional object archiveFormat</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DocumentExport(object filename, object fileType, object includeDocumentProperties, object includeDocumentMarkup, object archiveFormat, object fromDate, object toDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocumentExport", new object[]{ filename, fileType, includeDocumentProperties, includeDocumentMarkup, archiveFormat, fromDate, toDate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="filename">object filename</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DocumentExport(object filename)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocumentExport", filename);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="filename">object filename</param>
		/// <param name="fileType">optional NetOffice.MSProjectApi.Enums.PjDocExportType FileType = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DocumentExport(object filename, object fileType)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocumentExport", filename, fileType);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="filename">object filename</param>
		/// <param name="fileType">optional NetOffice.MSProjectApi.Enums.PjDocExportType FileType = 0</param>
		/// <param name="includeDocumentProperties">optional object includeDocumentProperties</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DocumentExport(object filename, object fileType, object includeDocumentProperties)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocumentExport", filename, fileType, includeDocumentProperties);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="filename">object filename</param>
		/// <param name="fileType">optional NetOffice.MSProjectApi.Enums.PjDocExportType FileType = 0</param>
		/// <param name="includeDocumentProperties">optional object includeDocumentProperties</param>
		/// <param name="includeDocumentMarkup">optional object includeDocumentMarkup</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DocumentExport(object filename, object fileType, object includeDocumentProperties, object includeDocumentMarkup)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocumentExport", filename, fileType, includeDocumentProperties, includeDocumentMarkup);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="filename">object filename</param>
		/// <param name="fileType">optional NetOffice.MSProjectApi.Enums.PjDocExportType FileType = 0</param>
		/// <param name="includeDocumentProperties">optional object includeDocumentProperties</param>
		/// <param name="includeDocumentMarkup">optional object includeDocumentMarkup</param>
		/// <param name="archiveFormat">optional object archiveFormat</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DocumentExport(object filename, object fileType, object includeDocumentProperties, object includeDocumentMarkup, object archiveFormat)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocumentExport", new object[]{ filename, fileType, includeDocumentProperties, includeDocumentMarkup, archiveFormat });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="filename">object filename</param>
		/// <param name="fileType">optional NetOffice.MSProjectApi.Enums.PjDocExportType FileType = 0</param>
		/// <param name="includeDocumentProperties">optional object includeDocumentProperties</param>
		/// <param name="includeDocumentMarkup">optional object includeDocumentMarkup</param>
		/// <param name="archiveFormat">optional object archiveFormat</param>
		/// <param name="fromDate">optional object fromDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool DocumentExport(object filename, object fileType, object includeDocumentProperties, object includeDocumentMarkup, object archiveFormat, object fromDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DocumentExport", new object[]{ filename, fileType, includeDocumentProperties, includeDocumentMarkup, archiveFormat, fromDate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="create">optional object create</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskDeliverableCreate(object create)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskDeliverableCreate", create);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskDeliverableCreate()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskDeliverableCreate");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskDeliverableSync()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskDeliverableSync");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskDependencySync()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskDependencySync");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskRespectLinks()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskRespectLinks");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="set">optional object set</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetShowTaskWarnings(object set)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetShowTaskWarnings", set);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetShowTaskWarnings()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetShowTaskWarnings");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="set">optional object set</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetShowTaskSuggestions(object set)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetShowTaskSuggestions", set);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetShowTaskSuggestions()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetShowTaskSuggestions");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ShowIgnoredTaskWarnings()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ShowIgnoredTaskWarnings");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="type">optional NetOffice.MSProjectApi.Enums.PjResourceTypes Type = 0</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool InsertResource(object type)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertResource", type);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool InsertResource()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertResource");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool InsertSummaryTask()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "InsertSummaryTask");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="date">optional object date</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ChangeStatusDate(object date)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ChangeStatusDate", date);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ChangeStatusDate()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ChangeStatusDate");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="filename">object filename</param>
		/// <param name="taskTable">object taskTable</param>
		/// <param name="resourceTable">object resourceTable</param>
		/// <param name="items">optional NetOffice.MSProjectApi.Enums.PjCompareVersionItems Items = 6</param>
		/// <param name="columns">optional NetOffice.MSProjectApi.Enums.PjCompareVersionColumns Columns = 0</param>
		/// <param name="showLegend">optional object showLegend</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CreateComparisonReport(object filename, object taskTable, object resourceTable, object items, object columns, object showLegend)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateComparisonReport", new object[]{ filename, taskTable, resourceTable, items, columns, showLegend });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="filename">object filename</param>
		/// <param name="taskTable">object taskTable</param>
		/// <param name="resourceTable">object resourceTable</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CreateComparisonReport(object filename, object taskTable, object resourceTable)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateComparisonReport", filename, taskTable, resourceTable);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="filename">object filename</param>
		/// <param name="taskTable">object taskTable</param>
		/// <param name="resourceTable">object resourceTable</param>
		/// <param name="items">optional NetOffice.MSProjectApi.Enums.PjCompareVersionItems Items = 6</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CreateComparisonReport(object filename, object taskTable, object resourceTable, object items)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateComparisonReport", filename, taskTable, resourceTable, items);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="filename">object filename</param>
		/// <param name="taskTable">object taskTable</param>
		/// <param name="resourceTable">object resourceTable</param>
		/// <param name="items">optional NetOffice.MSProjectApi.Enums.PjCompareVersionItems Items = 6</param>
		/// <param name="columns">optional NetOffice.MSProjectApi.Enums.PjCompareVersionColumns Columns = 0</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CreateComparisonReport(object filename, object taskTable, object resourceTable, object items, object columns)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateComparisonReport", new object[]{ filename, taskTable, resourceTable, items, columns });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CompareProjectVersions()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CompareProjectVersions");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskComparison()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskComparison");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ResourceComparison()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ResourceComparison");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool GoToItemInVersions()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "GoToItemInVersions");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CloseComparison()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CloseComparison");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CompareProjectsLegendToggle()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CompareProjectsLegendToggle");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">Int32 taskID</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ClearConstraint(Int32 taskID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ClearConstraint", taskID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TaskInspector()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TaskInspector");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="defaultTab">optional NetOffice.MSProjectApi.Enums.PjOptionsSecurityTab DefaultTab = 0</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsSecurityTab(object defaultTab)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSecurityTab", defaultTab);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OptionsSecurityTab()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OptionsSecurityTab");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="action">optional object action</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReplanAssignments(object action)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReplanAssignments", action);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ReplanAssignments()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReplanAssignments");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="set">optional object set</param>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetIgnoreWarningsForTask(object set)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetIgnoreWarningsForTask", set);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[EditorBrowsable(EditorBrowsableState.Never), Browsable(false)]
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SetIgnoreWarningsForTask()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetIgnoreWarningsForTask");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="page">optional NetOffice.MSProjectApi.Enums.PjServerPage Page = 0</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OpenServerPage(object page)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OpenServerPage", page);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool OpenServerPage()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OpenServerPage");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="numLines">optional object numLines</param>
		/// <param name="minimized">optional object minimized</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimelineFormat(object numLines, object minimized)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimelineFormat", numLines, minimized);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimelineFormat()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimelineFormat");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="numLines">optional object numLines</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimelineFormat(object numLines)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimelineFormat", numLines);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="periodBasis">optional object periodBasis</param>
		/// <param name="levelIndividualAssignments">optional object levelIndividualAssignments</param>
		/// <param name="levelingCanSplit">optional object levelingCanSplit</param>
		/// <param name="levelProposedBookings">optional object levelProposedBookings</param>
		/// <param name="levelPinnedTasks">optional object levelPinnedTasks</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelingOptionsEx(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate, object toDate, object periodBasis, object levelIndividualAssignments, object levelingCanSplit, object levelProposedBookings, object levelPinnedTasks)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptionsEx", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate, toDate, periodBasis, levelIndividualAssignments, levelingCanSplit, levelProposedBookings, levelPinnedTasks });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelingOptionsEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptionsEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelingOptionsEx(object automatic)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptionsEx", automatic);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelingOptionsEx(object automatic, object delayInSlack)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptionsEx", automatic, delayInSlack);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelingOptionsEx(object automatic, object delayInSlack, object autoClearLeveling)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptionsEx", automatic, delayInSlack, autoClearLeveling);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelingOptionsEx(object automatic, object delayInSlack, object autoClearLeveling, object order)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptionsEx", automatic, delayInSlack, autoClearLeveling, order);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelingOptionsEx(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptionsEx", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		/// <param name="fromDate">optional object fromDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelingOptionsEx(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptionsEx", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelingOptionsEx(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate, object toDate)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptionsEx", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate, toDate });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="periodBasis">optional object periodBasis</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelingOptionsEx(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate, object toDate, object periodBasis)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptionsEx", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate, toDate, periodBasis });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="periodBasis">optional object periodBasis</param>
		/// <param name="levelIndividualAssignments">optional object levelIndividualAssignments</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelingOptionsEx(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate, object toDate, object periodBasis, object levelIndividualAssignments)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptionsEx", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate, toDate, periodBasis, levelIndividualAssignments });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="periodBasis">optional object periodBasis</param>
		/// <param name="levelIndividualAssignments">optional object levelIndividualAssignments</param>
		/// <param name="levelingCanSplit">optional object levelingCanSplit</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelingOptionsEx(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate, object toDate, object periodBasis, object levelIndividualAssignments, object levelingCanSplit)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptionsEx", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate, toDate, periodBasis, levelIndividualAssignments, levelingCanSplit });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="automatic">optional object automatic</param>
		/// <param name="delayInSlack">optional object delayInSlack</param>
		/// <param name="autoClearLeveling">optional object autoClearLeveling</param>
		/// <param name="order">optional object order</param>
		/// <param name="levelEntireProject">optional object levelEntireProject</param>
		/// <param name="fromDate">optional object fromDate</param>
		/// <param name="toDate">optional object toDate</param>
		/// <param name="periodBasis">optional object periodBasis</param>
		/// <param name="levelIndividualAssignments">optional object levelIndividualAssignments</param>
		/// <param name="levelingCanSplit">optional object levelingCanSplit</param>
		/// <param name="levelProposedBookings">optional object levelProposedBookings</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool LevelingOptionsEx(object automatic, object delayInSlack, object autoClearLeveling, object order, object levelEntireProject, object fromDate, object toDate, object periodBasis, object levelIndividualAssignments, object levelingCanSplit, object levelProposedBookings)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LevelingOptionsEx", new object[]{ automatic, delayInSlack, autoClearLeveling, order, levelEntireProject, fromDate, toDate, periodBasis, levelIndividualAssignments, levelingCanSplit, levelProposedBookings });
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="color">Int32 color</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SegmentFillColor(Int32 color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SegmentFillColor", color);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="color">Int32 color</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SegmentBorderColor(Int32 color)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SegmentBorderColor", color);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimelineGotoSelectedTask()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimelineGotoSelectedTask");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="resourceUniqueID">optional object resourceUniqueID</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ToggleTPResourceExpand(object resourceUniqueID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToggleTPResourceExpand", resourceUniqueID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ToggleTPResourceExpand()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ToggleTPResourceExpand");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="filename">optional object filename</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CleanupProjectFromCache(object filename)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CleanupProjectFromCache", filename);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool CleanupProjectFromCache()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CleanupProjectFromCache");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool ShareProjectOnline()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ShareProjectOnline");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskUniqueID">optional object taskUniqueID</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SelectTPTask(object taskUniqueID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTPTask", taskUniqueID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool SelectTPTask()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTPTask");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		/// <param name="taskID">optional object taskID</param>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool RescheduleToNextAvailable(object taskID)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "RescheduleToNextAvailable", taskID);
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool RescheduleToNextAvailable()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "RescheduleToNextAvailable");
		}

		/// <summary>
		/// SupportByVersion MSProject 11, 14
		/// </summary>
		[SupportByVersion("MSProject", 11,14)]
		public virtual bool TimelineViewToggle()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "TimelineViewToggle");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool Table()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "Table");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool ReportsDialog()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ReportsDialog");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="percent">optional object percent</param>
		/// <param name="entire">optional object entire</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool ZoomReport(object percent, object entire)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomReport", percent, entire);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool ZoomReport()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomReport");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="percent">optional object percent</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool ZoomReport(object percent)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ZoomReport", percent);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="name">optional object name</param>
		/// <param name="applyTo">optional object applyTo</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool ApplyReport(object name, object applyTo)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ApplyReport", name, applyTo);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool ApplyReport()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ApplyReport");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="name">optional object name</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool ApplyReport(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ApplyReport", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool FileOpenOrCreate(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpenOrCreate", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool FileOpenOrCreate()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpenOrCreate");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool ShowOSFTaskPane(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ShowOSFTaskPane", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool ShowOSFTaskPane()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ShowOSFTaskPane");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="parentSiteUrl">optional object parentSiteUrl</param>
		/// <param name="newSiteName">optional object newSiteName</param>
		/// <param name="launchBrowser">optional object launchBrowser</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool CreateProjectSite(object parentSiteUrl, object newSiteName, object launchBrowser)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateProjectSite", parentSiteUrl, newSiteName, launchBrowser);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool CreateProjectSite()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateProjectSite");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="parentSiteUrl">optional object parentSiteUrl</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool CreateProjectSite(object parentSiteUrl)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateProjectSite", parentSiteUrl);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="parentSiteUrl">optional object parentSiteUrl</param>
		/// <param name="newSiteName">optional object newSiteName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool CreateProjectSite(object parentSiteUrl, object newSiteName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CreateProjectSite", parentSiteUrl, newSiteName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="siteURL">optional object siteURL</param>
		/// <param name="taskListName">optional object taskListName</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool LinkToTaskList(object siteURL, object taskListName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LinkToTaskList", siteURL, taskListName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool LinkToTaskList()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LinkToTaskList");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="siteURL">optional object siteURL</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool LinkToTaskList(object siteURL)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "LinkToTaskList", siteURL);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="uRL">optional object uRL</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool OpenBrowser(object uRL)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OpenBrowser", uRL);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool OpenBrowser()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "OpenBrowser");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool PasteAsPicture()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PasteAsPicture");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool PasteSourceFormatting()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PasteSourceFormatting");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool PasteDestFormatting()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "PasteDestFormatting");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool CopyReport()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "CopyReport");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="name">optional object name</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool ProjectCheckOut(object name)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectCheckOut", name);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool ProjectCheckOut()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ProjectCheckOut");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool SelectTable()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SelectTable");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool DistributeTableRows()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DistributeTableRows");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool DistributeTableColumns()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "DistributeTableColumns");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool SetRTLTable()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetRTLTable");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool SetLTRTable()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SetLTRTable");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool AlignTableCellTop()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AlignTableCellTop");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool AlignTableCellVerticalCenter()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AlignTableCellVerticalCenter");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool AlignTableCellBottom()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AlignTableCellBottom");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="templateId">optional NetOffice.MSProjectApi.Enums.PjReportLayoutTemplateId TemplateId = 0</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool ApplyReportLayoutTemplate(object templateId)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ApplyReportLayoutTemplate", templateId);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool ApplyReportLayoutTemplate()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ApplyReportLayoutTemplate");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="siteURL">optional object siteURL</param>
		/// <param name="listName">optional object listName</param>
		/// <param name="doSync">optional object doSync</param>
		/// <param name="fromSave">optional object fromSave</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool SynchronizeWithSiteEx(object siteURL, object listName, object doSync, object fromSave)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SynchronizeWithSiteEx", siteURL, listName, doSync, fromSave);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool SynchronizeWithSiteEx()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SynchronizeWithSiteEx");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="siteURL">optional object siteURL</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool SynchronizeWithSiteEx(object siteURL)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SynchronizeWithSiteEx", siteURL);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="siteURL">optional object siteURL</param>
		/// <param name="listName">optional object listName</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool SynchronizeWithSiteEx(object siteURL, object listName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SynchronizeWithSiteEx", siteURL, listName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="siteURL">optional object siteURL</param>
		/// <param name="listName">optional object listName</param>
		/// <param name="doSync">optional object doSync</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool SynchronizeWithSiteEx(object siteURL, object listName, object doSync)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "SynchronizeWithSiteEx", siteURL, listName, doSync);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="set">optional object set</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool HighlightPredecessors(object set)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HighlightPredecessors", set);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool HighlightPredecessors()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HighlightPredecessors");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="set">optional object set</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool HighlightDrivingPredecessors(object set)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HighlightDrivingPredecessors", set);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool HighlightDrivingPredecessors()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HighlightDrivingPredecessors");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="set">optional object set</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool HighlightSuccessors(object set)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HighlightSuccessors", set);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool HighlightSuccessors()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HighlightSuccessors");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="set">optional object set</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool HighlightDrivenSuccessors(object set)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HighlightDrivenSuccessors", set);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool HighlightDrivenSuccessors()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "HighlightDrivenSuccessors");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool RemoveHighlight()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "RemoveHighlight");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="show">optional object show</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool ShowReportDataPane(object show)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ShowReportDataPane", show);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool ShowReportDataPane()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "ShowReportDataPane");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool RenameReport()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "RenameReport");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[SupportByVersion("MSProject", 11)]
		public virtual bool FileOpenUsingBackstage()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "FileOpenUsingBackstage");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="projectField">optional NetOffice.MSProjectApi.Enums.PjField ProjectField = -1</param>
		/// <param name="sharePointName">optional object sharePointName</param>
		[SupportByVersion("MSProject", 11)]
		public virtual bool AddSiteColumn(object projectField, object sharePointName)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AddSiteColumn", projectField, sharePointName);
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool AddSiteColumn()
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AddSiteColumn");
		}

		/// <summary>
		/// SupportByVersion MSProject 11
		/// </summary>
		/// <param name="projectField">optional NetOffice.MSProjectApi.Enums.PjField ProjectField = -1</param>
		[CustomMethod]
		[SupportByVersion("MSProject", 11)]
		public virtual bool AddSiteColumn(object projectField)
		{
			return InvokerService.InvokeInternal.ExecuteBoolMethodGet(this, "AddSiteColumn", projectField);
		}

		#endregion

		#pragma warning restore
	}
}


